// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail_system.proto

#include "mail_system.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PRO {
constexpr MailUserBox::MailUserBox(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_iid_(int64_t{0})
  , sysmail_sync_(int64_t{0})
  , lastlist_mail_(int64_t{0})
  , ver__(0){}
struct MailUserBoxDefaultTypeInternal {
  constexpr MailUserBoxDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MailUserBoxDefaultTypeInternal() {}
  union {
    MailUserBox _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MailUserBoxDefaultTypeInternal _MailUserBox_default_instance_;
constexpr Mail_NewMail_ntf::Mail_NewMail_ntf(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Mail_NewMail_ntfDefaultTypeInternal {
  constexpr Mail_NewMail_ntfDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_NewMail_ntfDefaultTypeInternal() {}
  union {
    Mail_NewMail_ntf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_NewMail_ntfDefaultTypeInternal _Mail_NewMail_ntf_default_instance_;
constexpr Mail_MailGet_req::Mail_MailGet_req(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mailiid_(int64_t{0})
  , next_(false)
  , num_(0){}
struct Mail_MailGet_reqDefaultTypeInternal {
  constexpr Mail_MailGet_reqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_MailGet_reqDefaultTypeInternal() {}
  union {
    Mail_MailGet_req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_MailGet_reqDefaultTypeInternal _Mail_MailGet_req_default_instance_;
constexpr Mail_MailGet_ack::Mail_MailGet_ack(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mails_()
  , totle_(0){}
struct Mail_MailGet_ackDefaultTypeInternal {
  constexpr Mail_MailGet_ackDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_MailGet_ackDefaultTypeInternal() {}
  union {
    Mail_MailGet_ack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_MailGet_ackDefaultTypeInternal _Mail_MailGet_ack_default_instance_;
constexpr Mail_UserOnline_active::Mail_UserOnline_active(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : last_mailiid_(int64_t{0})
  , firstactive_(false){}
struct Mail_UserOnline_activeDefaultTypeInternal {
  constexpr Mail_UserOnline_activeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_UserOnline_activeDefaultTypeInternal() {}
  union {
    Mail_UserOnline_active _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_UserOnline_activeDefaultTypeInternal _Mail_UserOnline_active_default_instance_;
constexpr Mail_ReadMail_req::Mail_ReadMail_req(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mail_iid_(int64_t{0}){}
struct Mail_ReadMail_reqDefaultTypeInternal {
  constexpr Mail_ReadMail_reqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_ReadMail_reqDefaultTypeInternal() {}
  union {
    Mail_ReadMail_req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_ReadMail_reqDefaultTypeInternal _Mail_ReadMail_req_default_instance_;
constexpr Mail_ReadMail_ack::Mail_ReadMail_ack(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mail_iid_(int64_t{0})
  , result_(0){}
struct Mail_ReadMail_ackDefaultTypeInternal {
  constexpr Mail_ReadMail_ackDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_ReadMail_ackDefaultTypeInternal() {}
  union {
    Mail_ReadMail_ack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_ReadMail_ackDefaultTypeInternal _Mail_ReadMail_ack_default_instance_;
constexpr Mail_DeleteMail_req::Mail_DeleteMail_req(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mail_iid_(int64_t{0}){}
struct Mail_DeleteMail_reqDefaultTypeInternal {
  constexpr Mail_DeleteMail_reqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_DeleteMail_reqDefaultTypeInternal() {}
  union {
    Mail_DeleteMail_req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_DeleteMail_reqDefaultTypeInternal _Mail_DeleteMail_req_default_instance_;
constexpr Mail_DeleteMail_ack::Mail_DeleteMail_ack(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mail_iid_(int64_t{0})
  , result_(0){}
struct Mail_DeleteMail_ackDefaultTypeInternal {
  constexpr Mail_DeleteMail_ackDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_DeleteMail_ackDefaultTypeInternal() {}
  union {
    Mail_DeleteMail_ack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_DeleteMail_ackDefaultTypeInternal _Mail_DeleteMail_ack_default_instance_;
constexpr Mail_UnBindAttachs_req::Mail_UnBindAttachs_req(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mail_iid_(int64_t{0}){}
struct Mail_UnBindAttachs_reqDefaultTypeInternal {
  constexpr Mail_UnBindAttachs_reqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_UnBindAttachs_reqDefaultTypeInternal() {}
  union {
    Mail_UnBindAttachs_req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_UnBindAttachs_reqDefaultTypeInternal _Mail_UnBindAttachs_req_default_instance_;
constexpr Mail_UnBindAttachs_ack::Mail_UnBindAttachs_ack(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mail_iid_(int64_t{0})
  , result_(0){}
struct Mail_UnBindAttachs_ackDefaultTypeInternal {
  constexpr Mail_UnBindAttachs_ackDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Mail_UnBindAttachs_ackDefaultTypeInternal() {}
  union {
    Mail_UnBindAttachs_ack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Mail_UnBindAttachs_ackDefaultTypeInternal _Mail_UnBindAttachs_ack_default_instance_;
}  // namespace PRO
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mail_5fsystem_2eproto[11];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_mail_5fsystem_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mail_5fsystem_2eproto = nullptr;

const uint32_t TableStruct_mail_5fsystem_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::MailUserBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::MailUserBox, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::MailUserBox, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::MailUserBox, sysmail_sync_),
  PROTOBUF_FIELD_OFFSET(::PRO::MailUserBox, lastlist_mail_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_NewMail_ntf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_req, mailiid_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_req, next_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_req, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_ack, mails_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_MailGet_ack, totle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UserOnline_active, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UserOnline_active, last_mailiid_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UserOnline_active, firstactive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_ReadMail_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_ReadMail_req, mail_iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_ReadMail_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_ReadMail_ack, result_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_ReadMail_ack, mail_iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_DeleteMail_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_DeleteMail_req, mail_iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_DeleteMail_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_DeleteMail_ack, result_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_DeleteMail_ack, mail_iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UnBindAttachs_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UnBindAttachs_req, mail_iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UnBindAttachs_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UnBindAttachs_ack, result_),
  PROTOBUF_FIELD_OFFSET(::PRO::Mail_UnBindAttachs_ack, mail_iid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PRO::MailUserBox)},
  { 10, -1, -1, sizeof(::PRO::Mail_NewMail_ntf)},
  { 16, -1, -1, sizeof(::PRO::Mail_MailGet_req)},
  { 25, -1, -1, sizeof(::PRO::Mail_MailGet_ack)},
  { 33, -1, -1, sizeof(::PRO::Mail_UserOnline_active)},
  { 41, -1, -1, sizeof(::PRO::Mail_ReadMail_req)},
  { 48, -1, -1, sizeof(::PRO::Mail_ReadMail_ack)},
  { 56, -1, -1, sizeof(::PRO::Mail_DeleteMail_req)},
  { 63, -1, -1, sizeof(::PRO::Mail_DeleteMail_ack)},
  { 71, -1, -1, sizeof(::PRO::Mail_UnBindAttachs_req)},
  { 78, -1, -1, sizeof(::PRO::Mail_UnBindAttachs_ack)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_MailUserBox_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_NewMail_ntf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_MailGet_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_MailGet_ack_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_UserOnline_active_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_ReadMail_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_ReadMail_ack_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_DeleteMail_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_DeleteMail_ack_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_UnBindAttachs_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_Mail_UnBindAttachs_ack_default_instance_),
};

const char descriptor_table_protodef_mail_5fsystem_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021mail_system.proto\022\003PRO\032\025global_interna"
  "l.proto\"Z\n\013MailUserBox\022\014\n\004ver_\030\001 \001(\005\022\020\n\010"
  "role_iid\030\002 \001(\003\022\024\n\014sysmail_sync\030\003 \001(\003\022\025\n\r"
  "lastlist_mail\030\004 \001(\003\"\022\n\020Mail_NewMail_ntf\""
  ">\n\020Mail_MailGet_req\022\017\n\007mailiid\030\001 \001(\003\022\014\n\004"
  "next\030\002 \001(\010\022\013\n\003num\030\003 \001(\005\"E\n\020Mail_MailGet_"
  "ack\022\"\n\005mails\030\001 \003(\0132\023.PRO.MailNormalItem\022"
  "\r\n\005totle\030\002 \001(\005\"C\n\026Mail_UserOnline_active"
  "\022\024\n\014last_mailiid\030\001 \001(\003\022\023\n\013firstactive\030\002 "
  "\001(\010\"%\n\021Mail_ReadMail_req\022\020\n\010mail_iid\030\001 \001"
  "(\003\"5\n\021Mail_ReadMail_ack\022\016\n\006result\030\001 \001(\005\022"
  "\020\n\010mail_iid\030\002 \001(\003\"\'\n\023Mail_DeleteMail_req"
  "\022\020\n\010mail_iid\030\001 \001(\003\"7\n\023Mail_DeleteMail_ac"
  "k\022\016\n\006result\030\001 \001(\005\022\020\n\010mail_iid\030\002 \001(\003\"*\n\026M"
  "ail_UnBindAttachs_req\022\020\n\010mail_iid\030\001 \001(\003\""
  ":\n\026Mail_UnBindAttachs_ack\022\016\n\006result\030\001 \001("
  "\005\022\020\n\010mail_iid\030\002 \001(\003*X\n\010MailType\022\021\n\rMailT"
  "ype_Init\020\000\022\023\n\017MailType_System\020\001\022\022\n\016MailT"
  "ype_Union\020\002\022\020\n\014MailType_Max\020\003BT\n\033com.cms"
  ".client.network.gproP\001Z\025gamelib/protobuf"
  "/gpro\252\002\033com.cms.client.network.gprob\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mail_5fsystem_2eproto_deps[1] = {
  &::descriptor_table_global_5finternal_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mail_5fsystem_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mail_5fsystem_2eproto = {
  false, false, 843, descriptor_table_protodef_mail_5fsystem_2eproto, "mail_system.proto", 
  &descriptor_table_mail_5fsystem_2eproto_once, descriptor_table_mail_5fsystem_2eproto_deps, 1, 11,
  schemas, file_default_instances, TableStruct_mail_5fsystem_2eproto::offsets,
  file_level_metadata_mail_5fsystem_2eproto, file_level_enum_descriptors_mail_5fsystem_2eproto, file_level_service_descriptors_mail_5fsystem_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mail_5fsystem_2eproto_getter() {
  return &descriptor_table_mail_5fsystem_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mail_5fsystem_2eproto(&descriptor_table_mail_5fsystem_2eproto);
namespace PRO {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mail_5fsystem_2eproto);
  return file_level_enum_descriptors_mail_5fsystem_2eproto[0];
}
bool MailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MailUserBox::_Internal {
 public:
};

MailUserBox::MailUserBox(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.MailUserBox)
}
MailUserBox::MailUserBox(const MailUserBox& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&role_iid_, &from.role_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(ver__));
  // @@protoc_insertion_point(copy_constructor:PRO.MailUserBox)
}

inline void MailUserBox::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(ver__));
}

MailUserBox::~MailUserBox() {
  // @@protoc_insertion_point(destructor:PRO.MailUserBox)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MailUserBox::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MailUserBox::ArenaDtor(void* object) {
  MailUserBox* _this = reinterpret_cast< MailUserBox* >(object);
  (void)_this;
}
void MailUserBox::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MailUserBox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MailUserBox::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.MailUserBox)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&role_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver__) -
      reinterpret_cast<char*>(&role_iid_)) + sizeof(ver__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MailUserBox::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 sysmail_sync = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          sysmail_sync_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 lastlist_mail = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          lastlist_mail_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MailUserBox::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.MailUserBox)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_role_iid(), target);
  }

  // int64 sysmail_sync = 3;
  if (this->_internal_sysmail_sync() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_sysmail_sync(), target);
  }

  // int64 lastlist_mail = 4;
  if (this->_internal_lastlist_mail() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_lastlist_mail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.MailUserBox)
  return target;
}

size_t MailUserBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.MailUserBox)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int64 sysmail_sync = 3;
  if (this->_internal_sysmail_sync() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_sysmail_sync());
  }

  // int64 lastlist_mail = 4;
  if (this->_internal_lastlist_mail() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_lastlist_mail());
  }

  // int32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_ver_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MailUserBox::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MailUserBox::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MailUserBox::GetClassData() const { return &_class_data_; }

void MailUserBox::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MailUserBox *>(to)->MergeFrom(
      static_cast<const MailUserBox &>(from));
}


void MailUserBox::MergeFrom(const MailUserBox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.MailUserBox)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_sysmail_sync() != 0) {
    _internal_set_sysmail_sync(from._internal_sysmail_sync());
  }
  if (from._internal_lastlist_mail() != 0) {
    _internal_set_lastlist_mail(from._internal_lastlist_mail());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MailUserBox::CopyFrom(const MailUserBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.MailUserBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailUserBox::IsInitialized() const {
  return true;
}

void MailUserBox::InternalSwap(MailUserBox* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MailUserBox, ver__)
      + sizeof(MailUserBox::ver__)
      - PROTOBUF_FIELD_OFFSET(MailUserBox, role_iid_)>(
          reinterpret_cast<char*>(&role_iid_),
          reinterpret_cast<char*>(&other->role_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MailUserBox::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[0]);
}

// ===================================================================

class Mail_NewMail_ntf::_Internal {
 public:
};

Mail_NewMail_ntf::Mail_NewMail_ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_NewMail_ntf)
}
Mail_NewMail_ntf::Mail_NewMail_ntf(const Mail_NewMail_ntf& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_NewMail_ntf)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_NewMail_ntf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_NewMail_ntf::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Mail_NewMail_ntf::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[1]);
}

// ===================================================================

class Mail_MailGet_req::_Internal {
 public:
};

Mail_MailGet_req::Mail_MailGet_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_MailGet_req)
}
Mail_MailGet_req::Mail_MailGet_req(const Mail_MailGet_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mailiid_, &from.mailiid_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&mailiid_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_MailGet_req)
}

inline void Mail_MailGet_req::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mailiid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&mailiid_)) + sizeof(num_));
}

Mail_MailGet_req::~Mail_MailGet_req() {
  // @@protoc_insertion_point(destructor:PRO.Mail_MailGet_req)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_MailGet_req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_MailGet_req::ArenaDtor(void* object) {
  Mail_MailGet_req* _this = reinterpret_cast< Mail_MailGet_req* >(object);
  (void)_this;
}
void Mail_MailGet_req::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_MailGet_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_MailGet_req::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_MailGet_req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mailiid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&mailiid_)) + sizeof(num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_MailGet_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 mailiid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          mailiid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool next = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          next_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_MailGet_req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_MailGet_req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 mailiid = 1;
  if (this->_internal_mailiid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_mailiid(), target);
  }

  // bool next = 2;
  if (this->_internal_next() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_next(), target);
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_MailGet_req)
  return target;
}

size_t Mail_MailGet_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_MailGet_req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mailiid = 1;
  if (this->_internal_mailiid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mailiid());
  }

  // bool next = 2;
  if (this->_internal_next() != 0) {
    total_size += 1 + 1;
  }

  // int32 num = 3;
  if (this->_internal_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_MailGet_req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_MailGet_req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_MailGet_req::GetClassData() const { return &_class_data_; }

void Mail_MailGet_req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_MailGet_req *>(to)->MergeFrom(
      static_cast<const Mail_MailGet_req &>(from));
}


void Mail_MailGet_req::MergeFrom(const Mail_MailGet_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_MailGet_req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mailiid() != 0) {
    _internal_set_mailiid(from._internal_mailiid());
  }
  if (from._internal_next() != 0) {
    _internal_set_next(from._internal_next());
  }
  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_MailGet_req::CopyFrom(const Mail_MailGet_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_MailGet_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_MailGet_req::IsInitialized() const {
  return true;
}

void Mail_MailGet_req::InternalSwap(Mail_MailGet_req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mail_MailGet_req, num_)
      + sizeof(Mail_MailGet_req::num_)
      - PROTOBUF_FIELD_OFFSET(Mail_MailGet_req, mailiid_)>(
          reinterpret_cast<char*>(&mailiid_),
          reinterpret_cast<char*>(&other->mailiid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_MailGet_req::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[2]);
}

// ===================================================================

class Mail_MailGet_ack::_Internal {
 public:
};

void Mail_MailGet_ack::clear_mails() {
  mails_.Clear();
}
Mail_MailGet_ack::Mail_MailGet_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  mails_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_MailGet_ack)
}
Mail_MailGet_ack::Mail_MailGet_ack(const Mail_MailGet_ack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mails_(from.mails_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  totle_ = from.totle_;
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_MailGet_ack)
}

inline void Mail_MailGet_ack::SharedCtor() {
totle_ = 0;
}

Mail_MailGet_ack::~Mail_MailGet_ack() {
  // @@protoc_insertion_point(destructor:PRO.Mail_MailGet_ack)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_MailGet_ack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_MailGet_ack::ArenaDtor(void* object) {
  Mail_MailGet_ack* _this = reinterpret_cast< Mail_MailGet_ack* >(object);
  (void)_this;
}
void Mail_MailGet_ack::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_MailGet_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_MailGet_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_MailGet_ack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mails_.Clear();
  totle_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_MailGet_ack::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.MailNormalItem mails = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mails(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 totle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          totle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_MailGet_ack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_MailGet_ack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.MailNormalItem mails = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mails_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_mails(i), target, stream);
  }

  // int32 totle = 2;
  if (this->_internal_totle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_totle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_MailGet_ack)
  return target;
}

size_t Mail_MailGet_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_MailGet_ack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.MailNormalItem mails = 1;
  total_size += 1UL * this->_internal_mails_size();
  for (const auto& msg : this->mails_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 totle = 2;
  if (this->_internal_totle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_totle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_MailGet_ack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_MailGet_ack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_MailGet_ack::GetClassData() const { return &_class_data_; }

void Mail_MailGet_ack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_MailGet_ack *>(to)->MergeFrom(
      static_cast<const Mail_MailGet_ack &>(from));
}


void Mail_MailGet_ack::MergeFrom(const Mail_MailGet_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_MailGet_ack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  mails_.MergeFrom(from.mails_);
  if (from._internal_totle() != 0) {
    _internal_set_totle(from._internal_totle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_MailGet_ack::CopyFrom(const Mail_MailGet_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_MailGet_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_MailGet_ack::IsInitialized() const {
  return true;
}

void Mail_MailGet_ack::InternalSwap(Mail_MailGet_ack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  mails_.InternalSwap(&other->mails_);
  swap(totle_, other->totle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_MailGet_ack::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[3]);
}

// ===================================================================

class Mail_UserOnline_active::_Internal {
 public:
};

Mail_UserOnline_active::Mail_UserOnline_active(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_UserOnline_active)
}
Mail_UserOnline_active::Mail_UserOnline_active(const Mail_UserOnline_active& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&last_mailiid_, &from.last_mailiid_,
    static_cast<size_t>(reinterpret_cast<char*>(&firstactive_) -
    reinterpret_cast<char*>(&last_mailiid_)) + sizeof(firstactive_));
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_UserOnline_active)
}

inline void Mail_UserOnline_active::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&last_mailiid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&firstactive_) -
    reinterpret_cast<char*>(&last_mailiid_)) + sizeof(firstactive_));
}

Mail_UserOnline_active::~Mail_UserOnline_active() {
  // @@protoc_insertion_point(destructor:PRO.Mail_UserOnline_active)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_UserOnline_active::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_UserOnline_active::ArenaDtor(void* object) {
  Mail_UserOnline_active* _this = reinterpret_cast< Mail_UserOnline_active* >(object);
  (void)_this;
}
void Mail_UserOnline_active::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_UserOnline_active::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_UserOnline_active::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_UserOnline_active)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&last_mailiid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&firstactive_) -
      reinterpret_cast<char*>(&last_mailiid_)) + sizeof(firstactive_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_UserOnline_active::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 last_mailiid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          last_mailiid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool firstactive = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          firstactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_UserOnline_active::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_UserOnline_active)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 last_mailiid = 1;
  if (this->_internal_last_mailiid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_last_mailiid(), target);
  }

  // bool firstactive = 2;
  if (this->_internal_firstactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_firstactive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_UserOnline_active)
  return target;
}

size_t Mail_UserOnline_active::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_UserOnline_active)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 last_mailiid = 1;
  if (this->_internal_last_mailiid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_last_mailiid());
  }

  // bool firstactive = 2;
  if (this->_internal_firstactive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_UserOnline_active::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_UserOnline_active::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_UserOnline_active::GetClassData() const { return &_class_data_; }

void Mail_UserOnline_active::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_UserOnline_active *>(to)->MergeFrom(
      static_cast<const Mail_UserOnline_active &>(from));
}


void Mail_UserOnline_active::MergeFrom(const Mail_UserOnline_active& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_UserOnline_active)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_last_mailiid() != 0) {
    _internal_set_last_mailiid(from._internal_last_mailiid());
  }
  if (from._internal_firstactive() != 0) {
    _internal_set_firstactive(from._internal_firstactive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_UserOnline_active::CopyFrom(const Mail_UserOnline_active& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_UserOnline_active)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_UserOnline_active::IsInitialized() const {
  return true;
}

void Mail_UserOnline_active::InternalSwap(Mail_UserOnline_active* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mail_UserOnline_active, firstactive_)
      + sizeof(Mail_UserOnline_active::firstactive_)
      - PROTOBUF_FIELD_OFFSET(Mail_UserOnline_active, last_mailiid_)>(
          reinterpret_cast<char*>(&last_mailiid_),
          reinterpret_cast<char*>(&other->last_mailiid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_UserOnline_active::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[4]);
}

// ===================================================================

class Mail_ReadMail_req::_Internal {
 public:
};

Mail_ReadMail_req::Mail_ReadMail_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_ReadMail_req)
}
Mail_ReadMail_req::Mail_ReadMail_req(const Mail_ReadMail_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mail_iid_ = from.mail_iid_;
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_ReadMail_req)
}

inline void Mail_ReadMail_req::SharedCtor() {
mail_iid_ = int64_t{0};
}

Mail_ReadMail_req::~Mail_ReadMail_req() {
  // @@protoc_insertion_point(destructor:PRO.Mail_ReadMail_req)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_ReadMail_req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_ReadMail_req::ArenaDtor(void* object) {
  Mail_ReadMail_req* _this = reinterpret_cast< Mail_ReadMail_req* >(object);
  (void)_this;
}
void Mail_ReadMail_req::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_ReadMail_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_ReadMail_req::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_ReadMail_req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_iid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_ReadMail_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 mail_iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          mail_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_ReadMail_req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_ReadMail_req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 mail_iid = 1;
  if (this->_internal_mail_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_mail_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_ReadMail_req)
  return target;
}

size_t Mail_ReadMail_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_ReadMail_req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mail_iid = 1;
  if (this->_internal_mail_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mail_iid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_ReadMail_req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_ReadMail_req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_ReadMail_req::GetClassData() const { return &_class_data_; }

void Mail_ReadMail_req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_ReadMail_req *>(to)->MergeFrom(
      static_cast<const Mail_ReadMail_req &>(from));
}


void Mail_ReadMail_req::MergeFrom(const Mail_ReadMail_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_ReadMail_req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mail_iid() != 0) {
    _internal_set_mail_iid(from._internal_mail_iid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_ReadMail_req::CopyFrom(const Mail_ReadMail_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_ReadMail_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_ReadMail_req::IsInitialized() const {
  return true;
}

void Mail_ReadMail_req::InternalSwap(Mail_ReadMail_req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(mail_iid_, other->mail_iid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_ReadMail_req::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[5]);
}

// ===================================================================

class Mail_ReadMail_ack::_Internal {
 public:
};

Mail_ReadMail_ack::Mail_ReadMail_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_ReadMail_ack)
}
Mail_ReadMail_ack::Mail_ReadMail_ack(const Mail_ReadMail_ack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mail_iid_, &from.mail_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_ReadMail_ack)
}

inline void Mail_ReadMail_ack::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mail_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
}

Mail_ReadMail_ack::~Mail_ReadMail_ack() {
  // @@protoc_insertion_point(destructor:PRO.Mail_ReadMail_ack)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_ReadMail_ack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_ReadMail_ack::ArenaDtor(void* object) {
  Mail_ReadMail_ack* _this = reinterpret_cast< Mail_ReadMail_ack* >(object);
  (void)_this;
}
void Mail_ReadMail_ack::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_ReadMail_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_ReadMail_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_ReadMail_ack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mail_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_ReadMail_ack::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 mail_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mail_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_ReadMail_ack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_ReadMail_ack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  // int64 mail_iid = 2;
  if (this->_internal_mail_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mail_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_ReadMail_ack)
  return target;
}

size_t Mail_ReadMail_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_ReadMail_ack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mail_iid = 2;
  if (this->_internal_mail_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mail_iid());
  }

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_ReadMail_ack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_ReadMail_ack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_ReadMail_ack::GetClassData() const { return &_class_data_; }

void Mail_ReadMail_ack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_ReadMail_ack *>(to)->MergeFrom(
      static_cast<const Mail_ReadMail_ack &>(from));
}


void Mail_ReadMail_ack::MergeFrom(const Mail_ReadMail_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_ReadMail_ack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mail_iid() != 0) {
    _internal_set_mail_iid(from._internal_mail_iid());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_ReadMail_ack::CopyFrom(const Mail_ReadMail_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_ReadMail_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_ReadMail_ack::IsInitialized() const {
  return true;
}

void Mail_ReadMail_ack::InternalSwap(Mail_ReadMail_ack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mail_ReadMail_ack, result_)
      + sizeof(Mail_ReadMail_ack::result_)
      - PROTOBUF_FIELD_OFFSET(Mail_ReadMail_ack, mail_iid_)>(
          reinterpret_cast<char*>(&mail_iid_),
          reinterpret_cast<char*>(&other->mail_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_ReadMail_ack::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[6]);
}

// ===================================================================

class Mail_DeleteMail_req::_Internal {
 public:
};

Mail_DeleteMail_req::Mail_DeleteMail_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_DeleteMail_req)
}
Mail_DeleteMail_req::Mail_DeleteMail_req(const Mail_DeleteMail_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mail_iid_ = from.mail_iid_;
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_DeleteMail_req)
}

inline void Mail_DeleteMail_req::SharedCtor() {
mail_iid_ = int64_t{0};
}

Mail_DeleteMail_req::~Mail_DeleteMail_req() {
  // @@protoc_insertion_point(destructor:PRO.Mail_DeleteMail_req)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_DeleteMail_req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_DeleteMail_req::ArenaDtor(void* object) {
  Mail_DeleteMail_req* _this = reinterpret_cast< Mail_DeleteMail_req* >(object);
  (void)_this;
}
void Mail_DeleteMail_req::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_DeleteMail_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_DeleteMail_req::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_DeleteMail_req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_iid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_DeleteMail_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 mail_iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          mail_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_DeleteMail_req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_DeleteMail_req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 mail_iid = 1;
  if (this->_internal_mail_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_mail_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_DeleteMail_req)
  return target;
}

size_t Mail_DeleteMail_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_DeleteMail_req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mail_iid = 1;
  if (this->_internal_mail_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mail_iid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_DeleteMail_req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_DeleteMail_req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_DeleteMail_req::GetClassData() const { return &_class_data_; }

void Mail_DeleteMail_req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_DeleteMail_req *>(to)->MergeFrom(
      static_cast<const Mail_DeleteMail_req &>(from));
}


void Mail_DeleteMail_req::MergeFrom(const Mail_DeleteMail_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_DeleteMail_req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mail_iid() != 0) {
    _internal_set_mail_iid(from._internal_mail_iid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_DeleteMail_req::CopyFrom(const Mail_DeleteMail_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_DeleteMail_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_DeleteMail_req::IsInitialized() const {
  return true;
}

void Mail_DeleteMail_req::InternalSwap(Mail_DeleteMail_req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(mail_iid_, other->mail_iid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_DeleteMail_req::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[7]);
}

// ===================================================================

class Mail_DeleteMail_ack::_Internal {
 public:
};

Mail_DeleteMail_ack::Mail_DeleteMail_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_DeleteMail_ack)
}
Mail_DeleteMail_ack::Mail_DeleteMail_ack(const Mail_DeleteMail_ack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mail_iid_, &from.mail_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_DeleteMail_ack)
}

inline void Mail_DeleteMail_ack::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mail_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
}

Mail_DeleteMail_ack::~Mail_DeleteMail_ack() {
  // @@protoc_insertion_point(destructor:PRO.Mail_DeleteMail_ack)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_DeleteMail_ack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_DeleteMail_ack::ArenaDtor(void* object) {
  Mail_DeleteMail_ack* _this = reinterpret_cast< Mail_DeleteMail_ack* >(object);
  (void)_this;
}
void Mail_DeleteMail_ack::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_DeleteMail_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_DeleteMail_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_DeleteMail_ack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mail_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_DeleteMail_ack::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 mail_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mail_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_DeleteMail_ack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_DeleteMail_ack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  // int64 mail_iid = 2;
  if (this->_internal_mail_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mail_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_DeleteMail_ack)
  return target;
}

size_t Mail_DeleteMail_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_DeleteMail_ack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mail_iid = 2;
  if (this->_internal_mail_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mail_iid());
  }

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_DeleteMail_ack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_DeleteMail_ack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_DeleteMail_ack::GetClassData() const { return &_class_data_; }

void Mail_DeleteMail_ack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_DeleteMail_ack *>(to)->MergeFrom(
      static_cast<const Mail_DeleteMail_ack &>(from));
}


void Mail_DeleteMail_ack::MergeFrom(const Mail_DeleteMail_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_DeleteMail_ack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mail_iid() != 0) {
    _internal_set_mail_iid(from._internal_mail_iid());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_DeleteMail_ack::CopyFrom(const Mail_DeleteMail_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_DeleteMail_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_DeleteMail_ack::IsInitialized() const {
  return true;
}

void Mail_DeleteMail_ack::InternalSwap(Mail_DeleteMail_ack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mail_DeleteMail_ack, result_)
      + sizeof(Mail_DeleteMail_ack::result_)
      - PROTOBUF_FIELD_OFFSET(Mail_DeleteMail_ack, mail_iid_)>(
          reinterpret_cast<char*>(&mail_iid_),
          reinterpret_cast<char*>(&other->mail_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_DeleteMail_ack::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[8]);
}

// ===================================================================

class Mail_UnBindAttachs_req::_Internal {
 public:
};

Mail_UnBindAttachs_req::Mail_UnBindAttachs_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_UnBindAttachs_req)
}
Mail_UnBindAttachs_req::Mail_UnBindAttachs_req(const Mail_UnBindAttachs_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mail_iid_ = from.mail_iid_;
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_UnBindAttachs_req)
}

inline void Mail_UnBindAttachs_req::SharedCtor() {
mail_iid_ = int64_t{0};
}

Mail_UnBindAttachs_req::~Mail_UnBindAttachs_req() {
  // @@protoc_insertion_point(destructor:PRO.Mail_UnBindAttachs_req)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_UnBindAttachs_req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_UnBindAttachs_req::ArenaDtor(void* object) {
  Mail_UnBindAttachs_req* _this = reinterpret_cast< Mail_UnBindAttachs_req* >(object);
  (void)_this;
}
void Mail_UnBindAttachs_req::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_UnBindAttachs_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_UnBindAttachs_req::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_UnBindAttachs_req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_iid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_UnBindAttachs_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 mail_iid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          mail_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_UnBindAttachs_req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_UnBindAttachs_req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 mail_iid = 1;
  if (this->_internal_mail_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_mail_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_UnBindAttachs_req)
  return target;
}

size_t Mail_UnBindAttachs_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_UnBindAttachs_req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mail_iid = 1;
  if (this->_internal_mail_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mail_iid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_UnBindAttachs_req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_UnBindAttachs_req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_UnBindAttachs_req::GetClassData() const { return &_class_data_; }

void Mail_UnBindAttachs_req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_UnBindAttachs_req *>(to)->MergeFrom(
      static_cast<const Mail_UnBindAttachs_req &>(from));
}


void Mail_UnBindAttachs_req::MergeFrom(const Mail_UnBindAttachs_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_UnBindAttachs_req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mail_iid() != 0) {
    _internal_set_mail_iid(from._internal_mail_iid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_UnBindAttachs_req::CopyFrom(const Mail_UnBindAttachs_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_UnBindAttachs_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_UnBindAttachs_req::IsInitialized() const {
  return true;
}

void Mail_UnBindAttachs_req::InternalSwap(Mail_UnBindAttachs_req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(mail_iid_, other->mail_iid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_UnBindAttachs_req::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[9]);
}

// ===================================================================

class Mail_UnBindAttachs_ack::_Internal {
 public:
};

Mail_UnBindAttachs_ack::Mail_UnBindAttachs_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.Mail_UnBindAttachs_ack)
}
Mail_UnBindAttachs_ack::Mail_UnBindAttachs_ack(const Mail_UnBindAttachs_ack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mail_iid_, &from.mail_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:PRO.Mail_UnBindAttachs_ack)
}

inline void Mail_UnBindAttachs_ack::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mail_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
}

Mail_UnBindAttachs_ack::~Mail_UnBindAttachs_ack() {
  // @@protoc_insertion_point(destructor:PRO.Mail_UnBindAttachs_ack)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Mail_UnBindAttachs_ack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Mail_UnBindAttachs_ack::ArenaDtor(void* object) {
  Mail_UnBindAttachs_ack* _this = reinterpret_cast< Mail_UnBindAttachs_ack* >(object);
  (void)_this;
}
void Mail_UnBindAttachs_ack::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mail_UnBindAttachs_ack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Mail_UnBindAttachs_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.Mail_UnBindAttachs_ack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mail_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&mail_iid_)) + sizeof(result_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mail_UnBindAttachs_ack::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 mail_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mail_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mail_UnBindAttachs_ack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.Mail_UnBindAttachs_ack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  // int64 mail_iid = 2;
  if (this->_internal_mail_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mail_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.Mail_UnBindAttachs_ack)
  return target;
}

size_t Mail_UnBindAttachs_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.Mail_UnBindAttachs_ack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mail_iid = 2;
  if (this->_internal_mail_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mail_iid());
  }

  // int32 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mail_UnBindAttachs_ack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Mail_UnBindAttachs_ack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mail_UnBindAttachs_ack::GetClassData() const { return &_class_data_; }

void Mail_UnBindAttachs_ack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Mail_UnBindAttachs_ack *>(to)->MergeFrom(
      static_cast<const Mail_UnBindAttachs_ack &>(from));
}


void Mail_UnBindAttachs_ack::MergeFrom(const Mail_UnBindAttachs_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.Mail_UnBindAttachs_ack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mail_iid() != 0) {
    _internal_set_mail_iid(from._internal_mail_iid());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mail_UnBindAttachs_ack::CopyFrom(const Mail_UnBindAttachs_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.Mail_UnBindAttachs_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mail_UnBindAttachs_ack::IsInitialized() const {
  return true;
}

void Mail_UnBindAttachs_ack::InternalSwap(Mail_UnBindAttachs_ack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mail_UnBindAttachs_ack, result_)
      + sizeof(Mail_UnBindAttachs_ack::result_)
      - PROTOBUF_FIELD_OFFSET(Mail_UnBindAttachs_ack, mail_iid_)>(
          reinterpret_cast<char*>(&mail_iid_),
          reinterpret_cast<char*>(&other->mail_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Mail_UnBindAttachs_ack::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mail_5fsystem_2eproto_getter, &descriptor_table_mail_5fsystem_2eproto_once,
      file_level_metadata_mail_5fsystem_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace PRO
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PRO::MailUserBox* Arena::CreateMaybeMessage< ::PRO::MailUserBox >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::MailUserBox >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_NewMail_ntf* Arena::CreateMaybeMessage< ::PRO::Mail_NewMail_ntf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_NewMail_ntf >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_MailGet_req* Arena::CreateMaybeMessage< ::PRO::Mail_MailGet_req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_MailGet_req >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_MailGet_ack* Arena::CreateMaybeMessage< ::PRO::Mail_MailGet_ack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_MailGet_ack >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_UserOnline_active* Arena::CreateMaybeMessage< ::PRO::Mail_UserOnline_active >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_UserOnline_active >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_ReadMail_req* Arena::CreateMaybeMessage< ::PRO::Mail_ReadMail_req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_ReadMail_req >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_ReadMail_ack* Arena::CreateMaybeMessage< ::PRO::Mail_ReadMail_ack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_ReadMail_ack >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_DeleteMail_req* Arena::CreateMaybeMessage< ::PRO::Mail_DeleteMail_req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_DeleteMail_req >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_DeleteMail_ack* Arena::CreateMaybeMessage< ::PRO::Mail_DeleteMail_ack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_DeleteMail_ack >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_UnBindAttachs_req* Arena::CreateMaybeMessage< ::PRO::Mail_UnBindAttachs_req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_UnBindAttachs_req >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::Mail_UnBindAttachs_ack* Arena::CreateMaybeMessage< ::PRO::Mail_UnBindAttachs_ack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::Mail_UnBindAttachs_ack >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
