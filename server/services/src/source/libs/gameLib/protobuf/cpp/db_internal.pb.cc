// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_internal.proto

#include "db_internal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PRO {
constexpr DBRowDel::DBRowDel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(int64_t{0})
  , ver__(0u){}
struct DBRowDelDefaultTypeInternal {
  constexpr DBRowDelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBRowDelDefaultTypeInternal() {}
  union {
    DBRowDel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBRowDelDefaultTypeInternal _DBRowDel_default_instance_;
constexpr DBRowDeletes::DBRowDeletes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dels_(){}
struct DBRowDeletesDefaultTypeInternal {
  constexpr DBRowDeletesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBRowDeletesDefaultTypeInternal() {}
  union {
    DBRowDeletes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBRowDeletesDefaultTypeInternal _DBRowDeletes_default_instance_;
constexpr DBRoleBaseInfo::DBRoleBaseInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nickname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_iid_(int64_t{0})
  , user_iid_(int64_t{0})
  , ver__(0u)
  , registime_(0){}
struct DBRoleBaseInfoDefaultTypeInternal {
  constexpr DBRoleBaseInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBRoleBaseInfoDefaultTypeInternal() {}
  union {
    DBRoleBaseInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBRoleBaseInfoDefaultTypeInternal _DBRoleBaseInfo_default_instance_;
constexpr DBUserRoles::DBUserRoles(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roles_(){}
struct DBUserRolesDefaultTypeInternal {
  constexpr DBUserRolesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserRolesDefaultTypeInternal() {}
  union {
    DBUserRoles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserRolesDefaultTypeInternal _DBUserRoles_default_instance_;
constexpr DBUserHome::DBUserHome(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : home_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , look_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , geo_pos_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_iid_(int64_t{0})
  , ground_resid_(int64_t{0})
  , ver__(0u)
  , reside_time_(0)
  , last_residedate_(0){}
struct DBUserHomeDefaultTypeInternal {
  constexpr DBUserHomeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserHomeDefaultTypeInternal() {}
  union {
    DBUserHome _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserHomeDefaultTypeInternal _DBUserHome_default_instance_;
constexpr DBUserHomeStructureItem::DBUserHomeStructureItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : look_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , building_pos_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , building_iid_(int64_t{0})
  , home_iid_(int64_t{0})
  , parent_building_(int64_t{0})
  , building_resid_(int64_t{0})
  , ver__(0u){}
struct DBUserHomeStructureItemDefaultTypeInternal {
  constexpr DBUserHomeStructureItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserHomeStructureItemDefaultTypeInternal() {}
  union {
    DBUserHomeStructureItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserHomeStructureItemDefaultTypeInternal _DBUserHomeStructureItem_default_instance_;
constexpr DBUserHomeStructure::DBUserHomeStructure(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct DBUserHomeStructureDefaultTypeInternal {
  constexpr DBUserHomeStructureDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserHomeStructureDefaultTypeInternal() {}
  union {
    DBUserHomeStructure _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserHomeStructureDefaultTypeInternal _DBUserHomeStructure_default_instance_;
constexpr DBPetCategory::DBPetCategory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pet_iid_(int64_t{0})
  , pet_resid_(int64_t{0})
  , pet_type_(0)
  , pet_sex_(0){}
struct DBPetCategoryDefaultTypeInternal {
  constexpr DBPetCategoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBPetCategoryDefaultTypeInternal() {}
  union {
    DBPetCategory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBPetCategoryDefaultTypeInternal _DBPetCategory_default_instance_;
constexpr DBUserPetItem::DBUserPetItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mypet_iid_(int64_t{0})
  , role_iid_(int64_t{0})
  , ver__(0u)
  , pet_age_(0)
  , pet_iid_(int64_t{0})
  , birthday_(0){}
struct DBUserPetItemDefaultTypeInternal {
  constexpr DBUserPetItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserPetItemDefaultTypeInternal() {}
  union {
    DBUserPetItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserPetItemDefaultTypeInternal _DBUserPetItem_default_instance_;
constexpr DBUserPets::DBUserPets(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pets_(){}
struct DBUserPetsDefaultTypeInternal {
  constexpr DBUserPetsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserPetsDefaultTypeInternal() {}
  union {
    DBUserPets _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserPetsDefaultTypeInternal _DBUserPets_default_instance_;
}  // namespace PRO
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_db_5finternal_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_db_5finternal_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_db_5finternal_2eproto = nullptr;

const uint32_t TableStruct_db_5finternal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDel, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDel, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDeletes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDeletes, dels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, user_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, nickname_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, registime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserRoles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserRoles, roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, home_name_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, ground_resid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, look_at_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, geo_pos_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, reside_time_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, last_residedate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, building_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, home_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, parent_building_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, building_resid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, look_at_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, building_pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructure, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_type_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_resid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_sex_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, mypet_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, pet_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, pet_age_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, birthday_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPets, pets_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PRO::DBRowDel)},
  { 8, -1, -1, sizeof(::PRO::DBRowDeletes)},
  { 15, -1, -1, sizeof(::PRO::DBRoleBaseInfo)},
  { 26, -1, -1, sizeof(::PRO::DBUserRoles)},
  { 33, -1, -1, sizeof(::PRO::DBUserHome)},
  { 47, -1, -1, sizeof(::PRO::DBUserHomeStructureItem)},
  { 60, -1, -1, sizeof(::PRO::DBUserHomeStructure)},
  { 67, -1, -1, sizeof(::PRO::DBPetCategory)},
  { 78, -1, -1, sizeof(::PRO::DBUserPetItem)},
  { 90, -1, -1, sizeof(::PRO::DBUserPets)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBRowDel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBRowDeletes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBRoleBaseInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserRoles_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserHome_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserHomeStructureItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserHomeStructure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBPetCategory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserPetItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserPets_default_instance_),
};

const char descriptor_table_protodef_db_5finternal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021db_internal.proto\022\003PRO\"$\n\010DBRowDel\022\014\n\004"
  "ver_\030\001 \001(\r\022\n\n\002id\030\002 \001(\003\"+\n\014DBRowDeletes\022\033"
  "\n\004dels\030\001 \003(\0132\r.PRO.DBRowDel\"g\n\016DBRoleBas"
  "eInfo\022\014\n\004ver_\030\001 \001(\r\022\020\n\010role_iid\030\002 \001(\003\022\020\n"
  "\010user_iid\030\003 \001(\003\022\020\n\010nickname\030\004 \001(\t\022\021\n\treg"
  "istime\030\005 \001(\005\"1\n\013DBUserRoles\022\"\n\005roles\030\001 \003"
  "(\0132\023.PRO.DBRoleBaseInfo\"\245\001\n\nDBUserHome\022\014"
  "\n\004ver_\030\001 \001(\r\022\020\n\010role_iid\030\002 \001(\003\022\021\n\thome_n"
  "ame\030\003 \001(\t\022\024\n\014ground_resid\030\004 \001(\003\022\017\n\007look_"
  "at\030\005 \001(\t\022\017\n\007geo_pos\030\006 \001(\t\022\023\n\013reside_time"
  "\030\007 \001(\005\022\027\n\017last_residedate\030\010 \001(\005\"\247\001\n\027DBUs"
  "erHomeStructureItem\022\014\n\004ver_\030\001 \001(\r\022\024\n\014bui"
  "lding_iid\030\002 \001(\003\022\020\n\010home_iid\030\003 \001(\003\022\027\n\017par"
  "ent_building\030\004 \001(\003\022\026\n\016building_resid\030\005 \001"
  "(\003\022\017\n\007look_at\030\006 \001(\t\022\024\n\014building_pos\030\007 \001("
  "\t\"B\n\023DBUserHomeStructure\022+\n\005items\030\001 \003(\0132"
  "\034.PRO.DBUserHomeStructureItem\"h\n\rDBPetCa"
  "tegory\022\017\n\007pet_iid\030\002 \001(\003\022\020\n\010pet_type\030\003 \001("
  "\005\022\021\n\tpet_resid\030\004 \001(\003\022\017\n\007pet_sex\030\005 \001(\005\022\020\n"
  "\010pet_name\030\006 \001(\t\"v\n\rDBUserPetItem\022\014\n\004ver_"
  "\030\001 \001(\r\022\021\n\tmypet_iid\030\002 \001(\003\022\020\n\010role_iid\030\003 "
  "\001(\003\022\017\n\007pet_iid\030\004 \001(\003\022\017\n\007pet_age\030\005 \001(\005\022\020\n"
  "\010birthday\030\006 \001(\005\".\n\nDBUserPets\022 \n\004pets\030\001 "
  "\003(\0132\022.PRO.DBUserPetItemBT\n\033com.cms.clien"
  "t.network.gproP\001Z\025gamelib/protobuf/gpro\252"
  "\002\033com.cms.client.network.gprob\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_db_5finternal_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_db_5finternal_2eproto = {
  false, false, 1037, descriptor_table_protodef_db_5finternal_2eproto, "db_internal.proto", 
  &descriptor_table_db_5finternal_2eproto_once, nullptr, 0, 10,
  schemas, file_default_instances, TableStruct_db_5finternal_2eproto::offsets,
  file_level_metadata_db_5finternal_2eproto, file_level_enum_descriptors_db_5finternal_2eproto, file_level_service_descriptors_db_5finternal_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_db_5finternal_2eproto_getter() {
  return &descriptor_table_db_5finternal_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_db_5finternal_2eproto(&descriptor_table_db_5finternal_2eproto);
namespace PRO {

// ===================================================================

class DBRowDel::_Internal {
 public:
};

DBRowDel::DBRowDel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBRowDel)
}
DBRowDel::DBRowDel(const DBRowDel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&id_)) + sizeof(ver__));
  // @@protoc_insertion_point(copy_constructor:PRO.DBRowDel)
}

inline void DBRowDel::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&id_)) + sizeof(ver__));
}

DBRowDel::~DBRowDel() {
  // @@protoc_insertion_point(destructor:PRO.DBRowDel)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBRowDel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBRowDel::ArenaDtor(void* object) {
  DBRowDel* _this = reinterpret_cast< DBRowDel* >(object);
  (void)_this;
}
void DBRowDel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBRowDel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBRowDel::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBRowDel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver__) -
      reinterpret_cast<char*>(&id_)) + sizeof(ver__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBRowDel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBRowDel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBRowDel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBRowDel)
  return target;
}

size_t DBRowDel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBRowDel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBRowDel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBRowDel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBRowDel::GetClassData() const { return &_class_data_; }

void DBRowDel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBRowDel *>(to)->MergeFrom(
      static_cast<const DBRowDel &>(from));
}


void DBRowDel::MergeFrom(const DBRowDel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBRowDel)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBRowDel::CopyFrom(const DBRowDel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBRowDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRowDel::IsInitialized() const {
  return true;
}

void DBRowDel::InternalSwap(DBRowDel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBRowDel, ver__)
      + sizeof(DBRowDel::ver__)
      - PROTOBUF_FIELD_OFFSET(DBRowDel, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBRowDel::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[0]);
}

// ===================================================================

class DBRowDeletes::_Internal {
 public:
};

DBRowDeletes::DBRowDeletes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  dels_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBRowDeletes)
}
DBRowDeletes::DBRowDeletes(const DBRowDeletes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dels_(from.dels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBRowDeletes)
}

inline void DBRowDeletes::SharedCtor() {
}

DBRowDeletes::~DBRowDeletes() {
  // @@protoc_insertion_point(destructor:PRO.DBRowDeletes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBRowDeletes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBRowDeletes::ArenaDtor(void* object) {
  DBRowDeletes* _this = reinterpret_cast< DBRowDeletes* >(object);
  (void)_this;
}
void DBRowDeletes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBRowDeletes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBRowDeletes::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBRowDeletes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dels_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBRowDeletes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBRowDel dels = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBRowDeletes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBRowDeletes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBRowDel dels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dels_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_dels(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBRowDeletes)
  return target;
}

size_t DBRowDeletes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBRowDeletes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBRowDel dels = 1;
  total_size += 1UL * this->_internal_dels_size();
  for (const auto& msg : this->dels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBRowDeletes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBRowDeletes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBRowDeletes::GetClassData() const { return &_class_data_; }

void DBRowDeletes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBRowDeletes *>(to)->MergeFrom(
      static_cast<const DBRowDeletes &>(from));
}


void DBRowDeletes::MergeFrom(const DBRowDeletes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBRowDeletes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  dels_.MergeFrom(from.dels_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBRowDeletes::CopyFrom(const DBRowDeletes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBRowDeletes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRowDeletes::IsInitialized() const {
  return true;
}

void DBRowDeletes::InternalSwap(DBRowDeletes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  dels_.InternalSwap(&other->dels_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBRowDeletes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[1]);
}

// ===================================================================

class DBRoleBaseInfo::_Internal {
 public:
};

DBRoleBaseInfo::DBRoleBaseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBRoleBaseInfo)
}
DBRoleBaseInfo::DBRoleBaseInfo(const DBRoleBaseInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    nickname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&role_iid_, &from.role_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&registime_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(registime_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBRoleBaseInfo)
}

inline void DBRoleBaseInfo::SharedCtor() {
nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  nickname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&registime_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(registime_));
}

DBRoleBaseInfo::~DBRoleBaseInfo() {
  // @@protoc_insertion_point(destructor:PRO.DBRoleBaseInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBRoleBaseInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBRoleBaseInfo::ArenaDtor(void* object) {
  DBRoleBaseInfo* _this = reinterpret_cast< DBRoleBaseInfo* >(object);
  (void)_this;
}
void DBRoleBaseInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBRoleBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBRoleBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBRoleBaseInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmpty();
  ::memset(&role_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&registime_) -
      reinterpret_cast<char*>(&role_iid_)) + sizeof(registime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBRoleBaseInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          user_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBRoleBaseInfo.nickname"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 registime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          registime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBRoleBaseInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBRoleBaseInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_role_iid(), target);
  }

  // int64 user_iid = 3;
  if (this->_internal_user_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_user_iid(), target);
  }

  // string nickname = 4;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBRoleBaseInfo.nickname");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nickname(), target);
  }

  // int32 registime = 5;
  if (this->_internal_registime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_registime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBRoleBaseInfo)
  return target;
}

size_t DBRoleBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBRoleBaseInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 4;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int64 user_iid = 3;
  if (this->_internal_user_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 registime = 5;
  if (this->_internal_registime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_registime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBRoleBaseInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBRoleBaseInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBRoleBaseInfo::GetClassData() const { return &_class_data_; }

void DBRoleBaseInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBRoleBaseInfo *>(to)->MergeFrom(
      static_cast<const DBRoleBaseInfo &>(from));
}


void DBRoleBaseInfo::MergeFrom(const DBRoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBRoleBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_user_iid() != 0) {
    _internal_set_user_iid(from._internal_user_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_registime() != 0) {
    _internal_set_registime(from._internal_registime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBRoleBaseInfo::CopyFrom(const DBRoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBRoleBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleBaseInfo::IsInitialized() const {
  return true;
}

void DBRoleBaseInfo::InternalSwap(DBRoleBaseInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nickname_, lhs_arena,
      &other->nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBRoleBaseInfo, registime_)
      + sizeof(DBRoleBaseInfo::registime_)
      - PROTOBUF_FIELD_OFFSET(DBRoleBaseInfo, role_iid_)>(
          reinterpret_cast<char*>(&role_iid_),
          reinterpret_cast<char*>(&other->role_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBRoleBaseInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[2]);
}

// ===================================================================

class DBUserRoles::_Internal {
 public:
};

DBUserRoles::DBUserRoles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roles_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserRoles)
}
DBUserRoles::DBUserRoles(const DBUserRoles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserRoles)
}

inline void DBUserRoles::SharedCtor() {
}

DBUserRoles::~DBUserRoles() {
  // @@protoc_insertion_point(destructor:PRO.DBUserRoles)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserRoles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserRoles::ArenaDtor(void* object) {
  DBUserRoles* _this = reinterpret_cast< DBUserRoles* >(object);
  (void)_this;
}
void DBUserRoles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserRoles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserRoles::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserRoles)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserRoles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBRoleBaseInfo roles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserRoles::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserRoles)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBRoleBaseInfo roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_roles(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserRoles)
  return target;
}

size_t DBUserRoles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserRoles)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBRoleBaseInfo roles = 1;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserRoles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserRoles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserRoles::GetClassData() const { return &_class_data_; }

void DBUserRoles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserRoles *>(to)->MergeFrom(
      static_cast<const DBUserRoles &>(from));
}


void DBUserRoles::MergeFrom(const DBUserRoles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserRoles)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserRoles::CopyFrom(const DBUserRoles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserRoles::IsInitialized() const {
  return true;
}

void DBUserRoles::InternalSwap(DBUserRoles* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roles_.InternalSwap(&other->roles_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserRoles::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[3]);
}

// ===================================================================

class DBUserHome::_Internal {
 public:
};

DBUserHome::DBUserHome(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserHome)
}
DBUserHome::DBUserHome(const DBUserHome& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  home_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    home_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_home_name().empty()) {
    home_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_home_name(), 
      GetArenaForAllocation());
  }
  look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_look_at().empty()) {
    look_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_look_at(), 
      GetArenaForAllocation());
  }
  geo_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    geo_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_geo_pos().empty()) {
    geo_pos_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_geo_pos(), 
      GetArenaForAllocation());
  }
  ::memcpy(&role_iid_, &from.role_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_residedate_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(last_residedate_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserHome)
}

inline void DBUserHome::SharedCtor() {
home_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  home_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
geo_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  geo_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&last_residedate_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(last_residedate_));
}

DBUserHome::~DBUserHome() {
  // @@protoc_insertion_point(destructor:PRO.DBUserHome)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserHome::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  home_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  look_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  geo_pos_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBUserHome::ArenaDtor(void* object) {
  DBUserHome* _this = reinterpret_cast< DBUserHome* >(object);
  (void)_this;
}
void DBUserHome::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserHome::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserHome::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserHome)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  home_name_.ClearToEmpty();
  look_at_.ClearToEmpty();
  geo_pos_.ClearToEmpty();
  ::memset(&role_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_residedate_) -
      reinterpret_cast<char*>(&role_iid_)) + sizeof(last_residedate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserHome::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string home_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_home_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHome.home_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ground_resid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ground_resid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string look_at = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_look_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHome.look_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string geo_pos = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_geo_pos();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHome.geo_pos"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 reside_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          reside_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 last_residedate = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          last_residedate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserHome::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserHome)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_role_iid(), target);
  }

  // string home_name = 3;
  if (!this->_internal_home_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_home_name().data(), static_cast<int>(this->_internal_home_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHome.home_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_home_name(), target);
  }

  // int64 ground_resid = 4;
  if (this->_internal_ground_resid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_ground_resid(), target);
  }

  // string look_at = 5;
  if (!this->_internal_look_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_look_at().data(), static_cast<int>(this->_internal_look_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHome.look_at");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_look_at(), target);
  }

  // string geo_pos = 6;
  if (!this->_internal_geo_pos().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_geo_pos().data(), static_cast<int>(this->_internal_geo_pos().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHome.geo_pos");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_geo_pos(), target);
  }

  // int32 reside_time = 7;
  if (this->_internal_reside_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_reside_time(), target);
  }

  // int32 last_residedate = 8;
  if (this->_internal_last_residedate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_last_residedate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserHome)
  return target;
}

size_t DBUserHome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserHome)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string home_name = 3;
  if (!this->_internal_home_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_home_name());
  }

  // string look_at = 5;
  if (!this->_internal_look_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_look_at());
  }

  // string geo_pos = 6;
  if (!this->_internal_geo_pos().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_geo_pos());
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int64 ground_resid = 4;
  if (this->_internal_ground_resid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_ground_resid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 reside_time = 7;
  if (this->_internal_reside_time() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_reside_time());
  }

  // int32 last_residedate = 8;
  if (this->_internal_last_residedate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_last_residedate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserHome::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserHome::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserHome::GetClassData() const { return &_class_data_; }

void DBUserHome::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserHome *>(to)->MergeFrom(
      static_cast<const DBUserHome &>(from));
}


void DBUserHome::MergeFrom(const DBUserHome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserHome)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_home_name().empty()) {
    _internal_set_home_name(from._internal_home_name());
  }
  if (!from._internal_look_at().empty()) {
    _internal_set_look_at(from._internal_look_at());
  }
  if (!from._internal_geo_pos().empty()) {
    _internal_set_geo_pos(from._internal_geo_pos());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_ground_resid() != 0) {
    _internal_set_ground_resid(from._internal_ground_resid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_reside_time() != 0) {
    _internal_set_reside_time(from._internal_reside_time());
  }
  if (from._internal_last_residedate() != 0) {
    _internal_set_last_residedate(from._internal_last_residedate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserHome::CopyFrom(const DBUserHome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserHome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserHome::IsInitialized() const {
  return true;
}

void DBUserHome::InternalSwap(DBUserHome* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &home_name_, lhs_arena,
      &other->home_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &look_at_, lhs_arena,
      &other->look_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &geo_pos_, lhs_arena,
      &other->geo_pos_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserHome, last_residedate_)
      + sizeof(DBUserHome::last_residedate_)
      - PROTOBUF_FIELD_OFFSET(DBUserHome, role_iid_)>(
          reinterpret_cast<char*>(&role_iid_),
          reinterpret_cast<char*>(&other->role_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserHome::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[4]);
}

// ===================================================================

class DBUserHomeStructureItem::_Internal {
 public:
};

DBUserHomeStructureItem::DBUserHomeStructureItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserHomeStructureItem)
}
DBUserHomeStructureItem::DBUserHomeStructureItem(const DBUserHomeStructureItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_look_at().empty()) {
    look_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_look_at(), 
      GetArenaForAllocation());
  }
  building_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    building_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_building_pos().empty()) {
    building_pos_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_building_pos(), 
      GetArenaForAllocation());
  }
  ::memcpy(&building_iid_, &from.building_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&building_iid_)) + sizeof(ver__));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserHomeStructureItem)
}

inline void DBUserHomeStructureItem::SharedCtor() {
look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
building_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  building_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&building_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&building_iid_)) + sizeof(ver__));
}

DBUserHomeStructureItem::~DBUserHomeStructureItem() {
  // @@protoc_insertion_point(destructor:PRO.DBUserHomeStructureItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserHomeStructureItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  look_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  building_pos_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBUserHomeStructureItem::ArenaDtor(void* object) {
  DBUserHomeStructureItem* _this = reinterpret_cast< DBUserHomeStructureItem* >(object);
  (void)_this;
}
void DBUserHomeStructureItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserHomeStructureItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserHomeStructureItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserHomeStructureItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  look_at_.ClearToEmpty();
  building_pos_.ClearToEmpty();
  ::memset(&building_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver__) -
      reinterpret_cast<char*>(&building_iid_)) + sizeof(ver__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserHomeStructureItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 building_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          building_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 home_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          home_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 parent_building = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          parent_building_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 building_resid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          building_resid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string look_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_look_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHomeStructureItem.look_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string building_pos = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_building_pos();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHomeStructureItem.building_pos"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserHomeStructureItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserHomeStructureItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 building_iid = 2;
  if (this->_internal_building_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_building_iid(), target);
  }

  // int64 home_iid = 3;
  if (this->_internal_home_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_home_iid(), target);
  }

  // int64 parent_building = 4;
  if (this->_internal_parent_building() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_parent_building(), target);
  }

  // int64 building_resid = 5;
  if (this->_internal_building_resid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_building_resid(), target);
  }

  // string look_at = 6;
  if (!this->_internal_look_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_look_at().data(), static_cast<int>(this->_internal_look_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHomeStructureItem.look_at");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_look_at(), target);
  }

  // string building_pos = 7;
  if (!this->_internal_building_pos().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_building_pos().data(), static_cast<int>(this->_internal_building_pos().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHomeStructureItem.building_pos");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_building_pos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserHomeStructureItem)
  return target;
}

size_t DBUserHomeStructureItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserHomeStructureItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string look_at = 6;
  if (!this->_internal_look_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_look_at());
  }

  // string building_pos = 7;
  if (!this->_internal_building_pos().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_building_pos());
  }

  // int64 building_iid = 2;
  if (this->_internal_building_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_building_iid());
  }

  // int64 home_iid = 3;
  if (this->_internal_home_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_home_iid());
  }

  // int64 parent_building = 4;
  if (this->_internal_parent_building() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_parent_building());
  }

  // int64 building_resid = 5;
  if (this->_internal_building_resid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_building_resid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserHomeStructureItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserHomeStructureItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserHomeStructureItem::GetClassData() const { return &_class_data_; }

void DBUserHomeStructureItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserHomeStructureItem *>(to)->MergeFrom(
      static_cast<const DBUserHomeStructureItem &>(from));
}


void DBUserHomeStructureItem::MergeFrom(const DBUserHomeStructureItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserHomeStructureItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_look_at().empty()) {
    _internal_set_look_at(from._internal_look_at());
  }
  if (!from._internal_building_pos().empty()) {
    _internal_set_building_pos(from._internal_building_pos());
  }
  if (from._internal_building_iid() != 0) {
    _internal_set_building_iid(from._internal_building_iid());
  }
  if (from._internal_home_iid() != 0) {
    _internal_set_home_iid(from._internal_home_iid());
  }
  if (from._internal_parent_building() != 0) {
    _internal_set_parent_building(from._internal_parent_building());
  }
  if (from._internal_building_resid() != 0) {
    _internal_set_building_resid(from._internal_building_resid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserHomeStructureItem::CopyFrom(const DBUserHomeStructureItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserHomeStructureItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserHomeStructureItem::IsInitialized() const {
  return true;
}

void DBUserHomeStructureItem::InternalSwap(DBUserHomeStructureItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &look_at_, lhs_arena,
      &other->look_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &building_pos_, lhs_arena,
      &other->building_pos_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserHomeStructureItem, ver__)
      + sizeof(DBUserHomeStructureItem::ver__)
      - PROTOBUF_FIELD_OFFSET(DBUserHomeStructureItem, building_iid_)>(
          reinterpret_cast<char*>(&building_iid_),
          reinterpret_cast<char*>(&other->building_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserHomeStructureItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[5]);
}

// ===================================================================

class DBUserHomeStructure::_Internal {
 public:
};

DBUserHomeStructure::DBUserHomeStructure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserHomeStructure)
}
DBUserHomeStructure::DBUserHomeStructure(const DBUserHomeStructure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserHomeStructure)
}

inline void DBUserHomeStructure::SharedCtor() {
}

DBUserHomeStructure::~DBUserHomeStructure() {
  // @@protoc_insertion_point(destructor:PRO.DBUserHomeStructure)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserHomeStructure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserHomeStructure::ArenaDtor(void* object) {
  DBUserHomeStructure* _this = reinterpret_cast< DBUserHomeStructure* >(object);
  (void)_this;
}
void DBUserHomeStructure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserHomeStructure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserHomeStructure::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserHomeStructure)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserHomeStructure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserHomeStructureItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserHomeStructure::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserHomeStructure)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserHomeStructureItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserHomeStructure)
  return target;
}

size_t DBUserHomeStructure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserHomeStructure)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserHomeStructureItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserHomeStructure::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserHomeStructure::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserHomeStructure::GetClassData() const { return &_class_data_; }

void DBUserHomeStructure::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserHomeStructure *>(to)->MergeFrom(
      static_cast<const DBUserHomeStructure &>(from));
}


void DBUserHomeStructure::MergeFrom(const DBUserHomeStructure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserHomeStructure)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserHomeStructure::CopyFrom(const DBUserHomeStructure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserHomeStructure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserHomeStructure::IsInitialized() const {
  return true;
}

void DBUserHomeStructure::InternalSwap(DBUserHomeStructure* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserHomeStructure::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[6]);
}

// ===================================================================

class DBPetCategory::_Internal {
 public:
};

DBPetCategory::DBPetCategory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBPetCategory)
}
DBPetCategory::DBPetCategory(const DBPetCategory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pet_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pet_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pet_name().empty()) {
    pet_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pet_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&pet_iid_, &from.pet_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pet_sex_) -
    reinterpret_cast<char*>(&pet_iid_)) + sizeof(pet_sex_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBPetCategory)
}

inline void DBPetCategory::SharedCtor() {
pet_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pet_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pet_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pet_sex_) -
    reinterpret_cast<char*>(&pet_iid_)) + sizeof(pet_sex_));
}

DBPetCategory::~DBPetCategory() {
  // @@protoc_insertion_point(destructor:PRO.DBPetCategory)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBPetCategory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pet_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBPetCategory::ArenaDtor(void* object) {
  DBPetCategory* _this = reinterpret_cast< DBPetCategory* >(object);
  (void)_this;
}
void DBPetCategory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBPetCategory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBPetCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBPetCategory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pet_name_.ClearToEmpty();
  ::memset(&pet_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pet_sex_) -
      reinterpret_cast<char*>(&pet_iid_)) + sizeof(pet_sex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBPetCategory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 pet_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          pet_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pet_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          pet_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 pet_resid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          pet_resid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pet_sex = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          pet_sex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pet_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_pet_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBPetCategory.pet_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBPetCategory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBPetCategory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pet_iid = 2;
  if (this->_internal_pet_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_pet_iid(), target);
  }

  // int32 pet_type = 3;
  if (this->_internal_pet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_pet_type(), target);
  }

  // int64 pet_resid = 4;
  if (this->_internal_pet_resid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_pet_resid(), target);
  }

  // int32 pet_sex = 5;
  if (this->_internal_pet_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pet_sex(), target);
  }

  // string pet_name = 6;
  if (!this->_internal_pet_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_name().data(), static_cast<int>(this->_internal_pet_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBPetCategory.pet_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_pet_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBPetCategory)
  return target;
}

size_t DBPetCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBPetCategory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_name = 6;
  if (!this->_internal_pet_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_name());
  }

  // int64 pet_iid = 2;
  if (this->_internal_pet_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pet_iid());
  }

  // int64 pet_resid = 4;
  if (this->_internal_pet_resid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pet_resid());
  }

  // int32 pet_type = 3;
  if (this->_internal_pet_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pet_type());
  }

  // int32 pet_sex = 5;
  if (this->_internal_pet_sex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pet_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBPetCategory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBPetCategory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBPetCategory::GetClassData() const { return &_class_data_; }

void DBPetCategory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBPetCategory *>(to)->MergeFrom(
      static_cast<const DBPetCategory &>(from));
}


void DBPetCategory::MergeFrom(const DBPetCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBPetCategory)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_name().empty()) {
    _internal_set_pet_name(from._internal_pet_name());
  }
  if (from._internal_pet_iid() != 0) {
    _internal_set_pet_iid(from._internal_pet_iid());
  }
  if (from._internal_pet_resid() != 0) {
    _internal_set_pet_resid(from._internal_pet_resid());
  }
  if (from._internal_pet_type() != 0) {
    _internal_set_pet_type(from._internal_pet_type());
  }
  if (from._internal_pet_sex() != 0) {
    _internal_set_pet_sex(from._internal_pet_sex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBPetCategory::CopyFrom(const DBPetCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBPetCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPetCategory::IsInitialized() const {
  return true;
}

void DBPetCategory::InternalSwap(DBPetCategory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pet_name_, lhs_arena,
      &other->pet_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBPetCategory, pet_sex_)
      + sizeof(DBPetCategory::pet_sex_)
      - PROTOBUF_FIELD_OFFSET(DBPetCategory, pet_iid_)>(
          reinterpret_cast<char*>(&pet_iid_),
          reinterpret_cast<char*>(&other->pet_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBPetCategory::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[7]);
}

// ===================================================================

class DBUserPetItem::_Internal {
 public:
};

DBUserPetItem::DBUserPetItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserPetItem)
}
DBUserPetItem::DBUserPetItem(const DBUserPetItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mypet_iid_, &from.mypet_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&birthday_) -
    reinterpret_cast<char*>(&mypet_iid_)) + sizeof(birthday_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserPetItem)
}

inline void DBUserPetItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mypet_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&birthday_) -
    reinterpret_cast<char*>(&mypet_iid_)) + sizeof(birthday_));
}

DBUserPetItem::~DBUserPetItem() {
  // @@protoc_insertion_point(destructor:PRO.DBUserPetItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserPetItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserPetItem::ArenaDtor(void* object) {
  DBUserPetItem* _this = reinterpret_cast< DBUserPetItem* >(object);
  (void)_this;
}
void DBUserPetItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserPetItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserPetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserPetItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mypet_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&birthday_) -
      reinterpret_cast<char*>(&mypet_iid_)) + sizeof(birthday_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserPetItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 mypet_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mypet_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 pet_iid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          pet_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pet_age = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          pet_age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 birthday = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          birthday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserPetItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserPetItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 mypet_iid = 2;
  if (this->_internal_mypet_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mypet_iid(), target);
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_role_iid(), target);
  }

  // int64 pet_iid = 4;
  if (this->_internal_pet_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_pet_iid(), target);
  }

  // int32 pet_age = 5;
  if (this->_internal_pet_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pet_age(), target);
  }

  // int32 birthday = 6;
  if (this->_internal_birthday() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_birthday(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserPetItem)
  return target;
}

size_t DBUserPetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserPetItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mypet_iid = 2;
  if (this->_internal_mypet_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mypet_iid());
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 pet_age = 5;
  if (this->_internal_pet_age() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pet_age());
  }

  // int64 pet_iid = 4;
  if (this->_internal_pet_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pet_iid());
  }

  // int32 birthday = 6;
  if (this->_internal_birthday() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_birthday());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserPetItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserPetItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserPetItem::GetClassData() const { return &_class_data_; }

void DBUserPetItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserPetItem *>(to)->MergeFrom(
      static_cast<const DBUserPetItem &>(from));
}


void DBUserPetItem::MergeFrom(const DBUserPetItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserPetItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mypet_iid() != 0) {
    _internal_set_mypet_iid(from._internal_mypet_iid());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_pet_age() != 0) {
    _internal_set_pet_age(from._internal_pet_age());
  }
  if (from._internal_pet_iid() != 0) {
    _internal_set_pet_iid(from._internal_pet_iid());
  }
  if (from._internal_birthday() != 0) {
    _internal_set_birthday(from._internal_birthday());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserPetItem::CopyFrom(const DBUserPetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserPetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserPetItem::IsInitialized() const {
  return true;
}

void DBUserPetItem::InternalSwap(DBUserPetItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserPetItem, birthday_)
      + sizeof(DBUserPetItem::birthday_)
      - PROTOBUF_FIELD_OFFSET(DBUserPetItem, mypet_iid_)>(
          reinterpret_cast<char*>(&mypet_iid_),
          reinterpret_cast<char*>(&other->mypet_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserPetItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[8]);
}

// ===================================================================

class DBUserPets::_Internal {
 public:
};

DBUserPets::DBUserPets(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  pets_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserPets)
}
DBUserPets::DBUserPets(const DBUserPets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pets_(from.pets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserPets)
}

inline void DBUserPets::SharedCtor() {
}

DBUserPets::~DBUserPets() {
  // @@protoc_insertion_point(destructor:PRO.DBUserPets)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserPets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserPets::ArenaDtor(void* object) {
  DBUserPets* _this = reinterpret_cast< DBUserPets* >(object);
  (void)_this;
}
void DBUserPets::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserPets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserPets::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserPets)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserPets::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserPetItem pets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserPets::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserPets)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserPetItem pets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pets(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserPets)
  return target;
}

size_t DBUserPets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserPets)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserPetItem pets = 1;
  total_size += 1UL * this->_internal_pets_size();
  for (const auto& msg : this->pets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserPets::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserPets::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserPets::GetClassData() const { return &_class_data_; }

void DBUserPets::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserPets *>(to)->MergeFrom(
      static_cast<const DBUserPets &>(from));
}


void DBUserPets::MergeFrom(const DBUserPets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserPets)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  pets_.MergeFrom(from.pets_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserPets::CopyFrom(const DBUserPets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserPets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserPets::IsInitialized() const {
  return true;
}

void DBUserPets::InternalSwap(DBUserPets* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  pets_.InternalSwap(&other->pets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserPets::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace PRO
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PRO::DBRowDel* Arena::CreateMaybeMessage< ::PRO::DBRowDel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBRowDel >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBRowDeletes* Arena::CreateMaybeMessage< ::PRO::DBRowDeletes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBRowDeletes >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBRoleBaseInfo* Arena::CreateMaybeMessage< ::PRO::DBRoleBaseInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBRoleBaseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserRoles* Arena::CreateMaybeMessage< ::PRO::DBUserRoles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserRoles >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserHome* Arena::CreateMaybeMessage< ::PRO::DBUserHome >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserHome >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserHomeStructureItem* Arena::CreateMaybeMessage< ::PRO::DBUserHomeStructureItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserHomeStructureItem >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserHomeStructure* Arena::CreateMaybeMessage< ::PRO::DBUserHomeStructure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserHomeStructure >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBPetCategory* Arena::CreateMaybeMessage< ::PRO::DBPetCategory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBPetCategory >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserPetItem* Arena::CreateMaybeMessage< ::PRO::DBUserPetItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserPetItem >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserPets* Arena::CreateMaybeMessage< ::PRO::DBUserPets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserPets >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
