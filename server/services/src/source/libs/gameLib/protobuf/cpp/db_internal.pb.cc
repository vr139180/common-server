// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_internal.proto

#include "db_internal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PRO {
constexpr DBRowDel::DBRowDel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(int64_t{0})
  , ver__(0u){}
struct DBRowDelDefaultTypeInternal {
  constexpr DBRowDelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBRowDelDefaultTypeInternal() {}
  union {
    DBRowDel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBRowDelDefaultTypeInternal _DBRowDel_default_instance_;
constexpr DBRowDeletes::DBRowDeletes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dels_(){}
struct DBRowDeletesDefaultTypeInternal {
  constexpr DBRowDeletesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBRowDeletesDefaultTypeInternal() {}
  union {
    DBRowDeletes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBRowDeletesDefaultTypeInternal _DBRowDeletes_default_instance_;
constexpr DBRoleBaseInfo::DBRoleBaseInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nickname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_iid_(int64_t{0})
  , user_iid_(int64_t{0})
  , ver__(0u)
  , registime_(0)
  , levels_(0){}
struct DBRoleBaseInfoDefaultTypeInternal {
  constexpr DBRoleBaseInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBRoleBaseInfoDefaultTypeInternal() {}
  union {
    DBRoleBaseInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBRoleBaseInfoDefaultTypeInternal _DBRoleBaseInfo_default_instance_;
constexpr DBUserRoles::DBUserRoles(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roles_(){}
struct DBUserRolesDefaultTypeInternal {
  constexpr DBUserRolesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserRolesDefaultTypeInternal() {}
  union {
    DBUserRoles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserRolesDefaultTypeInternal _DBUserRoles_default_instance_;
constexpr DBUserHome::DBUserHome(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : home_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , look_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , geo_pos_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_iid_(int64_t{0})
  , ground_resid_(int64_t{0})
  , ver__(0u)
  , reside_time_(0)
  , last_residedate_(0)
  , levels_(0){}
struct DBUserHomeDefaultTypeInternal {
  constexpr DBUserHomeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserHomeDefaultTypeInternal() {}
  union {
    DBUserHome _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserHomeDefaultTypeInternal _DBUserHome_default_instance_;
constexpr DBUserHomeStructureItem::DBUserHomeStructureItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : look_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , building_pos_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , building_iid_(int64_t{0})
  , home_iid_(int64_t{0})
  , parent_building_(int64_t{0})
  , ver__(0u)
  , levels_(0)
  , building_resid_(int64_t{0}){}
struct DBUserHomeStructureItemDefaultTypeInternal {
  constexpr DBUserHomeStructureItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserHomeStructureItemDefaultTypeInternal() {}
  union {
    DBUserHomeStructureItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserHomeStructureItemDefaultTypeInternal _DBUserHomeStructureItem_default_instance_;
constexpr DBUserHomeStructure::DBUserHomeStructure(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct DBUserHomeStructureDefaultTypeInternal {
  constexpr DBUserHomeStructureDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserHomeStructureDefaultTypeInternal() {}
  union {
    DBUserHomeStructure _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserHomeStructureDefaultTypeInternal _DBUserHomeStructure_default_instance_;
constexpr DBPetCategory::DBPetCategory(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pet_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pet_iid_(int64_t{0})
  , pet_resid_(int64_t{0})
  , pet_type_(0)
  , pet_sex_(0){}
struct DBPetCategoryDefaultTypeInternal {
  constexpr DBPetCategoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBPetCategoryDefaultTypeInternal() {}
  union {
    DBPetCategory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBPetCategoryDefaultTypeInternal _DBPetCategory_default_instance_;
constexpr DBUserPetItem::DBUserPetItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mypet_iid_(int64_t{0})
  , role_iid_(int64_t{0})
  , ver__(0u)
  , pet_age_(0)
  , pet_iid_(int64_t{0})
  , birthday_(0){}
struct DBUserPetItemDefaultTypeInternal {
  constexpr DBUserPetItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserPetItemDefaultTypeInternal() {}
  union {
    DBUserPetItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserPetItemDefaultTypeInternal _DBUserPetItem_default_instance_;
constexpr DBUserPets::DBUserPets(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pets_(){}
struct DBUserPetsDefaultTypeInternal {
  constexpr DBUserPetsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserPetsDefaultTypeInternal() {}
  union {
    DBUserPets _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserPetsDefaultTypeInternal _DBUserPets_default_instance_;
constexpr DBTaskAttrData_DatasEntry_DoNotUse::DBTaskAttrData_DatasEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DBTaskAttrData_DatasEntry_DoNotUseDefaultTypeInternal {
  constexpr DBTaskAttrData_DatasEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBTaskAttrData_DatasEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DBTaskAttrData_DatasEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBTaskAttrData_DatasEntry_DoNotUseDefaultTypeInternal _DBTaskAttrData_DatasEntry_DoNotUse_default_instance_;
constexpr DBTaskAttrData::DBTaskAttrData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : datas_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct DBTaskAttrDataDefaultTypeInternal {
  constexpr DBTaskAttrDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBTaskAttrDataDefaultTypeInternal() {}
  union {
    DBTaskAttrData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBTaskAttrDataDefaultTypeInternal _DBTaskAttrData_default_instance_;
constexpr DBUserTaskItem::DBUserTaskItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : source_iid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , task_datas_(nullptr)
  , iid_(int64_t{0})
  , ver__(0u)
  , task_iid_(0)
  , role_iid_(int64_t{0})
  , my_taskgroup_(int64_t{0})
  , task_group_(0)
  , qstate_(0)
  , accept_level_(0)
  , cycle_task_(false)
  , cycle_num_(0)
  , createtime_(0)
  , firstupdatetime_(0)
  , lastupdatetime_(0){}
struct DBUserTaskItemDefaultTypeInternal {
  constexpr DBUserTaskItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskItemDefaultTypeInternal() {}
  union {
    DBUserTaskItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskItemDefaultTypeInternal _DBUserTaskItem_default_instance_;
constexpr DBUserTasks::DBUserTasks(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct DBUserTasksDefaultTypeInternal {
  constexpr DBUserTasksDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTasksDefaultTypeInternal() {}
  union {
    DBUserTasks _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTasksDefaultTypeInternal _DBUserTasks_default_instance_;
constexpr DBUserTaskEndItem::DBUserTaskEndItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : iid_(int64_t{0})
  , ver__(0u)
  , task_iid_(0)
  , qstate_(0)
  , lastupdatetime_(0){}
struct DBUserTaskEndItemDefaultTypeInternal {
  constexpr DBUserTaskEndItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskEndItemDefaultTypeInternal() {}
  union {
    DBUserTaskEndItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskEndItemDefaultTypeInternal _DBUserTaskEndItem_default_instance_;
constexpr DBUserTaskEnds::DBUserTaskEnds(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct DBUserTaskEndsDefaultTypeInternal {
  constexpr DBUserTaskEndsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskEndsDefaultTypeInternal() {}
  union {
    DBUserTaskEnds _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskEndsDefaultTypeInternal _DBUserTaskEnds_default_instance_;
constexpr DBTaskGAttrData_DatasEntry_DoNotUse::DBTaskGAttrData_DatasEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DBTaskGAttrData_DatasEntry_DoNotUseDefaultTypeInternal {
  constexpr DBTaskGAttrData_DatasEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBTaskGAttrData_DatasEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DBTaskGAttrData_DatasEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBTaskGAttrData_DatasEntry_DoNotUseDefaultTypeInternal _DBTaskGAttrData_DatasEntry_DoNotUse_default_instance_;
constexpr DBTaskGAttrData::DBTaskGAttrData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : datas_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct DBTaskGAttrDataDefaultTypeInternal {
  constexpr DBTaskGAttrDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBTaskGAttrDataDefaultTypeInternal() {}
  union {
    DBTaskGAttrData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBTaskGAttrDataDefaultTypeInternal _DBTaskGAttrData_default_instance_;
constexpr DBUserTaskGroup::DBUserTaskGroup(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cell_data_(nullptr)
  , iid_(int64_t{0})
  , ver__(0u)
  , task_group_(0)
  , role_iid_(int64_t{0})
  , group_cell_(0)
  , gstate_(0)
  , trigg_level_(0)
  , createtime_(0)
  , endtime_(0){}
struct DBUserTaskGroupDefaultTypeInternal {
  constexpr DBUserTaskGroupDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskGroupDefaultTypeInternal() {}
  union {
    DBUserTaskGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskGroupDefaultTypeInternal _DBUserTaskGroup_default_instance_;
constexpr DBUserTaskGroups::DBUserTaskGroups(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groups_(){}
struct DBUserTaskGroupsDefaultTypeInternal {
  constexpr DBUserTaskGroupsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskGroupsDefaultTypeInternal() {}
  union {
    DBUserTaskGroups _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskGroupsDefaultTypeInternal _DBUserTaskGroups_default_instance_;
constexpr DBUserTaskGroupEnd::DBUserTaskGroupEnd(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : iid_(int64_t{0})
  , ver__(0u)
  , task_group_(0)
  , gstate_(0)
  , endtime_(0){}
struct DBUserTaskGroupEndDefaultTypeInternal {
  constexpr DBUserTaskGroupEndDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskGroupEndDefaultTypeInternal() {}
  union {
    DBUserTaskGroupEnd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskGroupEndDefaultTypeInternal _DBUserTaskGroupEnd_default_instance_;
constexpr DBUserTaskGroupEnds::DBUserTaskGroupEnds(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : groups_(){}
struct DBUserTaskGroupEndsDefaultTypeInternal {
  constexpr DBUserTaskGroupEndsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserTaskGroupEndsDefaultTypeInternal() {}
  union {
    DBUserTaskGroupEnds _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserTaskGroupEndsDefaultTypeInternal _DBUserTaskGroupEnds_default_instance_;
constexpr DBUserBattleInfo::DBUserBattleInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : iid_(int64_t{0})
  , ver__(0u)
  , levels_(0)
  , role_iid_(int64_t{0})
  , victory_(0)
  , defeat_(0)
  , draw_(0){}
struct DBUserBattleInfoDefaultTypeInternal {
  constexpr DBUserBattleInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserBattleInfoDefaultTypeInternal() {}
  union {
    DBUserBattleInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserBattleInfoDefaultTypeInternal _DBUserBattleInfo_default_instance_;
constexpr DBUserBattles::DBUserBattles(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : infos_(){}
struct DBUserBattlesDefaultTypeInternal {
  constexpr DBUserBattlesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBUserBattlesDefaultTypeInternal() {}
  union {
    DBUserBattles _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBUserBattlesDefaultTypeInternal _DBUserBattles_default_instance_;
}  // namespace PRO
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_db_5finternal_2eproto[24];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_db_5finternal_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_db_5finternal_2eproto = nullptr;

const uint32_t TableStruct_db_5finternal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDel, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDel, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDeletes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRowDeletes, dels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, user_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, nickname_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, registime_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBRoleBaseInfo, levels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserRoles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserRoles, roles_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, home_name_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, ground_resid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, look_at_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, geo_pos_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, reside_time_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, last_residedate_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHome, levels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, building_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, home_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, parent_building_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, building_resid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, look_at_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, building_pos_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructureItem, levels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserHomeStructure, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_type_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_resid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_sex_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBPetCategory, pet_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, mypet_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, pet_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, pet_age_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPetItem, birthday_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserPets, pets_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskAttrData_DatasEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskAttrData_DatasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskAttrData_DatasEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskAttrData_DatasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskAttrData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskAttrData, datas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, task_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, my_taskgroup_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, task_group_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, qstate_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, accept_level_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, cycle_task_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, cycle_num_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, createtime_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, firstupdatetime_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, lastupdatetime_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, task_datas_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskItem, source_iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTasks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTasks, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEndItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEndItem, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEndItem, iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEndItem, task_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEndItem, qstate_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEndItem, lastupdatetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEnds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskEnds, items_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskGAttrData_DatasEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskGAttrData_DatasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskGAttrData_DatasEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskGAttrData_DatasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskGAttrData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBTaskGAttrData, datas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, task_group_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, group_cell_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, cell_data_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, gstate_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, trigg_level_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, createtime_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroup, endtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroups, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroups, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnd, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnd, iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnd, task_group_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnd, gstate_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnd, endtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnds, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserTaskGroupEnds, groups_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, ver__),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, role_iid_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, levels_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, victory_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, defeat_),
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattleInfo, draw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::DBUserBattles, infos_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PRO::DBRowDel)},
  { 8, -1, -1, sizeof(::PRO::DBRowDeletes)},
  { 15, -1, -1, sizeof(::PRO::DBRoleBaseInfo)},
  { 27, -1, -1, sizeof(::PRO::DBUserRoles)},
  { 34, -1, -1, sizeof(::PRO::DBUserHome)},
  { 49, -1, -1, sizeof(::PRO::DBUserHomeStructureItem)},
  { 63, -1, -1, sizeof(::PRO::DBUserHomeStructure)},
  { 70, -1, -1, sizeof(::PRO::DBPetCategory)},
  { 81, -1, -1, sizeof(::PRO::DBUserPetItem)},
  { 93, -1, -1, sizeof(::PRO::DBUserPets)},
  { 100, 108, -1, sizeof(::PRO::DBTaskAttrData_DatasEntry_DoNotUse)},
  { 110, -1, -1, sizeof(::PRO::DBTaskAttrData)},
  { 117, -1, -1, sizeof(::PRO::DBUserTaskItem)},
  { 138, -1, -1, sizeof(::PRO::DBUserTasks)},
  { 145, -1, -1, sizeof(::PRO::DBUserTaskEndItem)},
  { 156, -1, -1, sizeof(::PRO::DBUserTaskEnds)},
  { 163, 171, -1, sizeof(::PRO::DBTaskGAttrData_DatasEntry_DoNotUse)},
  { 173, -1, -1, sizeof(::PRO::DBTaskGAttrData)},
  { 180, -1, -1, sizeof(::PRO::DBUserTaskGroup)},
  { 196, -1, -1, sizeof(::PRO::DBUserTaskGroups)},
  { 203, -1, -1, sizeof(::PRO::DBUserTaskGroupEnd)},
  { 214, -1, -1, sizeof(::PRO::DBUserTaskGroupEnds)},
  { 221, -1, -1, sizeof(::PRO::DBUserBattleInfo)},
  { 234, -1, -1, sizeof(::PRO::DBUserBattles)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBRowDel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBRowDeletes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBRoleBaseInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserRoles_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserHome_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserHomeStructureItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserHomeStructure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBPetCategory_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserPetItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserPets_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBTaskAttrData_DatasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBTaskAttrData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTasks_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskEndItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskEnds_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBTaskGAttrData_DatasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBTaskGAttrData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskGroup_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskGroups_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskGroupEnd_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserTaskGroupEnds_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserBattleInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_DBUserBattles_default_instance_),
};

const char descriptor_table_protodef_db_5finternal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021db_internal.proto\022\003PRO\"$\n\010DBRowDel\022\014\n\004"
  "ver_\030\001 \001(\r\022\n\n\002id\030\002 \001(\003\"+\n\014DBRowDeletes\022\033"
  "\n\004dels\030\001 \003(\0132\r.PRO.DBRowDel\"w\n\016DBRoleBas"
  "eInfo\022\014\n\004ver_\030\001 \001(\r\022\020\n\010role_iid\030\002 \001(\003\022\020\n"
  "\010user_iid\030\003 \001(\003\022\020\n\010nickname\030\004 \001(\t\022\021\n\treg"
  "istime\030\005 \001(\005\022\016\n\006levels\030\006 \001(\005\"1\n\013DBUserRo"
  "les\022\"\n\005roles\030\001 \003(\0132\023.PRO.DBRoleBaseInfo\""
  "\265\001\n\nDBUserHome\022\014\n\004ver_\030\001 \001(\r\022\020\n\010role_iid"
  "\030\002 \001(\003\022\021\n\thome_name\030\003 \001(\t\022\024\n\014ground_resi"
  "d\030\004 \001(\003\022\017\n\007look_at\030\005 \001(\t\022\017\n\007geo_pos\030\006 \001("
  "\t\022\023\n\013reside_time\030\007 \001(\005\022\027\n\017last_residedat"
  "e\030\010 \001(\005\022\016\n\006levels\030\t \001(\005\"\267\001\n\027DBUserHomeSt"
  "ructureItem\022\014\n\004ver_\030\001 \001(\r\022\024\n\014building_ii"
  "d\030\002 \001(\003\022\020\n\010home_iid\030\003 \001(\003\022\027\n\017parent_buil"
  "ding\030\004 \001(\003\022\026\n\016building_resid\030\005 \001(\003\022\017\n\007lo"
  "ok_at\030\006 \001(\t\022\024\n\014building_pos\030\007 \001(\t\022\016\n\006lev"
  "els\030\010 \001(\005\"B\n\023DBUserHomeStructure\022+\n\005item"
  "s\030\001 \003(\0132\034.PRO.DBUserHomeStructureItem\"h\n"
  "\rDBPetCategory\022\017\n\007pet_iid\030\002 \001(\003\022\020\n\010pet_t"
  "ype\030\003 \001(\005\022\021\n\tpet_resid\030\004 \001(\003\022\017\n\007pet_sex\030"
  "\005 \001(\005\022\020\n\010pet_name\030\006 \001(\t\"v\n\rDBUserPetItem"
  "\022\014\n\004ver_\030\001 \001(\r\022\021\n\tmypet_iid\030\002 \001(\003\022\020\n\010rol"
  "e_iid\030\003 \001(\003\022\017\n\007pet_iid\030\004 \001(\003\022\017\n\007pet_age\030"
  "\005 \001(\005\022\020\n\010birthday\030\006 \001(\005\".\n\nDBUserPets\022 \n"
  "\004pets\030\001 \003(\0132\022.PRO.DBUserPetItem\"m\n\016DBTas"
  "kAttrData\022-\n\005datas\030\001 \003(\0132\036.PRO.DBTaskAtt"
  "rData.DatasEntry\032,\n\nDatasEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\"\310\002\n\016DBUserTaskIte"
  "m\022\014\n\004ver_\030\001 \001(\r\022\013\n\003iid\030\002 \001(\003\022\020\n\010role_iid"
  "\030\003 \001(\003\022\020\n\010task_iid\030\004 \001(\005\022\024\n\014my_taskgroup"
  "\030\005 \001(\003\022\022\n\ntask_group\030\006 \001(\005\022\016\n\006qstate\030\007 \001"
  "(\005\022\024\n\014accept_level\030\010 \001(\005\022\022\n\ncycle_task\030\t"
  " \001(\010\022\021\n\tcycle_num\030\n \001(\005\022\022\n\ncreatetime\030\013 "
  "\001(\005\022\027\n\017firstupdatetime\030\014 \001(\005\022\026\n\016lastupda"
  "tetime\030\r \001(\005\022\'\n\ntask_datas\030\016 \001(\0132\023.PRO.D"
  "BTaskAttrData\022\022\n\nsource_iid\030\017 \001(\t\"1\n\013DBU"
  "serTasks\022\"\n\005items\030\001 \003(\0132\023.PRO.DBUserTask"
  "Item\"h\n\021DBUserTaskEndItem\022\014\n\004ver_\030\001 \001(\r\022"
  "\013\n\003iid\030\002 \001(\003\022\020\n\010task_iid\030\004 \001(\005\022\016\n\006qstate"
  "\030\007 \001(\005\022\026\n\016lastupdatetime\030\r \001(\005\"7\n\016DBUser"
  "TaskEnds\022%\n\005items\030\001 \003(\0132\026.PRO.DBUserTask"
  "EndItem\"o\n\017DBTaskGAttrData\022.\n\005datas\030\001 \003("
  "\0132\037.PRO.DBTaskGAttrData.DatasEntry\032,\n\nDa"
  "tasEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001"
  "\"\331\001\n\017DBUserTaskGroup\022\014\n\004ver_\030\001 \001(\r\022\013\n\003ii"
  "d\030\002 \001(\003\022\020\n\010role_iid\030\003 \001(\003\022\022\n\ntask_group\030"
  "\004 \001(\005\022\022\n\ngroup_cell\030\005 \001(\005\022\'\n\tcell_data\030\006"
  " \001(\0132\024.PRO.DBTaskGAttrData\022\016\n\006gstate\030\007 \001"
  "(\005\022\023\n\013trigg_level\030\010 \001(\005\022\022\n\ncreatetime\030\t "
  "\001(\005\022\017\n\007endtime\030\n \001(\005\"8\n\020DBUserTaskGroups"
  "\022$\n\006groups\030\001 \003(\0132\024.PRO.DBUserTaskGroup\"d"
  "\n\022DBUserTaskGroupEnd\022\014\n\004ver_\030\001 \001(\r\022\013\n\003ii"
  "d\030\002 \001(\003\022\022\n\ntask_group\030\004 \001(\005\022\016\n\006gstate\030\007 "
  "\001(\005\022\017\n\007endtime\030\n \001(\005\">\n\023DBUserTaskGroupE"
  "nds\022\'\n\006groups\030\001 \003(\0132\027.PRO.DBUserTaskGrou"
  "pEnd\"~\n\020DBUserBattleInfo\022\014\n\004ver_\030\001 \001(\r\022\013"
  "\n\003iid\030\002 \001(\003\022\020\n\010role_iid\030\003 \001(\003\022\016\n\006levels\030"
  "\004 \001(\005\022\017\n\007victory\030\005 \001(\005\022\016\n\006defeat\030\006 \001(\005\022\014"
  "\n\004draw\030\007 \001(\005\"5\n\rDBUserBattles\022$\n\005infos\030\001"
  " \003(\0132\025.PRO.DBUserBattleInfoBT\n\033com.cms.c"
  "lient.network.gproP\001Z\025gamelib/protobuf/g"
  "pro\252\002\033com.cms.client.network.gprob\006proto"
  "3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_db_5finternal_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_db_5finternal_2eproto = {
  false, false, 2481, descriptor_table_protodef_db_5finternal_2eproto, "db_internal.proto", 
  &descriptor_table_db_5finternal_2eproto_once, nullptr, 0, 24,
  schemas, file_default_instances, TableStruct_db_5finternal_2eproto::offsets,
  file_level_metadata_db_5finternal_2eproto, file_level_enum_descriptors_db_5finternal_2eproto, file_level_service_descriptors_db_5finternal_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_db_5finternal_2eproto_getter() {
  return &descriptor_table_db_5finternal_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_db_5finternal_2eproto(&descriptor_table_db_5finternal_2eproto);
namespace PRO {

// ===================================================================

class DBRowDel::_Internal {
 public:
};

DBRowDel::DBRowDel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBRowDel)
}
DBRowDel::DBRowDel(const DBRowDel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&id_)) + sizeof(ver__));
  // @@protoc_insertion_point(copy_constructor:PRO.DBRowDel)
}

inline void DBRowDel::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ver__) -
    reinterpret_cast<char*>(&id_)) + sizeof(ver__));
}

DBRowDel::~DBRowDel() {
  // @@protoc_insertion_point(destructor:PRO.DBRowDel)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBRowDel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBRowDel::ArenaDtor(void* object) {
  DBRowDel* _this = reinterpret_cast< DBRowDel* >(object);
  (void)_this;
}
void DBRowDel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBRowDel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBRowDel::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBRowDel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ver__) -
      reinterpret_cast<char*>(&id_)) + sizeof(ver__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBRowDel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBRowDel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBRowDel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBRowDel)
  return target;
}

size_t DBRowDel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBRowDel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBRowDel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBRowDel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBRowDel::GetClassData() const { return &_class_data_; }

void DBRowDel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBRowDel *>(to)->MergeFrom(
      static_cast<const DBRowDel &>(from));
}


void DBRowDel::MergeFrom(const DBRowDel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBRowDel)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBRowDel::CopyFrom(const DBRowDel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBRowDel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRowDel::IsInitialized() const {
  return true;
}

void DBRowDel::InternalSwap(DBRowDel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBRowDel, ver__)
      + sizeof(DBRowDel::ver__)
      - PROTOBUF_FIELD_OFFSET(DBRowDel, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBRowDel::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[0]);
}

// ===================================================================

class DBRowDeletes::_Internal {
 public:
};

DBRowDeletes::DBRowDeletes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  dels_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBRowDeletes)
}
DBRowDeletes::DBRowDeletes(const DBRowDeletes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dels_(from.dels_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBRowDeletes)
}

inline void DBRowDeletes::SharedCtor() {
}

DBRowDeletes::~DBRowDeletes() {
  // @@protoc_insertion_point(destructor:PRO.DBRowDeletes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBRowDeletes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBRowDeletes::ArenaDtor(void* object) {
  DBRowDeletes* _this = reinterpret_cast< DBRowDeletes* >(object);
  (void)_this;
}
void DBRowDeletes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBRowDeletes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBRowDeletes::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBRowDeletes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dels_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBRowDeletes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBRowDel dels = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBRowDeletes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBRowDeletes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBRowDel dels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_dels_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_dels(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBRowDeletes)
  return target;
}

size_t DBRowDeletes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBRowDeletes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBRowDel dels = 1;
  total_size += 1UL * this->_internal_dels_size();
  for (const auto& msg : this->dels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBRowDeletes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBRowDeletes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBRowDeletes::GetClassData() const { return &_class_data_; }

void DBRowDeletes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBRowDeletes *>(to)->MergeFrom(
      static_cast<const DBRowDeletes &>(from));
}


void DBRowDeletes::MergeFrom(const DBRowDeletes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBRowDeletes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  dels_.MergeFrom(from.dels_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBRowDeletes::CopyFrom(const DBRowDeletes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBRowDeletes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRowDeletes::IsInitialized() const {
  return true;
}

void DBRowDeletes::InternalSwap(DBRowDeletes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  dels_.InternalSwap(&other->dels_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBRowDeletes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[1]);
}

// ===================================================================

class DBRoleBaseInfo::_Internal {
 public:
};

DBRoleBaseInfo::DBRoleBaseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBRoleBaseInfo)
}
DBRoleBaseInfo::DBRoleBaseInfo(const DBRoleBaseInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    nickname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nickname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&role_iid_, &from.role_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&levels_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(levels_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBRoleBaseInfo)
}

inline void DBRoleBaseInfo::SharedCtor() {
nickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  nickname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&levels_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(levels_));
}

DBRoleBaseInfo::~DBRoleBaseInfo() {
  // @@protoc_insertion_point(destructor:PRO.DBRoleBaseInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBRoleBaseInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  nickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBRoleBaseInfo::ArenaDtor(void* object) {
  DBRoleBaseInfo* _this = reinterpret_cast< DBRoleBaseInfo* >(object);
  (void)_this;
}
void DBRoleBaseInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBRoleBaseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBRoleBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBRoleBaseInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmpty();
  ::memset(&role_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&levels_) -
      reinterpret_cast<char*>(&role_iid_)) + sizeof(levels_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBRoleBaseInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 user_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          user_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nickname = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_nickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBRoleBaseInfo.nickname"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 registime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          registime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 levels = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          levels_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBRoleBaseInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBRoleBaseInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_role_iid(), target);
  }

  // int64 user_iid = 3;
  if (this->_internal_user_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_user_iid(), target);
  }

  // string nickname = 4;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBRoleBaseInfo.nickname");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nickname(), target);
  }

  // int32 registime = 5;
  if (this->_internal_registime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_registime(), target);
  }

  // int32 levels = 6;
  if (this->_internal_levels() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_levels(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBRoleBaseInfo)
  return target;
}

size_t DBRoleBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBRoleBaseInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nickname = 4;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int64 user_iid = 3;
  if (this->_internal_user_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_user_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 registime = 5;
  if (this->_internal_registime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_registime());
  }

  // int32 levels = 6;
  if (this->_internal_levels() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_levels());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBRoleBaseInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBRoleBaseInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBRoleBaseInfo::GetClassData() const { return &_class_data_; }

void DBRoleBaseInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBRoleBaseInfo *>(to)->MergeFrom(
      static_cast<const DBRoleBaseInfo &>(from));
}


void DBRoleBaseInfo::MergeFrom(const DBRoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBRoleBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_nickname().empty()) {
    _internal_set_nickname(from._internal_nickname());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_user_iid() != 0) {
    _internal_set_user_iid(from._internal_user_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_registime() != 0) {
    _internal_set_registime(from._internal_registime());
  }
  if (from._internal_levels() != 0) {
    _internal_set_levels(from._internal_levels());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBRoleBaseInfo::CopyFrom(const DBRoleBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBRoleBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleBaseInfo::IsInitialized() const {
  return true;
}

void DBRoleBaseInfo::InternalSwap(DBRoleBaseInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nickname_, lhs_arena,
      &other->nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBRoleBaseInfo, levels_)
      + sizeof(DBRoleBaseInfo::levels_)
      - PROTOBUF_FIELD_OFFSET(DBRoleBaseInfo, role_iid_)>(
          reinterpret_cast<char*>(&role_iid_),
          reinterpret_cast<char*>(&other->role_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBRoleBaseInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[2]);
}

// ===================================================================

class DBUserRoles::_Internal {
 public:
};

DBUserRoles::DBUserRoles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  roles_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserRoles)
}
DBUserRoles::DBUserRoles(const DBUserRoles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserRoles)
}

inline void DBUserRoles::SharedCtor() {
}

DBUserRoles::~DBUserRoles() {
  // @@protoc_insertion_point(destructor:PRO.DBUserRoles)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserRoles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserRoles::ArenaDtor(void* object) {
  DBUserRoles* _this = reinterpret_cast< DBUserRoles* >(object);
  (void)_this;
}
void DBUserRoles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserRoles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserRoles::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserRoles)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserRoles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBRoleBaseInfo roles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserRoles::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserRoles)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBRoleBaseInfo roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_roles(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserRoles)
  return target;
}

size_t DBUserRoles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserRoles)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBRoleBaseInfo roles = 1;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserRoles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserRoles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserRoles::GetClassData() const { return &_class_data_; }

void DBUserRoles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserRoles *>(to)->MergeFrom(
      static_cast<const DBUserRoles &>(from));
}


void DBUserRoles::MergeFrom(const DBUserRoles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserRoles)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserRoles::CopyFrom(const DBUserRoles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserRoles::IsInitialized() const {
  return true;
}

void DBUserRoles::InternalSwap(DBUserRoles* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  roles_.InternalSwap(&other->roles_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserRoles::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[3]);
}

// ===================================================================

class DBUserHome::_Internal {
 public:
};

DBUserHome::DBUserHome(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserHome)
}
DBUserHome::DBUserHome(const DBUserHome& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  home_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    home_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_home_name().empty()) {
    home_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_home_name(), 
      GetArenaForAllocation());
  }
  look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_look_at().empty()) {
    look_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_look_at(), 
      GetArenaForAllocation());
  }
  geo_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    geo_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_geo_pos().empty()) {
    geo_pos_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_geo_pos(), 
      GetArenaForAllocation());
  }
  ::memcpy(&role_iid_, &from.role_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&levels_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(levels_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserHome)
}

inline void DBUserHome::SharedCtor() {
home_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  home_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
geo_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  geo_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&levels_) -
    reinterpret_cast<char*>(&role_iid_)) + sizeof(levels_));
}

DBUserHome::~DBUserHome() {
  // @@protoc_insertion_point(destructor:PRO.DBUserHome)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserHome::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  home_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  look_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  geo_pos_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBUserHome::ArenaDtor(void* object) {
  DBUserHome* _this = reinterpret_cast< DBUserHome* >(object);
  (void)_this;
}
void DBUserHome::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserHome::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserHome::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserHome)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  home_name_.ClearToEmpty();
  look_at_.ClearToEmpty();
  geo_pos_.ClearToEmpty();
  ::memset(&role_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&levels_) -
      reinterpret_cast<char*>(&role_iid_)) + sizeof(levels_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserHome::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string home_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_home_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHome.home_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ground_resid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ground_resid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string look_at = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_look_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHome.look_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string geo_pos = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_geo_pos();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHome.geo_pos"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 reside_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          reside_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 last_residedate = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          last_residedate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 levels = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          levels_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserHome::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserHome)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_role_iid(), target);
  }

  // string home_name = 3;
  if (!this->_internal_home_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_home_name().data(), static_cast<int>(this->_internal_home_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHome.home_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_home_name(), target);
  }

  // int64 ground_resid = 4;
  if (this->_internal_ground_resid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_ground_resid(), target);
  }

  // string look_at = 5;
  if (!this->_internal_look_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_look_at().data(), static_cast<int>(this->_internal_look_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHome.look_at");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_look_at(), target);
  }

  // string geo_pos = 6;
  if (!this->_internal_geo_pos().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_geo_pos().data(), static_cast<int>(this->_internal_geo_pos().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHome.geo_pos");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_geo_pos(), target);
  }

  // int32 reside_time = 7;
  if (this->_internal_reside_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_reside_time(), target);
  }

  // int32 last_residedate = 8;
  if (this->_internal_last_residedate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_last_residedate(), target);
  }

  // int32 levels = 9;
  if (this->_internal_levels() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_levels(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserHome)
  return target;
}

size_t DBUserHome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserHome)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string home_name = 3;
  if (!this->_internal_home_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_home_name());
  }

  // string look_at = 5;
  if (!this->_internal_look_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_look_at());
  }

  // string geo_pos = 6;
  if (!this->_internal_geo_pos().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_geo_pos());
  }

  // int64 role_iid = 2;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int64 ground_resid = 4;
  if (this->_internal_ground_resid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_ground_resid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 reside_time = 7;
  if (this->_internal_reside_time() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_reside_time());
  }

  // int32 last_residedate = 8;
  if (this->_internal_last_residedate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_last_residedate());
  }

  // int32 levels = 9;
  if (this->_internal_levels() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_levels());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserHome::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserHome::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserHome::GetClassData() const { return &_class_data_; }

void DBUserHome::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserHome *>(to)->MergeFrom(
      static_cast<const DBUserHome &>(from));
}


void DBUserHome::MergeFrom(const DBUserHome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserHome)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_home_name().empty()) {
    _internal_set_home_name(from._internal_home_name());
  }
  if (!from._internal_look_at().empty()) {
    _internal_set_look_at(from._internal_look_at());
  }
  if (!from._internal_geo_pos().empty()) {
    _internal_set_geo_pos(from._internal_geo_pos());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_ground_resid() != 0) {
    _internal_set_ground_resid(from._internal_ground_resid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_reside_time() != 0) {
    _internal_set_reside_time(from._internal_reside_time());
  }
  if (from._internal_last_residedate() != 0) {
    _internal_set_last_residedate(from._internal_last_residedate());
  }
  if (from._internal_levels() != 0) {
    _internal_set_levels(from._internal_levels());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserHome::CopyFrom(const DBUserHome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserHome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserHome::IsInitialized() const {
  return true;
}

void DBUserHome::InternalSwap(DBUserHome* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &home_name_, lhs_arena,
      &other->home_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &look_at_, lhs_arena,
      &other->look_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &geo_pos_, lhs_arena,
      &other->geo_pos_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserHome, levels_)
      + sizeof(DBUserHome::levels_)
      - PROTOBUF_FIELD_OFFSET(DBUserHome, role_iid_)>(
          reinterpret_cast<char*>(&role_iid_),
          reinterpret_cast<char*>(&other->role_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserHome::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[4]);
}

// ===================================================================

class DBUserHomeStructureItem::_Internal {
 public:
};

DBUserHomeStructureItem::DBUserHomeStructureItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserHomeStructureItem)
}
DBUserHomeStructureItem::DBUserHomeStructureItem(const DBUserHomeStructureItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_look_at().empty()) {
    look_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_look_at(), 
      GetArenaForAllocation());
  }
  building_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    building_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_building_pos().empty()) {
    building_pos_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_building_pos(), 
      GetArenaForAllocation());
  }
  ::memcpy(&building_iid_, &from.building_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&building_resid_) -
    reinterpret_cast<char*>(&building_iid_)) + sizeof(building_resid_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserHomeStructureItem)
}

inline void DBUserHomeStructureItem::SharedCtor() {
look_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
building_pos_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  building_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&building_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&building_resid_) -
    reinterpret_cast<char*>(&building_iid_)) + sizeof(building_resid_));
}

DBUserHomeStructureItem::~DBUserHomeStructureItem() {
  // @@protoc_insertion_point(destructor:PRO.DBUserHomeStructureItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserHomeStructureItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  look_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  building_pos_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBUserHomeStructureItem::ArenaDtor(void* object) {
  DBUserHomeStructureItem* _this = reinterpret_cast< DBUserHomeStructureItem* >(object);
  (void)_this;
}
void DBUserHomeStructureItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserHomeStructureItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserHomeStructureItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserHomeStructureItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  look_at_.ClearToEmpty();
  building_pos_.ClearToEmpty();
  ::memset(&building_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&building_resid_) -
      reinterpret_cast<char*>(&building_iid_)) + sizeof(building_resid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserHomeStructureItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 building_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          building_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 home_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          home_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 parent_building = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          parent_building_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 building_resid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          building_resid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string look_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_look_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHomeStructureItem.look_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string building_pos = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_building_pos();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserHomeStructureItem.building_pos"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 levels = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          levels_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserHomeStructureItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserHomeStructureItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 building_iid = 2;
  if (this->_internal_building_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_building_iid(), target);
  }

  // int64 home_iid = 3;
  if (this->_internal_home_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_home_iid(), target);
  }

  // int64 parent_building = 4;
  if (this->_internal_parent_building() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_parent_building(), target);
  }

  // int64 building_resid = 5;
  if (this->_internal_building_resid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_building_resid(), target);
  }

  // string look_at = 6;
  if (!this->_internal_look_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_look_at().data(), static_cast<int>(this->_internal_look_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHomeStructureItem.look_at");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_look_at(), target);
  }

  // string building_pos = 7;
  if (!this->_internal_building_pos().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_building_pos().data(), static_cast<int>(this->_internal_building_pos().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserHomeStructureItem.building_pos");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_building_pos(), target);
  }

  // int32 levels = 8;
  if (this->_internal_levels() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_levels(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserHomeStructureItem)
  return target;
}

size_t DBUserHomeStructureItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserHomeStructureItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string look_at = 6;
  if (!this->_internal_look_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_look_at());
  }

  // string building_pos = 7;
  if (!this->_internal_building_pos().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_building_pos());
  }

  // int64 building_iid = 2;
  if (this->_internal_building_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_building_iid());
  }

  // int64 home_iid = 3;
  if (this->_internal_home_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_home_iid());
  }

  // int64 parent_building = 4;
  if (this->_internal_parent_building() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_parent_building());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 levels = 8;
  if (this->_internal_levels() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_levels());
  }

  // int64 building_resid = 5;
  if (this->_internal_building_resid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_building_resid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserHomeStructureItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserHomeStructureItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserHomeStructureItem::GetClassData() const { return &_class_data_; }

void DBUserHomeStructureItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserHomeStructureItem *>(to)->MergeFrom(
      static_cast<const DBUserHomeStructureItem &>(from));
}


void DBUserHomeStructureItem::MergeFrom(const DBUserHomeStructureItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserHomeStructureItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_look_at().empty()) {
    _internal_set_look_at(from._internal_look_at());
  }
  if (!from._internal_building_pos().empty()) {
    _internal_set_building_pos(from._internal_building_pos());
  }
  if (from._internal_building_iid() != 0) {
    _internal_set_building_iid(from._internal_building_iid());
  }
  if (from._internal_home_iid() != 0) {
    _internal_set_home_iid(from._internal_home_iid());
  }
  if (from._internal_parent_building() != 0) {
    _internal_set_parent_building(from._internal_parent_building());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_levels() != 0) {
    _internal_set_levels(from._internal_levels());
  }
  if (from._internal_building_resid() != 0) {
    _internal_set_building_resid(from._internal_building_resid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserHomeStructureItem::CopyFrom(const DBUserHomeStructureItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserHomeStructureItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserHomeStructureItem::IsInitialized() const {
  return true;
}

void DBUserHomeStructureItem::InternalSwap(DBUserHomeStructureItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &look_at_, lhs_arena,
      &other->look_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &building_pos_, lhs_arena,
      &other->building_pos_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserHomeStructureItem, building_resid_)
      + sizeof(DBUserHomeStructureItem::building_resid_)
      - PROTOBUF_FIELD_OFFSET(DBUserHomeStructureItem, building_iid_)>(
          reinterpret_cast<char*>(&building_iid_),
          reinterpret_cast<char*>(&other->building_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserHomeStructureItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[5]);
}

// ===================================================================

class DBUserHomeStructure::_Internal {
 public:
};

DBUserHomeStructure::DBUserHomeStructure(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserHomeStructure)
}
DBUserHomeStructure::DBUserHomeStructure(const DBUserHomeStructure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserHomeStructure)
}

inline void DBUserHomeStructure::SharedCtor() {
}

DBUserHomeStructure::~DBUserHomeStructure() {
  // @@protoc_insertion_point(destructor:PRO.DBUserHomeStructure)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserHomeStructure::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserHomeStructure::ArenaDtor(void* object) {
  DBUserHomeStructure* _this = reinterpret_cast< DBUserHomeStructure* >(object);
  (void)_this;
}
void DBUserHomeStructure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserHomeStructure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserHomeStructure::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserHomeStructure)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserHomeStructure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserHomeStructureItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserHomeStructure::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserHomeStructure)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserHomeStructureItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserHomeStructure)
  return target;
}

size_t DBUserHomeStructure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserHomeStructure)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserHomeStructureItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserHomeStructure::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserHomeStructure::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserHomeStructure::GetClassData() const { return &_class_data_; }

void DBUserHomeStructure::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserHomeStructure *>(to)->MergeFrom(
      static_cast<const DBUserHomeStructure &>(from));
}


void DBUserHomeStructure::MergeFrom(const DBUserHomeStructure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserHomeStructure)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserHomeStructure::CopyFrom(const DBUserHomeStructure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserHomeStructure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserHomeStructure::IsInitialized() const {
  return true;
}

void DBUserHomeStructure::InternalSwap(DBUserHomeStructure* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserHomeStructure::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[6]);
}

// ===================================================================

class DBPetCategory::_Internal {
 public:
};

DBPetCategory::DBPetCategory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBPetCategory)
}
DBPetCategory::DBPetCategory(const DBPetCategory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pet_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pet_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pet_name().empty()) {
    pet_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pet_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&pet_iid_, &from.pet_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pet_sex_) -
    reinterpret_cast<char*>(&pet_iid_)) + sizeof(pet_sex_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBPetCategory)
}

inline void DBPetCategory::SharedCtor() {
pet_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pet_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pet_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pet_sex_) -
    reinterpret_cast<char*>(&pet_iid_)) + sizeof(pet_sex_));
}

DBPetCategory::~DBPetCategory() {
  // @@protoc_insertion_point(destructor:PRO.DBPetCategory)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBPetCategory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pet_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DBPetCategory::ArenaDtor(void* object) {
  DBPetCategory* _this = reinterpret_cast< DBPetCategory* >(object);
  (void)_this;
}
void DBPetCategory::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBPetCategory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBPetCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBPetCategory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pet_name_.ClearToEmpty();
  ::memset(&pet_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pet_sex_) -
      reinterpret_cast<char*>(&pet_iid_)) + sizeof(pet_sex_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBPetCategory::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 pet_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          pet_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pet_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          pet_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 pet_resid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          pet_resid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pet_sex = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          pet_sex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string pet_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_pet_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBPetCategory.pet_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBPetCategory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBPetCategory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 pet_iid = 2;
  if (this->_internal_pet_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_pet_iid(), target);
  }

  // int32 pet_type = 3;
  if (this->_internal_pet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_pet_type(), target);
  }

  // int64 pet_resid = 4;
  if (this->_internal_pet_resid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_pet_resid(), target);
  }

  // int32 pet_sex = 5;
  if (this->_internal_pet_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pet_sex(), target);
  }

  // string pet_name = 6;
  if (!this->_internal_pet_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pet_name().data(), static_cast<int>(this->_internal_pet_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBPetCategory.pet_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_pet_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBPetCategory)
  return target;
}

size_t DBPetCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBPetCategory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pet_name = 6;
  if (!this->_internal_pet_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pet_name());
  }

  // int64 pet_iid = 2;
  if (this->_internal_pet_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pet_iid());
  }

  // int64 pet_resid = 4;
  if (this->_internal_pet_resid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pet_resid());
  }

  // int32 pet_type = 3;
  if (this->_internal_pet_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pet_type());
  }

  // int32 pet_sex = 5;
  if (this->_internal_pet_sex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pet_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBPetCategory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBPetCategory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBPetCategory::GetClassData() const { return &_class_data_; }

void DBPetCategory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBPetCategory *>(to)->MergeFrom(
      static_cast<const DBPetCategory &>(from));
}


void DBPetCategory::MergeFrom(const DBPetCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBPetCategory)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pet_name().empty()) {
    _internal_set_pet_name(from._internal_pet_name());
  }
  if (from._internal_pet_iid() != 0) {
    _internal_set_pet_iid(from._internal_pet_iid());
  }
  if (from._internal_pet_resid() != 0) {
    _internal_set_pet_resid(from._internal_pet_resid());
  }
  if (from._internal_pet_type() != 0) {
    _internal_set_pet_type(from._internal_pet_type());
  }
  if (from._internal_pet_sex() != 0) {
    _internal_set_pet_sex(from._internal_pet_sex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBPetCategory::CopyFrom(const DBPetCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBPetCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPetCategory::IsInitialized() const {
  return true;
}

void DBPetCategory::InternalSwap(DBPetCategory* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pet_name_, lhs_arena,
      &other->pet_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBPetCategory, pet_sex_)
      + sizeof(DBPetCategory::pet_sex_)
      - PROTOBUF_FIELD_OFFSET(DBPetCategory, pet_iid_)>(
          reinterpret_cast<char*>(&pet_iid_),
          reinterpret_cast<char*>(&other->pet_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBPetCategory::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[7]);
}

// ===================================================================

class DBUserPetItem::_Internal {
 public:
};

DBUserPetItem::DBUserPetItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserPetItem)
}
DBUserPetItem::DBUserPetItem(const DBUserPetItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mypet_iid_, &from.mypet_iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&birthday_) -
    reinterpret_cast<char*>(&mypet_iid_)) + sizeof(birthday_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserPetItem)
}

inline void DBUserPetItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mypet_iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&birthday_) -
    reinterpret_cast<char*>(&mypet_iid_)) + sizeof(birthday_));
}

DBUserPetItem::~DBUserPetItem() {
  // @@protoc_insertion_point(destructor:PRO.DBUserPetItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserPetItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserPetItem::ArenaDtor(void* object) {
  DBUserPetItem* _this = reinterpret_cast< DBUserPetItem* >(object);
  (void)_this;
}
void DBUserPetItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserPetItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserPetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserPetItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mypet_iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&birthday_) -
      reinterpret_cast<char*>(&mypet_iid_)) + sizeof(birthday_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserPetItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 mypet_iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mypet_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 pet_iid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          pet_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pet_age = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          pet_age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 birthday = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          birthday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserPetItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserPetItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 mypet_iid = 2;
  if (this->_internal_mypet_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_mypet_iid(), target);
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_role_iid(), target);
  }

  // int64 pet_iid = 4;
  if (this->_internal_pet_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_pet_iid(), target);
  }

  // int32 pet_age = 5;
  if (this->_internal_pet_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pet_age(), target);
  }

  // int32 birthday = 6;
  if (this->_internal_birthday() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_birthday(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserPetItem)
  return target;
}

size_t DBUserPetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserPetItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 mypet_iid = 2;
  if (this->_internal_mypet_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_mypet_iid());
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 pet_age = 5;
  if (this->_internal_pet_age() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pet_age());
  }

  // int64 pet_iid = 4;
  if (this->_internal_pet_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_pet_iid());
  }

  // int32 birthday = 6;
  if (this->_internal_birthday() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_birthday());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserPetItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserPetItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserPetItem::GetClassData() const { return &_class_data_; }

void DBUserPetItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserPetItem *>(to)->MergeFrom(
      static_cast<const DBUserPetItem &>(from));
}


void DBUserPetItem::MergeFrom(const DBUserPetItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserPetItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mypet_iid() != 0) {
    _internal_set_mypet_iid(from._internal_mypet_iid());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_pet_age() != 0) {
    _internal_set_pet_age(from._internal_pet_age());
  }
  if (from._internal_pet_iid() != 0) {
    _internal_set_pet_iid(from._internal_pet_iid());
  }
  if (from._internal_birthday() != 0) {
    _internal_set_birthday(from._internal_birthday());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserPetItem::CopyFrom(const DBUserPetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserPetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserPetItem::IsInitialized() const {
  return true;
}

void DBUserPetItem::InternalSwap(DBUserPetItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserPetItem, birthday_)
      + sizeof(DBUserPetItem::birthday_)
      - PROTOBUF_FIELD_OFFSET(DBUserPetItem, mypet_iid_)>(
          reinterpret_cast<char*>(&mypet_iid_),
          reinterpret_cast<char*>(&other->mypet_iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserPetItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[8]);
}

// ===================================================================

class DBUserPets::_Internal {
 public:
};

DBUserPets::DBUserPets(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  pets_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserPets)
}
DBUserPets::DBUserPets(const DBUserPets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pets_(from.pets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserPets)
}

inline void DBUserPets::SharedCtor() {
}

DBUserPets::~DBUserPets() {
  // @@protoc_insertion_point(destructor:PRO.DBUserPets)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserPets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserPets::ArenaDtor(void* object) {
  DBUserPets* _this = reinterpret_cast< DBUserPets* >(object);
  (void)_this;
}
void DBUserPets::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserPets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserPets::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserPets)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserPets::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserPetItem pets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserPets::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserPets)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserPetItem pets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pets(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserPets)
  return target;
}

size_t DBUserPets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserPets)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserPetItem pets = 1;
  total_size += 1UL * this->_internal_pets_size();
  for (const auto& msg : this->pets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserPets::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserPets::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserPets::GetClassData() const { return &_class_data_; }

void DBUserPets::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserPets *>(to)->MergeFrom(
      static_cast<const DBUserPets &>(from));
}


void DBUserPets::MergeFrom(const DBUserPets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserPets)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  pets_.MergeFrom(from.pets_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserPets::CopyFrom(const DBUserPets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserPets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserPets::IsInitialized() const {
  return true;
}

void DBUserPets::InternalSwap(DBUserPets* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  pets_.InternalSwap(&other->pets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserPets::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[9]);
}

// ===================================================================

DBTaskAttrData_DatasEntry_DoNotUse::DBTaskAttrData_DatasEntry_DoNotUse() {}
DBTaskAttrData_DatasEntry_DoNotUse::DBTaskAttrData_DatasEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DBTaskAttrData_DatasEntry_DoNotUse::MergeFrom(const DBTaskAttrData_DatasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DBTaskAttrData_DatasEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[10]);
}

// ===================================================================

class DBTaskAttrData::_Internal {
 public:
};

DBTaskAttrData::DBTaskAttrData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  datas_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBTaskAttrData)
}
DBTaskAttrData::DBTaskAttrData(const DBTaskAttrData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBTaskAttrData)
}

inline void DBTaskAttrData::SharedCtor() {
}

DBTaskAttrData::~DBTaskAttrData() {
  // @@protoc_insertion_point(destructor:PRO.DBTaskAttrData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBTaskAttrData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBTaskAttrData::ArenaDtor(void* object) {
  DBTaskAttrData* _this = reinterpret_cast< DBTaskAttrData* >(object);
  (void)_this;
  _this->datas_. ~MapField();
}
inline void DBTaskAttrData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &DBTaskAttrData::ArenaDtor);
  }
}
void DBTaskAttrData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBTaskAttrData::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBTaskAttrData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datas_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBTaskAttrData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, int64> datas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&datas_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBTaskAttrData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBTaskAttrData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int64> datas = 1;
  if (!this->_internal_datas().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "PRO.DBTaskAttrData.DatasEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_datas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_datas().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::const_iterator
          it = this->_internal_datas().begin();
          it != this->_internal_datas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DBTaskAttrData_DatasEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::const_iterator
          it = this->_internal_datas().begin();
          it != this->_internal_datas().end(); ++it) {
        target = DBTaskAttrData_DatasEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBTaskAttrData)
  return target;
}

size_t DBTaskAttrData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBTaskAttrData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int64> datas = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_datas_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::const_iterator
      it = this->_internal_datas().begin();
      it != this->_internal_datas().end(); ++it) {
    total_size += DBTaskAttrData_DatasEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBTaskAttrData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBTaskAttrData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBTaskAttrData::GetClassData() const { return &_class_data_; }

void DBTaskAttrData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBTaskAttrData *>(to)->MergeFrom(
      static_cast<const DBTaskAttrData &>(from));
}


void DBTaskAttrData::MergeFrom(const DBTaskAttrData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBTaskAttrData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  datas_.MergeFrom(from.datas_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBTaskAttrData::CopyFrom(const DBTaskAttrData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBTaskAttrData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskAttrData::IsInitialized() const {
  return true;
}

void DBTaskAttrData::InternalSwap(DBTaskAttrData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  datas_.InternalSwap(&other->datas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBTaskAttrData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[11]);
}

// ===================================================================

class DBUserTaskItem::_Internal {
 public:
  static const ::PRO::DBTaskAttrData& task_datas(const DBUserTaskItem* msg);
};

const ::PRO::DBTaskAttrData&
DBUserTaskItem::_Internal::task_datas(const DBUserTaskItem* msg) {
  return *msg->task_datas_;
}
DBUserTaskItem::DBUserTaskItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskItem)
}
DBUserTaskItem::DBUserTaskItem(const DBUserTaskItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  source_iid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    source_iid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_source_iid().empty()) {
    source_iid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source_iid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_task_datas()) {
    task_datas_ = new ::PRO::DBTaskAttrData(*from.task_datas_);
  } else {
    task_datas_ = nullptr;
  }
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastupdatetime_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(lastupdatetime_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskItem)
}

inline void DBUserTaskItem::SharedCtor() {
source_iid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  source_iid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&task_datas_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lastupdatetime_) -
    reinterpret_cast<char*>(&task_datas_)) + sizeof(lastupdatetime_));
}

DBUserTaskItem::~DBUserTaskItem() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  source_iid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete task_datas_;
}

void DBUserTaskItem::ArenaDtor(void* object) {
  DBUserTaskItem* _this = reinterpret_cast< DBUserTaskItem* >(object);
  (void)_this;
}
void DBUserTaskItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_iid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && task_datas_ != nullptr) {
    delete task_datas_;
  }
  task_datas_ = nullptr;
  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastupdatetime_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(lastupdatetime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 task_iid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          task_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 my_taskgroup = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          my_taskgroup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 task_group = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          task_group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 qstate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          qstate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 accept_level = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          accept_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool cycle_task = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          cycle_task_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 cycle_num = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          cycle_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 createtime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          createtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 firstupdatetime = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          firstupdatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 lastupdatetime = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          lastupdatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PRO.DBTaskAttrData task_datas = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_task_datas(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string source_iid = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_source_iid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PRO.DBUserTaskItem.source_iid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_iid(), target);
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_role_iid(), target);
  }

  // int32 task_iid = 4;
  if (this->_internal_task_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_task_iid(), target);
  }

  // int64 my_taskgroup = 5;
  if (this->_internal_my_taskgroup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_my_taskgroup(), target);
  }

  // int32 task_group = 6;
  if (this->_internal_task_group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_task_group(), target);
  }

  // int32 qstate = 7;
  if (this->_internal_qstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_qstate(), target);
  }

  // int32 accept_level = 8;
  if (this->_internal_accept_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_accept_level(), target);
  }

  // bool cycle_task = 9;
  if (this->_internal_cycle_task() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_cycle_task(), target);
  }

  // int32 cycle_num = 10;
  if (this->_internal_cycle_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_cycle_num(), target);
  }

  // int32 createtime = 11;
  if (this->_internal_createtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_createtime(), target);
  }

  // int32 firstupdatetime = 12;
  if (this->_internal_firstupdatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_firstupdatetime(), target);
  }

  // int32 lastupdatetime = 13;
  if (this->_internal_lastupdatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_lastupdatetime(), target);
  }

  // .PRO.DBTaskAttrData task_datas = 14;
  if (this->_internal_has_task_datas()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::task_datas(this), target, stream);
  }

  // string source_iid = 15;
  if (!this->_internal_source_iid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_iid().data(), static_cast<int>(this->_internal_source_iid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PRO.DBUserTaskItem.source_iid");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_source_iid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskItem)
  return target;
}

size_t DBUserTaskItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string source_iid = 15;
  if (!this->_internal_source_iid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_iid());
  }

  // .PRO.DBTaskAttrData task_datas = 14;
  if (this->_internal_has_task_datas()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *task_datas_);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 task_iid = 4;
  if (this->_internal_task_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_task_iid());
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int64 my_taskgroup = 5;
  if (this->_internal_my_taskgroup() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_my_taskgroup());
  }

  // int32 task_group = 6;
  if (this->_internal_task_group() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_task_group());
  }

  // int32 qstate = 7;
  if (this->_internal_qstate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_qstate());
  }

  // int32 accept_level = 8;
  if (this->_internal_accept_level() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_accept_level());
  }

  // bool cycle_task = 9;
  if (this->_internal_cycle_task() != 0) {
    total_size += 1 + 1;
  }

  // int32 cycle_num = 10;
  if (this->_internal_cycle_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_cycle_num());
  }

  // int32 createtime = 11;
  if (this->_internal_createtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_createtime());
  }

  // int32 firstupdatetime = 12;
  if (this->_internal_firstupdatetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_firstupdatetime());
  }

  // int32 lastupdatetime = 13;
  if (this->_internal_lastupdatetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_lastupdatetime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskItem::GetClassData() const { return &_class_data_; }

void DBUserTaskItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskItem *>(to)->MergeFrom(
      static_cast<const DBUserTaskItem &>(from));
}


void DBUserTaskItem::MergeFrom(const DBUserTaskItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source_iid().empty()) {
    _internal_set_source_iid(from._internal_source_iid());
  }
  if (from._internal_has_task_datas()) {
    _internal_mutable_task_datas()->::PRO::DBTaskAttrData::MergeFrom(from._internal_task_datas());
  }
  if (from._internal_iid() != 0) {
    _internal_set_iid(from._internal_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_task_iid() != 0) {
    _internal_set_task_iid(from._internal_task_iid());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_my_taskgroup() != 0) {
    _internal_set_my_taskgroup(from._internal_my_taskgroup());
  }
  if (from._internal_task_group() != 0) {
    _internal_set_task_group(from._internal_task_group());
  }
  if (from._internal_qstate() != 0) {
    _internal_set_qstate(from._internal_qstate());
  }
  if (from._internal_accept_level() != 0) {
    _internal_set_accept_level(from._internal_accept_level());
  }
  if (from._internal_cycle_task() != 0) {
    _internal_set_cycle_task(from._internal_cycle_task());
  }
  if (from._internal_cycle_num() != 0) {
    _internal_set_cycle_num(from._internal_cycle_num());
  }
  if (from._internal_createtime() != 0) {
    _internal_set_createtime(from._internal_createtime());
  }
  if (from._internal_firstupdatetime() != 0) {
    _internal_set_firstupdatetime(from._internal_firstupdatetime());
  }
  if (from._internal_lastupdatetime() != 0) {
    _internal_set_lastupdatetime(from._internal_lastupdatetime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskItem::CopyFrom(const DBUserTaskItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskItem::IsInitialized() const {
  return true;
}

void DBUserTaskItem::InternalSwap(DBUserTaskItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &source_iid_, lhs_arena,
      &other->source_iid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserTaskItem, lastupdatetime_)
      + sizeof(DBUserTaskItem::lastupdatetime_)
      - PROTOBUF_FIELD_OFFSET(DBUserTaskItem, task_datas_)>(
          reinterpret_cast<char*>(&task_datas_),
          reinterpret_cast<char*>(&other->task_datas_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[12]);
}

// ===================================================================

class DBUserTasks::_Internal {
 public:
};

DBUserTasks::DBUserTasks(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTasks)
}
DBUserTasks::DBUserTasks(const DBUserTasks& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTasks)
}

inline void DBUserTasks::SharedCtor() {
}

DBUserTasks::~DBUserTasks() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTasks)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTasks::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserTasks::ArenaDtor(void* object) {
  DBUserTasks* _this = reinterpret_cast< DBUserTasks* >(object);
  (void)_this;
}
void DBUserTasks::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTasks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTasks::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTasks)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTasks::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserTaskItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTasks::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTasks)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTasks)
  return target;
}

size_t DBUserTasks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTasks)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTasks::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTasks::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTasks::GetClassData() const { return &_class_data_; }

void DBUserTasks::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTasks *>(to)->MergeFrom(
      static_cast<const DBUserTasks &>(from));
}


void DBUserTasks::MergeFrom(const DBUserTasks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTasks)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTasks::CopyFrom(const DBUserTasks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTasks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTasks::IsInitialized() const {
  return true;
}

void DBUserTasks::InternalSwap(DBUserTasks* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTasks::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[13]);
}

// ===================================================================

class DBUserTaskEndItem::_Internal {
 public:
};

DBUserTaskEndItem::DBUserTaskEndItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskEndItem)
}
DBUserTaskEndItem::DBUserTaskEndItem(const DBUserTaskEndItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lastupdatetime_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(lastupdatetime_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskEndItem)
}

inline void DBUserTaskEndItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lastupdatetime_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(lastupdatetime_));
}

DBUserTaskEndItem::~DBUserTaskEndItem() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskEndItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskEndItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserTaskEndItem::ArenaDtor(void* object) {
  DBUserTaskEndItem* _this = reinterpret_cast< DBUserTaskEndItem* >(object);
  (void)_this;
}
void DBUserTaskEndItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskEndItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskEndItem::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskEndItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastupdatetime_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(lastupdatetime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskEndItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 task_iid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          task_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 qstate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          qstate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 lastupdatetime = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          lastupdatetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskEndItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskEndItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_iid(), target);
  }

  // int32 task_iid = 4;
  if (this->_internal_task_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_task_iid(), target);
  }

  // int32 qstate = 7;
  if (this->_internal_qstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_qstate(), target);
  }

  // int32 lastupdatetime = 13;
  if (this->_internal_lastupdatetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_lastupdatetime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskEndItem)
  return target;
}

size_t DBUserTaskEndItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskEndItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 task_iid = 4;
  if (this->_internal_task_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_task_iid());
  }

  // int32 qstate = 7;
  if (this->_internal_qstate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_qstate());
  }

  // int32 lastupdatetime = 13;
  if (this->_internal_lastupdatetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_lastupdatetime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskEndItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskEndItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskEndItem::GetClassData() const { return &_class_data_; }

void DBUserTaskEndItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskEndItem *>(to)->MergeFrom(
      static_cast<const DBUserTaskEndItem &>(from));
}


void DBUserTaskEndItem::MergeFrom(const DBUserTaskEndItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskEndItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iid() != 0) {
    _internal_set_iid(from._internal_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_task_iid() != 0) {
    _internal_set_task_iid(from._internal_task_iid());
  }
  if (from._internal_qstate() != 0) {
    _internal_set_qstate(from._internal_qstate());
  }
  if (from._internal_lastupdatetime() != 0) {
    _internal_set_lastupdatetime(from._internal_lastupdatetime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskEndItem::CopyFrom(const DBUserTaskEndItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskEndItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskEndItem::IsInitialized() const {
  return true;
}

void DBUserTaskEndItem::InternalSwap(DBUserTaskEndItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserTaskEndItem, lastupdatetime_)
      + sizeof(DBUserTaskEndItem::lastupdatetime_)
      - PROTOBUF_FIELD_OFFSET(DBUserTaskEndItem, iid_)>(
          reinterpret_cast<char*>(&iid_),
          reinterpret_cast<char*>(&other->iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskEndItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[14]);
}

// ===================================================================

class DBUserTaskEnds::_Internal {
 public:
};

DBUserTaskEnds::DBUserTaskEnds(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskEnds)
}
DBUserTaskEnds::DBUserTaskEnds(const DBUserTaskEnds& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskEnds)
}

inline void DBUserTaskEnds::SharedCtor() {
}

DBUserTaskEnds::~DBUserTaskEnds() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskEnds)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskEnds::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserTaskEnds::ArenaDtor(void* object) {
  DBUserTaskEnds* _this = reinterpret_cast< DBUserTaskEnds* >(object);
  (void)_this;
}
void DBUserTaskEnds::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskEnds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskEnds::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskEnds)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskEnds::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserTaskEndItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskEnds::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskEnds)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskEndItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskEnds)
  return target;
}

size_t DBUserTaskEnds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskEnds)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskEndItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskEnds::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskEnds::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskEnds::GetClassData() const { return &_class_data_; }

void DBUserTaskEnds::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskEnds *>(to)->MergeFrom(
      static_cast<const DBUserTaskEnds &>(from));
}


void DBUserTaskEnds::MergeFrom(const DBUserTaskEnds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskEnds)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskEnds::CopyFrom(const DBUserTaskEnds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskEnds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskEnds::IsInitialized() const {
  return true;
}

void DBUserTaskEnds::InternalSwap(DBUserTaskEnds* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskEnds::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[15]);
}

// ===================================================================

DBTaskGAttrData_DatasEntry_DoNotUse::DBTaskGAttrData_DatasEntry_DoNotUse() {}
DBTaskGAttrData_DatasEntry_DoNotUse::DBTaskGAttrData_DatasEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DBTaskGAttrData_DatasEntry_DoNotUse::MergeFrom(const DBTaskGAttrData_DatasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DBTaskGAttrData_DatasEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[16]);
}

// ===================================================================

class DBTaskGAttrData::_Internal {
 public:
};

DBTaskGAttrData::DBTaskGAttrData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  datas_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBTaskGAttrData)
}
DBTaskGAttrData::DBTaskGAttrData(const DBTaskGAttrData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBTaskGAttrData)
}

inline void DBTaskGAttrData::SharedCtor() {
}

DBTaskGAttrData::~DBTaskGAttrData() {
  // @@protoc_insertion_point(destructor:PRO.DBTaskGAttrData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBTaskGAttrData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBTaskGAttrData::ArenaDtor(void* object) {
  DBTaskGAttrData* _this = reinterpret_cast< DBTaskGAttrData* >(object);
  (void)_this;
  _this->datas_. ~MapField();
}
inline void DBTaskGAttrData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &DBTaskGAttrData::ArenaDtor);
  }
}
void DBTaskGAttrData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBTaskGAttrData::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBTaskGAttrData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datas_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBTaskGAttrData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int32, int32> datas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&datas_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBTaskGAttrData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBTaskGAttrData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, int32> datas = 1;
  if (!this->_internal_datas().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< int32_t, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_datas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_datas().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
          it = this->_internal_datas().begin();
          it != this->_internal_datas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = DBTaskGAttrData_DatasEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
          it = this->_internal_datas().begin();
          it != this->_internal_datas().end(); ++it) {
        target = DBTaskGAttrData_DatasEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBTaskGAttrData)
  return target;
}

size_t DBTaskGAttrData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBTaskGAttrData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, int32> datas = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_datas_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int32_t, int32_t >::const_iterator
      it = this->_internal_datas().begin();
      it != this->_internal_datas().end(); ++it) {
    total_size += DBTaskGAttrData_DatasEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBTaskGAttrData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBTaskGAttrData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBTaskGAttrData::GetClassData() const { return &_class_data_; }

void DBTaskGAttrData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBTaskGAttrData *>(to)->MergeFrom(
      static_cast<const DBTaskGAttrData &>(from));
}


void DBTaskGAttrData::MergeFrom(const DBTaskGAttrData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBTaskGAttrData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  datas_.MergeFrom(from.datas_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBTaskGAttrData::CopyFrom(const DBTaskGAttrData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBTaskGAttrData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskGAttrData::IsInitialized() const {
  return true;
}

void DBTaskGAttrData::InternalSwap(DBTaskGAttrData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  datas_.InternalSwap(&other->datas_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBTaskGAttrData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[17]);
}

// ===================================================================

class DBUserTaskGroup::_Internal {
 public:
  static const ::PRO::DBTaskGAttrData& cell_data(const DBUserTaskGroup* msg);
};

const ::PRO::DBTaskGAttrData&
DBUserTaskGroup::_Internal::cell_data(const DBUserTaskGroup* msg) {
  return *msg->cell_data_;
}
DBUserTaskGroup::DBUserTaskGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskGroup)
}
DBUserTaskGroup::DBUserTaskGroup(const DBUserTaskGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cell_data()) {
    cell_data_ = new ::PRO::DBTaskGAttrData(*from.cell_data_);
  } else {
    cell_data_ = nullptr;
  }
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(endtime_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskGroup)
}

inline void DBUserTaskGroup::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&cell_data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&cell_data_)) + sizeof(endtime_));
}

DBUserTaskGroup::~DBUserTaskGroup() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskGroup)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete cell_data_;
}

void DBUserTaskGroup::ArenaDtor(void* object) {
  DBUserTaskGroup* _this = reinterpret_cast< DBUserTaskGroup* >(object);
  (void)_this;
}
void DBUserTaskGroup::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && cell_data_ != nullptr) {
    delete cell_data_;
  }
  cell_data_ = nullptr;
  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endtime_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(endtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskGroup::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 task_group = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          task_group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 group_cell = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          group_cell_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PRO.DBTaskGAttrData cell_data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_cell_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 gstate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          gstate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 trigg_level = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          trigg_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 createtime = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          createtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 endtime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_iid(), target);
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_role_iid(), target);
  }

  // int32 task_group = 4;
  if (this->_internal_task_group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_task_group(), target);
  }

  // int32 group_cell = 5;
  if (this->_internal_group_cell() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_group_cell(), target);
  }

  // .PRO.DBTaskGAttrData cell_data = 6;
  if (this->_internal_has_cell_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::cell_data(this), target, stream);
  }

  // int32 gstate = 7;
  if (this->_internal_gstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_gstate(), target);
  }

  // int32 trigg_level = 8;
  if (this->_internal_trigg_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_trigg_level(), target);
  }

  // int32 createtime = 9;
  if (this->_internal_createtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_createtime(), target);
  }

  // int32 endtime = 10;
  if (this->_internal_endtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskGroup)
  return target;
}

size_t DBUserTaskGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PRO.DBTaskGAttrData cell_data = 6;
  if (this->_internal_has_cell_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cell_data_);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 task_group = 4;
  if (this->_internal_task_group() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_task_group());
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int32 group_cell = 5;
  if (this->_internal_group_cell() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_group_cell());
  }

  // int32 gstate = 7;
  if (this->_internal_gstate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_gstate());
  }

  // int32 trigg_level = 8;
  if (this->_internal_trigg_level() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_trigg_level());
  }

  // int32 createtime = 9;
  if (this->_internal_createtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_createtime());
  }

  // int32 endtime = 10;
  if (this->_internal_endtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_endtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskGroup::GetClassData() const { return &_class_data_; }

void DBUserTaskGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskGroup *>(to)->MergeFrom(
      static_cast<const DBUserTaskGroup &>(from));
}


void DBUserTaskGroup::MergeFrom(const DBUserTaskGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskGroup)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cell_data()) {
    _internal_mutable_cell_data()->::PRO::DBTaskGAttrData::MergeFrom(from._internal_cell_data());
  }
  if (from._internal_iid() != 0) {
    _internal_set_iid(from._internal_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_task_group() != 0) {
    _internal_set_task_group(from._internal_task_group());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_group_cell() != 0) {
    _internal_set_group_cell(from._internal_group_cell());
  }
  if (from._internal_gstate() != 0) {
    _internal_set_gstate(from._internal_gstate());
  }
  if (from._internal_trigg_level() != 0) {
    _internal_set_trigg_level(from._internal_trigg_level());
  }
  if (from._internal_createtime() != 0) {
    _internal_set_createtime(from._internal_createtime());
  }
  if (from._internal_endtime() != 0) {
    _internal_set_endtime(from._internal_endtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskGroup::CopyFrom(const DBUserTaskGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskGroup::IsInitialized() const {
  return true;
}

void DBUserTaskGroup::InternalSwap(DBUserTaskGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserTaskGroup, endtime_)
      + sizeof(DBUserTaskGroup::endtime_)
      - PROTOBUF_FIELD_OFFSET(DBUserTaskGroup, cell_data_)>(
          reinterpret_cast<char*>(&cell_data_),
          reinterpret_cast<char*>(&other->cell_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskGroup::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[18]);
}

// ===================================================================

class DBUserTaskGroups::_Internal {
 public:
};

DBUserTaskGroups::DBUserTaskGroups(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  groups_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskGroups)
}
DBUserTaskGroups::DBUserTaskGroups(const DBUserTaskGroups& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskGroups)
}

inline void DBUserTaskGroups::SharedCtor() {
}

DBUserTaskGroups::~DBUserTaskGroups() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskGroups)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskGroups::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserTaskGroups::ArenaDtor(void* object) {
  DBUserTaskGroups* _this = reinterpret_cast< DBUserTaskGroups* >(object);
  (void)_this;
}
void DBUserTaskGroups::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskGroups::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskGroups::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskGroups)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskGroups::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserTaskGroup groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskGroups::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskGroups)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskGroup groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskGroups)
  return target;
}

size_t DBUserTaskGroups::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskGroups)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskGroup groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskGroups::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskGroups::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskGroups::GetClassData() const { return &_class_data_; }

void DBUserTaskGroups::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskGroups *>(to)->MergeFrom(
      static_cast<const DBUserTaskGroups &>(from));
}


void DBUserTaskGroups::MergeFrom(const DBUserTaskGroups& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskGroups)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskGroups::CopyFrom(const DBUserTaskGroups& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskGroups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskGroups::IsInitialized() const {
  return true;
}

void DBUserTaskGroups::InternalSwap(DBUserTaskGroups* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskGroups::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[19]);
}

// ===================================================================

class DBUserTaskGroupEnd::_Internal {
 public:
};

DBUserTaskGroupEnd::DBUserTaskGroupEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskGroupEnd)
}
DBUserTaskGroupEnd::DBUserTaskGroupEnd(const DBUserTaskGroupEnd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(endtime_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskGroupEnd)
}

inline void DBUserTaskGroupEnd::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(endtime_));
}

DBUserTaskGroupEnd::~DBUserTaskGroupEnd() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskGroupEnd)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskGroupEnd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserTaskGroupEnd::ArenaDtor(void* object) {
  DBUserTaskGroupEnd* _this = reinterpret_cast< DBUserTaskGroupEnd* >(object);
  (void)_this;
}
void DBUserTaskGroupEnd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskGroupEnd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskGroupEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskGroupEnd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endtime_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(endtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskGroupEnd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 task_group = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          task_group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 gstate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          gstate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 endtime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          endtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskGroupEnd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskGroupEnd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_iid(), target);
  }

  // int32 task_group = 4;
  if (this->_internal_task_group() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_task_group(), target);
  }

  // int32 gstate = 7;
  if (this->_internal_gstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_gstate(), target);
  }

  // int32 endtime = 10;
  if (this->_internal_endtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskGroupEnd)
  return target;
}

size_t DBUserTaskGroupEnd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskGroupEnd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 task_group = 4;
  if (this->_internal_task_group() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_task_group());
  }

  // int32 gstate = 7;
  if (this->_internal_gstate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_gstate());
  }

  // int32 endtime = 10;
  if (this->_internal_endtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_endtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskGroupEnd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskGroupEnd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskGroupEnd::GetClassData() const { return &_class_data_; }

void DBUserTaskGroupEnd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskGroupEnd *>(to)->MergeFrom(
      static_cast<const DBUserTaskGroupEnd &>(from));
}


void DBUserTaskGroupEnd::MergeFrom(const DBUserTaskGroupEnd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskGroupEnd)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iid() != 0) {
    _internal_set_iid(from._internal_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_task_group() != 0) {
    _internal_set_task_group(from._internal_task_group());
  }
  if (from._internal_gstate() != 0) {
    _internal_set_gstate(from._internal_gstate());
  }
  if (from._internal_endtime() != 0) {
    _internal_set_endtime(from._internal_endtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskGroupEnd::CopyFrom(const DBUserTaskGroupEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskGroupEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskGroupEnd::IsInitialized() const {
  return true;
}

void DBUserTaskGroupEnd::InternalSwap(DBUserTaskGroupEnd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserTaskGroupEnd, endtime_)
      + sizeof(DBUserTaskGroupEnd::endtime_)
      - PROTOBUF_FIELD_OFFSET(DBUserTaskGroupEnd, iid_)>(
          reinterpret_cast<char*>(&iid_),
          reinterpret_cast<char*>(&other->iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskGroupEnd::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[20]);
}

// ===================================================================

class DBUserTaskGroupEnds::_Internal {
 public:
};

DBUserTaskGroupEnds::DBUserTaskGroupEnds(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  groups_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserTaskGroupEnds)
}
DBUserTaskGroupEnds::DBUserTaskGroupEnds(const DBUserTaskGroupEnds& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserTaskGroupEnds)
}

inline void DBUserTaskGroupEnds::SharedCtor() {
}

DBUserTaskGroupEnds::~DBUserTaskGroupEnds() {
  // @@protoc_insertion_point(destructor:PRO.DBUserTaskGroupEnds)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserTaskGroupEnds::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserTaskGroupEnds::ArenaDtor(void* object) {
  DBUserTaskGroupEnds* _this = reinterpret_cast< DBUserTaskGroupEnds* >(object);
  (void)_this;
}
void DBUserTaskGroupEnds::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserTaskGroupEnds::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserTaskGroupEnds::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserTaskGroupEnds)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groups_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserTaskGroupEnds::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserTaskGroupEnd groups = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_groups(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserTaskGroupEnds::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserTaskGroupEnds)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskGroupEnd groups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_groups_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_groups(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserTaskGroupEnds)
  return target;
}

size_t DBUserTaskGroupEnds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserTaskGroupEnds)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserTaskGroupEnd groups = 1;
  total_size += 1UL * this->_internal_groups_size();
  for (const auto& msg : this->groups_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserTaskGroupEnds::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserTaskGroupEnds::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserTaskGroupEnds::GetClassData() const { return &_class_data_; }

void DBUserTaskGroupEnds::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserTaskGroupEnds *>(to)->MergeFrom(
      static_cast<const DBUserTaskGroupEnds &>(from));
}


void DBUserTaskGroupEnds::MergeFrom(const DBUserTaskGroupEnds& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserTaskGroupEnds)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserTaskGroupEnds::CopyFrom(const DBUserTaskGroupEnds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserTaskGroupEnds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserTaskGroupEnds::IsInitialized() const {
  return true;
}

void DBUserTaskGroupEnds::InternalSwap(DBUserTaskGroupEnds* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  groups_.InternalSwap(&other->groups_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserTaskGroupEnds::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[21]);
}

// ===================================================================

class DBUserBattleInfo::_Internal {
 public:
};

DBUserBattleInfo::DBUserBattleInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserBattleInfo)
}
DBUserBattleInfo::DBUserBattleInfo(const DBUserBattleInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&iid_, &from.iid_,
    static_cast<size_t>(reinterpret_cast<char*>(&draw_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(draw_));
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserBattleInfo)
}

inline void DBUserBattleInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&iid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&draw_) -
    reinterpret_cast<char*>(&iid_)) + sizeof(draw_));
}

DBUserBattleInfo::~DBUserBattleInfo() {
  // @@protoc_insertion_point(destructor:PRO.DBUserBattleInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserBattleInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserBattleInfo::ArenaDtor(void* object) {
  DBUserBattleInfo* _this = reinterpret_cast< DBUserBattleInfo* >(object);
  (void)_this;
}
void DBUserBattleInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserBattleInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserBattleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserBattleInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&draw_) -
      reinterpret_cast<char*>(&iid_)) + sizeof(draw_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserBattleInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ver_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ver__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 iid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 role_iid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          role_iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 levels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          levels_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 victory = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          victory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 defeat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          defeat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 draw = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          draw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserBattleInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserBattleInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ver_(), target);
  }

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_iid(), target);
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_role_iid(), target);
  }

  // int32 levels = 4;
  if (this->_internal_levels() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_levels(), target);
  }

  // int32 victory = 5;
  if (this->_internal_victory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_victory(), target);
  }

  // int32 defeat = 6;
  if (this->_internal_defeat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_defeat(), target);
  }

  // int32 draw = 7;
  if (this->_internal_draw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_draw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserBattleInfo)
  return target;
}

size_t DBUserBattleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserBattleInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 iid = 2;
  if (this->_internal_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_iid());
  }

  // uint32 ver_ = 1;
  if (this->_internal_ver_() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ver_());
  }

  // int32 levels = 4;
  if (this->_internal_levels() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_levels());
  }

  // int64 role_iid = 3;
  if (this->_internal_role_iid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_role_iid());
  }

  // int32 victory = 5;
  if (this->_internal_victory() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_victory());
  }

  // int32 defeat = 6;
  if (this->_internal_defeat() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_defeat());
  }

  // int32 draw = 7;
  if (this->_internal_draw() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_draw());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserBattleInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserBattleInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserBattleInfo::GetClassData() const { return &_class_data_; }

void DBUserBattleInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserBattleInfo *>(to)->MergeFrom(
      static_cast<const DBUserBattleInfo &>(from));
}


void DBUserBattleInfo::MergeFrom(const DBUserBattleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserBattleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iid() != 0) {
    _internal_set_iid(from._internal_iid());
  }
  if (from._internal_ver_() != 0) {
    _internal_set_ver_(from._internal_ver_());
  }
  if (from._internal_levels() != 0) {
    _internal_set_levels(from._internal_levels());
  }
  if (from._internal_role_iid() != 0) {
    _internal_set_role_iid(from._internal_role_iid());
  }
  if (from._internal_victory() != 0) {
    _internal_set_victory(from._internal_victory());
  }
  if (from._internal_defeat() != 0) {
    _internal_set_defeat(from._internal_defeat());
  }
  if (from._internal_draw() != 0) {
    _internal_set_draw(from._internal_draw());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserBattleInfo::CopyFrom(const DBUserBattleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserBattleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserBattleInfo::IsInitialized() const {
  return true;
}

void DBUserBattleInfo::InternalSwap(DBUserBattleInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBUserBattleInfo, draw_)
      + sizeof(DBUserBattleInfo::draw_)
      - PROTOBUF_FIELD_OFFSET(DBUserBattleInfo, iid_)>(
          reinterpret_cast<char*>(&iid_),
          reinterpret_cast<char*>(&other->iid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserBattleInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[22]);
}

// ===================================================================

class DBUserBattles::_Internal {
 public:
};

DBUserBattles::DBUserBattles(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  infos_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.DBUserBattles)
}
DBUserBattles::DBUserBattles(const DBUserBattles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PRO.DBUserBattles)
}

inline void DBUserBattles::SharedCtor() {
}

DBUserBattles::~DBUserBattles() {
  // @@protoc_insertion_point(destructor:PRO.DBUserBattles)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBUserBattles::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBUserBattles::ArenaDtor(void* object) {
  DBUserBattles* _this = reinterpret_cast< DBUserBattles* >(object);
  (void)_this;
}
void DBUserBattles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBUserBattles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBUserBattles::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.DBUserBattles)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBUserBattles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PRO.DBUserBattleInfo infos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBUserBattles::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.DBUserBattles)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PRO.DBUserBattleInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_infos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_infos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.DBUserBattles)
  return target;
}

size_t DBUserBattles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.DBUserBattles)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PRO.DBUserBattleInfo infos = 1;
  total_size += 1UL * this->_internal_infos_size();
  for (const auto& msg : this->infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBUserBattles::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBUserBattles::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBUserBattles::GetClassData() const { return &_class_data_; }

void DBUserBattles::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBUserBattles *>(to)->MergeFrom(
      static_cast<const DBUserBattles &>(from));
}


void DBUserBattles::MergeFrom(const DBUserBattles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.DBUserBattles)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBUserBattles::CopyFrom(const DBUserBattles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.DBUserBattles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserBattles::IsInitialized() const {
  return true;
}

void DBUserBattles::InternalSwap(DBUserBattles* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  infos_.InternalSwap(&other->infos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DBUserBattles::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_db_5finternal_2eproto_getter, &descriptor_table_db_5finternal_2eproto_once,
      file_level_metadata_db_5finternal_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace PRO
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PRO::DBRowDel* Arena::CreateMaybeMessage< ::PRO::DBRowDel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBRowDel >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBRowDeletes* Arena::CreateMaybeMessage< ::PRO::DBRowDeletes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBRowDeletes >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBRoleBaseInfo* Arena::CreateMaybeMessage< ::PRO::DBRoleBaseInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBRoleBaseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserRoles* Arena::CreateMaybeMessage< ::PRO::DBUserRoles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserRoles >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserHome* Arena::CreateMaybeMessage< ::PRO::DBUserHome >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserHome >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserHomeStructureItem* Arena::CreateMaybeMessage< ::PRO::DBUserHomeStructureItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserHomeStructureItem >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserHomeStructure* Arena::CreateMaybeMessage< ::PRO::DBUserHomeStructure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserHomeStructure >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBPetCategory* Arena::CreateMaybeMessage< ::PRO::DBPetCategory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBPetCategory >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserPetItem* Arena::CreateMaybeMessage< ::PRO::DBUserPetItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserPetItem >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserPets* Arena::CreateMaybeMessage< ::PRO::DBUserPets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserPets >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBTaskAttrData_DatasEntry_DoNotUse* Arena::CreateMaybeMessage< ::PRO::DBTaskAttrData_DatasEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBTaskAttrData_DatasEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBTaskAttrData* Arena::CreateMaybeMessage< ::PRO::DBTaskAttrData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBTaskAttrData >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskItem* Arena::CreateMaybeMessage< ::PRO::DBUserTaskItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskItem >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTasks* Arena::CreateMaybeMessage< ::PRO::DBUserTasks >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTasks >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskEndItem* Arena::CreateMaybeMessage< ::PRO::DBUserTaskEndItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskEndItem >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskEnds* Arena::CreateMaybeMessage< ::PRO::DBUserTaskEnds >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskEnds >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBTaskGAttrData_DatasEntry_DoNotUse* Arena::CreateMaybeMessage< ::PRO::DBTaskGAttrData_DatasEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBTaskGAttrData_DatasEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBTaskGAttrData* Arena::CreateMaybeMessage< ::PRO::DBTaskGAttrData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBTaskGAttrData >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskGroup* Arena::CreateMaybeMessage< ::PRO::DBUserTaskGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskGroups* Arena::CreateMaybeMessage< ::PRO::DBUserTaskGroups >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskGroups >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskGroupEnd* Arena::CreateMaybeMessage< ::PRO::DBUserTaskGroupEnd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskGroupEnd >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserTaskGroupEnds* Arena::CreateMaybeMessage< ::PRO::DBUserTaskGroupEnds >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserTaskGroupEnds >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserBattleInfo* Arena::CreateMaybeMessage< ::PRO::DBUserBattleInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserBattleInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::DBUserBattles* Arena::CreateMaybeMessage< ::PRO::DBUserBattles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::DBUserBattles >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
