// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_iid.proto

#include "proto_iid.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PRO {
}  // namespace PRO
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_proto_5fiid_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_5fiid_2eproto = nullptr;
const uint32_t TableStruct_proto_5fiid_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_proto_5fiid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017proto_iid.proto\022\003PRO*\272\004\n\014USER_PROTYPE\022"
  "\022\n\016UNIVERSAL_1000\020\000\022\023\n\016USER_MSG_BEGIN\020\350\007"
  "\022\023\n\016USER_LOGIN_REQ\020\351\007\022\025\n\020USER_RELOGIN_RE"
  "Q\020\352\007\022\024\n\017USER_LOGOUT_NTF\020\353\007\022\024\n\017USER_ACTIV"
  "E_NTF\020\354\007\022\026\n\021USER_ROLELIST_REQ\020\355\007\022\030\n\023USER"
  "_ROLESELECT_REQ\020\356\007\022\030\n\023USER_ROLECREATE_RE"
  "Q\020\357\007\022\021\n\014USER_MSG_END\020\314\010\022\023\n\016USER_LOGIN_AC"
  "K\020\315\010\022\025\n\020USER_RELOGIN_ACK\020\316\010\022\026\n\021USER_GATE"
  "LOST_NTF\020\317\010\022\026\n\021USER_ROLELIST_ACK\020\320\010\022\030\n\023U"
  "SER_ROLESELECT_ACK\020\321\010\022\030\n\023USER_ROLECREATE"
  "_ACK\020\322\010\022\031\n\024USER_ROLEDETAILA_NTF\020\323\010\022\031\n\024US"
  "ER_ROLEDETAILB_NTF\020\324\010\022\033\n\026USER_ROLEDETAIL"
  "END_NTF\020\325\010\022\032\n\025USER_MYSIMPLEINFO_REQ\020\326\010\022\032"
  "\n\025USER_MYSIMPLEINFO_ACK\020\327\010\022\031\n\024USER_SAVER"
  "OLELOC_NTF\020\330\010\022\024\n\017USER_MSGALL_END\020\212\n*\203\001\n\r"
  "BUILD_PROTYPE\022\022\n\016UNIVERSAL_1250\020\000\022\026\n\021BUI"
  "LD_ADDITEM_REQ\020\343\t\022\026\n\021BUILD_ADDITEM_ACK\020\344"
  "\t\022\026\n\021BUILD_DELITEM_REQ\020\345\t\022\026\n\021BUILD_DELIT"
  "EM_ACK\020\346\t*\201\001\n\013PET_PROTYPE\022\022\n\016UNIVERSAL_1"
  "500\020\000\022\025\n\020PET_ADOPTONE_REQ\020\335\013\022\025\n\020PET_ADOP"
  "TONE_ACK\020\336\013\022\027\n\022PET_RELEASEONE_REQ\020\337\013\022\027\n\022"
  "PET_RELEASEONE_ACK\020\340\013*\204\002\n\014CHAT_PROTYPE\022\022"
  "\n\016UNIVERSAL_1750\020\000\022\023\n\016CHAT_MSG_BEGIN\020\326\r\022"
  "\025\n\020CHAT_USERMSG_SAY\020\327\r\022\035\n\030CHAT_USERCHANN"
  "ELS_ACTIVE\020\330\r\022\035\n\030CHAT_CUSTOMCHANNELID_RE"
  "Q\020\331\r\022\021\n\014CHAT_MSG_END\020\272\016\022\035\n\030CHAT_CUSTOMCH"
  "ANNELID_ACK\020\275\016\022\025\n\020CHAT_CHATMSG_NTF\020\276\016\022\027\n"
  "\022CHAT_GLOBALMSG_NTF\020\277\016\022\024\n\017CHAT_MSGALL_EN"
  "D\020\317\017*\334\003\n\014MAIL_PROTYPE\022\022\n\016UNIVERSAL_2000\020"
  "\000\022\023\n\016MAIL_MSG_BEGIN\020\320\017\022\033\n\026MAIL_USERONLIN"
  "E_ACTIVE\020\321\017\022\025\n\020MAIL_NEWMAIL_NTF\020\322\017\022\025\n\020MA"
  "IL_MAILGET_REQ\020\323\017\022\026\n\021MAIL_READMAIL_REQ\020\324"
  "\017\022\030\n\023MAIL_DELETEMAIL_REQ\020\325\017\022\033\n\026MAIL_UNBI"
  "NDATTACHS_REQ\020\326\017\022\030\n\023MAIL_SYSTEMMAIL_REQ\020"
  "\327\017\022\025\n\020MAIL_NEWMAIL_REQ\020\330\017\022\021\n\014MAIL_MSG_EN"
  "D\020\264\020\022\025\n\020MAIL_MAILGET_ACK\020\265\020\022\026\n\021MAIL_READ"
  "MAIL_ACK\020\267\020\022\030\n\023MAIL_DELETEMAIL_ACK\020\270\020\022\033\n"
  "\026MAIL_UNBINDATTACHS_ACK\020\271\020\022\030\n\023MAIL_SYSTE"
  "MMAIL_ACK\020\272\020\022\030\n\023MAIL_SYSTEMMAIL_NTF\020\273\020\022\025"
  "\n\020MAIL_NEWMAIL_ACK\020\274\020\022\024\n\017MAIL_MSGALL_END"
  "\020\311\021*\336\002\n\016FRIEND_PROTYPE\022\022\n\016UNIVERSAL_2250"
  "\020\000\022\025\n\020FRIEND_MSG_BEGIN\020\312\021\022\027\n\022FRD_FRIENDL"
  "IST_REQ\020\313\021\022\031\n\024FRD_FRIENDINVITE_REQ\020\314\021\022\032\n"
  "\025FRD_INVITECONFIRM_REQ\020\315\021\022\031\n\024FRD_FRIENDD"
  "ELETE_REQ\020\316\021\022\023\n\016FRIEND_MSG_END\020\256\022\022\027\n\022FRD"
  "_FRIENDLIST_ACK\020\257\022\022\031\n\024FRD_FRIENDINVITE_A"
  "CK\020\260\022\022\032\n\025FRD_INVITECONFIRM_ACK\020\261\022\022\031\n\024FRD"
  "_FRIENDDELETE_ACK\020\262\022\022\036\n\031FRD_FRIENDCHANGE"
  "OTHER_NTF\020\263\022\022\026\n\021FRIEND_MSGALL_END\020\303\023*]\n\r"
  "ITEMS_PROTYPE\022\022\n\016UNIVERSAL_2500\020\000\022\033\n\026ITE"
  "M_USERBINDITEMS_REQ\020\305\023\022\033\n\026ITEM_USERBINDI"
  "TEMS_ACK\020\306\023*\366\002\n\014TASK_PROTYPE\022\022\n\016UNIVERSA"
  "L_2750\020\000\022\023\n\016TASK_MSG_BEGIN\020\276\025\022\026\n\021TASK_WA"
  "ITLIST_REQ\020\277\025\022\030\n\023TASK_MYTASKLIST_REQ\020\300\025\022"
  "\025\n\020TASK_GETTASK_REQ\020\301\025\022\030\n\023TASK_SUBMITTAS"
  "K_REQ\020\302\025\022\030\n\023TASK_GIVEUPTASK_REQ\020\303\025\022\021\n\014TA"
  "SK_MSG_END\020\242\026\022\026\n\021TASK_WAITLIST_ACK\020\243\026\022\030\n"
  "\023TASK_MYTASKLIST_ACK\020\244\026\022\025\n\020TASK_GETTASK_"
  "ACK\020\245\026\022\030\n\023TASK_SUBMITTASK_ACK\020\246\026\022\032\n\025TASK"
  "_OBTAINREWARD_NTF\020\247\026\022\030\n\023TASK_GIVEUPTASK_"
  "ACK\020\250\026\022\024\n\017TASK_MSGALL_END\020\267\027*\220\001\n\013MMS_PRO"
  "TYPE\022\022\n\016UNIVERSAL_3000\020\000\022\022\n\rMMS_MSG_BEGI"
  "N\020\270\027\022\030\n\023MMS_MATCHMAKING_REQ\020\271\027\022\020\n\013MMS_MS"
  "G_END\020\304\030\022\030\n\023MMS_MATCHMAKING_ACK\020\305\030\022\023\n\016MM"
  "S_MSGALL_END\020\261\031*\246\002\n\013GMS_PROTYPE\022\022\n\016UNIVE"
  "RSAL_4000\020\000\022\022\n\rGMS_MSG_BEGIN\020\240\037\022\026\n\021GMS_E"
  "NTERGAME_REQ\020\241\037\022\026\n\021GMS_USERSTATE_SYN\020\242\037\022"
  "\020\n\013GMS_MSG_END\020\224#\022\026\n\021GMS_USERALIVE_NTF\020\225"
  "#\022\030\n\023GMS_SAVEUSERLOC_NTF\020\226#\022\026\n\021GMS_ENTER"
  "GAME_ACK\020\227#\022\031\n\024GMS_USERSVISIBLE_NTF\020\230#\022\033"
  "\n\026GMS_SERVICEDISABLE_NTF\020\231#\022\026\n\021GMS_USERI"
  "NFO_SYNC\020\232#\022\023\n\016GMS_MSGALL_END\020\207\'BT\n\033com."
  "cms.client.network.gproP\001Z\025gamelib/proto"
  "buf/gpro\252\002\033com.cms.client.network.gprob\006"
  "proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_5fiid_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_5fiid_2eproto = {
  false, false, 2966, descriptor_table_protodef_proto_5fiid_2eproto, "proto_iid.proto", 
  &descriptor_table_proto_5fiid_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_proto_5fiid_2eproto::offsets,
  nullptr, file_level_enum_descriptors_proto_5fiid_2eproto, file_level_service_descriptors_proto_5fiid_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_proto_5fiid_2eproto_getter() {
  return &descriptor_table_proto_5fiid_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_proto_5fiid_2eproto(&descriptor_table_proto_5fiid_2eproto);
namespace PRO {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* USER_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[0];
}
bool USER_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1290:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BUILD_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[1];
}
bool BUILD_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1251:
    case 1252:
    case 1253:
    case 1254:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PET_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[2];
}
bool PET_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CHAT_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[3];
}
bool CHAT_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1750:
    case 1751:
    case 1752:
    case 1753:
    case 1850:
    case 1853:
    case 1854:
    case 1855:
    case 1999:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MAIL_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[4];
}
bool MAIL_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 2000:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
    case 2007:
    case 2008:
    case 2100:
    case 2101:
    case 2103:
    case 2104:
    case 2105:
    case 2106:
    case 2107:
    case 2108:
    case 2249:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FRIEND_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[5];
}
bool FRIEND_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 2250:
    case 2251:
    case 2252:
    case 2253:
    case 2254:
    case 2350:
    case 2351:
    case 2352:
    case 2353:
    case 2354:
    case 2355:
    case 2499:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ITEMS_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[6];
}
bool ITEMS_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 2501:
    case 2502:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TASK_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[7];
}
bool TASK_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 2750:
    case 2751:
    case 2752:
    case 2753:
    case 2754:
    case 2755:
    case 2850:
    case 2851:
    case 2852:
    case 2853:
    case 2854:
    case 2855:
    case 2856:
    case 2999:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MMS_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[8];
}
bool MMS_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 3000:
    case 3001:
    case 3140:
    case 3141:
    case 3249:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GMS_PROTYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_proto_5fiid_2eproto);
  return file_level_enum_descriptors_proto_5fiid_2eproto[9];
}
bool GMS_PROTYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 4000:
    case 4001:
    case 4002:
    case 4500:
    case 4501:
    case 4502:
    case 4503:
    case 4504:
    case 4505:
    case 4506:
    case 4999:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PRO
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
