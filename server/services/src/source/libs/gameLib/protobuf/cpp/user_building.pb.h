// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_building.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_user_5fbuilding_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_user_5fbuilding_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "db_internal.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_user_5fbuilding_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_user_5fbuilding_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_user_5fbuilding_2eproto;
namespace PRO {
class Build_AddItem_ack;
struct Build_AddItem_ackDefaultTypeInternal;
extern Build_AddItem_ackDefaultTypeInternal _Build_AddItem_ack_default_instance_;
class Build_AddItem_req;
struct Build_AddItem_reqDefaultTypeInternal;
extern Build_AddItem_reqDefaultTypeInternal _Build_AddItem_req_default_instance_;
class Build_DelItem_ack;
struct Build_DelItem_ackDefaultTypeInternal;
extern Build_DelItem_ackDefaultTypeInternal _Build_DelItem_ack_default_instance_;
class Build_DelItem_req;
struct Build_DelItem_reqDefaultTypeInternal;
extern Build_DelItem_reqDefaultTypeInternal _Build_DelItem_req_default_instance_;
}  // namespace PRO
PROTOBUF_NAMESPACE_OPEN
template<> ::PRO::Build_AddItem_ack* Arena::CreateMaybeMessage<::PRO::Build_AddItem_ack>(Arena*);
template<> ::PRO::Build_AddItem_req* Arena::CreateMaybeMessage<::PRO::Build_AddItem_req>(Arena*);
template<> ::PRO::Build_DelItem_ack* Arena::CreateMaybeMessage<::PRO::Build_DelItem_ack>(Arena*);
template<> ::PRO::Build_DelItem_req* Arena::CreateMaybeMessage<::PRO::Build_DelItem_req>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace PRO {

// ===================================================================

class Build_AddItem_req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PRO.Build_AddItem_req) */ {
 public:
  inline Build_AddItem_req() : Build_AddItem_req(nullptr) {}
  ~Build_AddItem_req() override;
  explicit constexpr Build_AddItem_req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Build_AddItem_req(const Build_AddItem_req& from);
  Build_AddItem_req(Build_AddItem_req&& from) noexcept
    : Build_AddItem_req() {
    *this = ::std::move(from);
  }

  inline Build_AddItem_req& operator=(const Build_AddItem_req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Build_AddItem_req& operator=(Build_AddItem_req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Build_AddItem_req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Build_AddItem_req* internal_default_instance() {
    return reinterpret_cast<const Build_AddItem_req*>(
               &_Build_AddItem_req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Build_AddItem_req& a, Build_AddItem_req& b) {
    a.Swap(&b);
  }
  inline void Swap(Build_AddItem_req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Build_AddItem_req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Build_AddItem_req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Build_AddItem_req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Build_AddItem_req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Build_AddItem_req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Build_AddItem_req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PRO.Build_AddItem_req";
  }
  protected:
  explicit Build_AddItem_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLookAtFieldNumber = 3,
    kBuildingPosFieldNumber = 4,
    kParentBuildingFieldNumber = 1,
    kBuildingResidFieldNumber = 2,
  };
  // string look_at = 3;
  void clear_look_at();
  const std::string& look_at() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_look_at(ArgT0&& arg0, ArgT... args);
  std::string* mutable_look_at();
  PROTOBUF_NODISCARD std::string* release_look_at();
  void set_allocated_look_at(std::string* look_at);
  private:
  const std::string& _internal_look_at() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_look_at(const std::string& value);
  std::string* _internal_mutable_look_at();
  public:

  // string building_pos = 4;
  void clear_building_pos();
  const std::string& building_pos() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_building_pos(ArgT0&& arg0, ArgT... args);
  std::string* mutable_building_pos();
  PROTOBUF_NODISCARD std::string* release_building_pos();
  void set_allocated_building_pos(std::string* building_pos);
  private:
  const std::string& _internal_building_pos() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_building_pos(const std::string& value);
  std::string* _internal_mutable_building_pos();
  public:

  // int64 parent_building = 1;
  void clear_parent_building();
  int64_t parent_building() const;
  void set_parent_building(int64_t value);
  private:
  int64_t _internal_parent_building() const;
  void _internal_set_parent_building(int64_t value);
  public:

  // int64 building_resid = 2;
  void clear_building_resid();
  int64_t building_resid() const;
  void set_building_resid(int64_t value);
  private:
  int64_t _internal_building_resid() const;
  void _internal_set_building_resid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PRO.Build_AddItem_req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr look_at_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr building_pos_;
  int64_t parent_building_;
  int64_t building_resid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fbuilding_2eproto;
};
// -------------------------------------------------------------------

class Build_AddItem_ack final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PRO.Build_AddItem_ack) */ {
 public:
  inline Build_AddItem_ack() : Build_AddItem_ack(nullptr) {}
  ~Build_AddItem_ack() override;
  explicit constexpr Build_AddItem_ack(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Build_AddItem_ack(const Build_AddItem_ack& from);
  Build_AddItem_ack(Build_AddItem_ack&& from) noexcept
    : Build_AddItem_ack() {
    *this = ::std::move(from);
  }

  inline Build_AddItem_ack& operator=(const Build_AddItem_ack& from) {
    CopyFrom(from);
    return *this;
  }
  inline Build_AddItem_ack& operator=(Build_AddItem_ack&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Build_AddItem_ack& default_instance() {
    return *internal_default_instance();
  }
  static inline const Build_AddItem_ack* internal_default_instance() {
    return reinterpret_cast<const Build_AddItem_ack*>(
               &_Build_AddItem_ack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Build_AddItem_ack& a, Build_AddItem_ack& b) {
    a.Swap(&b);
  }
  inline void Swap(Build_AddItem_ack* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Build_AddItem_ack* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Build_AddItem_ack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Build_AddItem_ack>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Build_AddItem_ack& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Build_AddItem_ack& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Build_AddItem_ack* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PRO.Build_AddItem_ack";
  }
  protected:
  explicit Build_AddItem_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .PRO.DBUserHomeStructureItem item = 2;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::PRO::DBUserHomeStructureItem& item() const;
  PROTOBUF_NODISCARD ::PRO::DBUserHomeStructureItem* release_item();
  ::PRO::DBUserHomeStructureItem* mutable_item();
  void set_allocated_item(::PRO::DBUserHomeStructureItem* item);
  private:
  const ::PRO::DBUserHomeStructureItem& _internal_item() const;
  ::PRO::DBUserHomeStructureItem* _internal_mutable_item();
  public:
  void unsafe_arena_set_allocated_item(
      ::PRO::DBUserHomeStructureItem* item);
  ::PRO::DBUserHomeStructureItem* unsafe_arena_release_item();

  // int32 result = 1;
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PRO.Build_AddItem_ack)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PRO::DBUserHomeStructureItem* item_;
  int32_t result_;
  friend struct ::TableStruct_user_5fbuilding_2eproto;
};
// -------------------------------------------------------------------

class Build_DelItem_req final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PRO.Build_DelItem_req) */ {
 public:
  inline Build_DelItem_req() : Build_DelItem_req(nullptr) {}
  ~Build_DelItem_req() override;
  explicit constexpr Build_DelItem_req(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Build_DelItem_req(const Build_DelItem_req& from);
  Build_DelItem_req(Build_DelItem_req&& from) noexcept
    : Build_DelItem_req() {
    *this = ::std::move(from);
  }

  inline Build_DelItem_req& operator=(const Build_DelItem_req& from) {
    CopyFrom(from);
    return *this;
  }
  inline Build_DelItem_req& operator=(Build_DelItem_req&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Build_DelItem_req& default_instance() {
    return *internal_default_instance();
  }
  static inline const Build_DelItem_req* internal_default_instance() {
    return reinterpret_cast<const Build_DelItem_req*>(
               &_Build_DelItem_req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Build_DelItem_req& a, Build_DelItem_req& b) {
    a.Swap(&b);
  }
  inline void Swap(Build_DelItem_req* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Build_DelItem_req* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Build_DelItem_req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Build_DelItem_req>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Build_DelItem_req& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Build_DelItem_req& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Build_DelItem_req* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PRO.Build_DelItem_req";
  }
  protected:
  explicit Build_DelItem_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuildingIidFieldNumber = 1,
  };
  // int64 building_iid = 1;
  void clear_building_iid();
  int64_t building_iid() const;
  void set_building_iid(int64_t value);
  private:
  int64_t _internal_building_iid() const;
  void _internal_set_building_iid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PRO.Build_DelItem_req)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t building_iid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fbuilding_2eproto;
};
// -------------------------------------------------------------------

class Build_DelItem_ack final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PRO.Build_DelItem_ack) */ {
 public:
  inline Build_DelItem_ack() : Build_DelItem_ack(nullptr) {}
  ~Build_DelItem_ack() override;
  explicit constexpr Build_DelItem_ack(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Build_DelItem_ack(const Build_DelItem_ack& from);
  Build_DelItem_ack(Build_DelItem_ack&& from) noexcept
    : Build_DelItem_ack() {
    *this = ::std::move(from);
  }

  inline Build_DelItem_ack& operator=(const Build_DelItem_ack& from) {
    CopyFrom(from);
    return *this;
  }
  inline Build_DelItem_ack& operator=(Build_DelItem_ack&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Build_DelItem_ack& default_instance() {
    return *internal_default_instance();
  }
  static inline const Build_DelItem_ack* internal_default_instance() {
    return reinterpret_cast<const Build_DelItem_ack*>(
               &_Build_DelItem_ack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Build_DelItem_ack& a, Build_DelItem_ack& b) {
    a.Swap(&b);
  }
  inline void Swap(Build_DelItem_ack* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Build_DelItem_ack* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Build_DelItem_ack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Build_DelItem_ack>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Build_DelItem_ack& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Build_DelItem_ack& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Build_DelItem_ack* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PRO.Build_DelItem_ack";
  }
  protected:
  explicit Build_DelItem_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuildingIidFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // int64 building_iid = 1;
  void clear_building_iid();
  int64_t building_iid() const;
  void set_building_iid(int64_t value);
  private:
  int64_t _internal_building_iid() const;
  void _internal_set_building_iid(int64_t value);
  public:

  // int32 result = 2;
  void clear_result();
  int32_t result() const;
  void set_result(int32_t value);
  private:
  int32_t _internal_result() const;
  void _internal_set_result(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:PRO.Build_DelItem_ack)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t building_iid_;
  int32_t result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fbuilding_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Build_AddItem_req

// int64 parent_building = 1;
inline void Build_AddItem_req::clear_parent_building() {
  parent_building_ = int64_t{0};
}
inline int64_t Build_AddItem_req::_internal_parent_building() const {
  return parent_building_;
}
inline int64_t Build_AddItem_req::parent_building() const {
  // @@protoc_insertion_point(field_get:PRO.Build_AddItem_req.parent_building)
  return _internal_parent_building();
}
inline void Build_AddItem_req::_internal_set_parent_building(int64_t value) {
  
  parent_building_ = value;
}
inline void Build_AddItem_req::set_parent_building(int64_t value) {
  _internal_set_parent_building(value);
  // @@protoc_insertion_point(field_set:PRO.Build_AddItem_req.parent_building)
}

// int64 building_resid = 2;
inline void Build_AddItem_req::clear_building_resid() {
  building_resid_ = int64_t{0};
}
inline int64_t Build_AddItem_req::_internal_building_resid() const {
  return building_resid_;
}
inline int64_t Build_AddItem_req::building_resid() const {
  // @@protoc_insertion_point(field_get:PRO.Build_AddItem_req.building_resid)
  return _internal_building_resid();
}
inline void Build_AddItem_req::_internal_set_building_resid(int64_t value) {
  
  building_resid_ = value;
}
inline void Build_AddItem_req::set_building_resid(int64_t value) {
  _internal_set_building_resid(value);
  // @@protoc_insertion_point(field_set:PRO.Build_AddItem_req.building_resid)
}

// string look_at = 3;
inline void Build_AddItem_req::clear_look_at() {
  look_at_.ClearToEmpty();
}
inline const std::string& Build_AddItem_req::look_at() const {
  // @@protoc_insertion_point(field_get:PRO.Build_AddItem_req.look_at)
  return _internal_look_at();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Build_AddItem_req::set_look_at(ArgT0&& arg0, ArgT... args) {
 
 look_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PRO.Build_AddItem_req.look_at)
}
inline std::string* Build_AddItem_req::mutable_look_at() {
  std::string* _s = _internal_mutable_look_at();
  // @@protoc_insertion_point(field_mutable:PRO.Build_AddItem_req.look_at)
  return _s;
}
inline const std::string& Build_AddItem_req::_internal_look_at() const {
  return look_at_.Get();
}
inline void Build_AddItem_req::_internal_set_look_at(const std::string& value) {
  
  look_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Build_AddItem_req::_internal_mutable_look_at() {
  
  return look_at_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Build_AddItem_req::release_look_at() {
  // @@protoc_insertion_point(field_release:PRO.Build_AddItem_req.look_at)
  return look_at_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Build_AddItem_req::set_allocated_look_at(std::string* look_at) {
  if (look_at != nullptr) {
    
  } else {
    
  }
  look_at_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), look_at,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (look_at_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    look_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PRO.Build_AddItem_req.look_at)
}

// string building_pos = 4;
inline void Build_AddItem_req::clear_building_pos() {
  building_pos_.ClearToEmpty();
}
inline const std::string& Build_AddItem_req::building_pos() const {
  // @@protoc_insertion_point(field_get:PRO.Build_AddItem_req.building_pos)
  return _internal_building_pos();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Build_AddItem_req::set_building_pos(ArgT0&& arg0, ArgT... args) {
 
 building_pos_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PRO.Build_AddItem_req.building_pos)
}
inline std::string* Build_AddItem_req::mutable_building_pos() {
  std::string* _s = _internal_mutable_building_pos();
  // @@protoc_insertion_point(field_mutable:PRO.Build_AddItem_req.building_pos)
  return _s;
}
inline const std::string& Build_AddItem_req::_internal_building_pos() const {
  return building_pos_.Get();
}
inline void Build_AddItem_req::_internal_set_building_pos(const std::string& value) {
  
  building_pos_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Build_AddItem_req::_internal_mutable_building_pos() {
  
  return building_pos_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Build_AddItem_req::release_building_pos() {
  // @@protoc_insertion_point(field_release:PRO.Build_AddItem_req.building_pos)
  return building_pos_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Build_AddItem_req::set_allocated_building_pos(std::string* building_pos) {
  if (building_pos != nullptr) {
    
  } else {
    
  }
  building_pos_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), building_pos,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (building_pos_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    building_pos_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PRO.Build_AddItem_req.building_pos)
}

// -------------------------------------------------------------------

// Build_AddItem_ack

// int32 result = 1;
inline void Build_AddItem_ack::clear_result() {
  result_ = 0;
}
inline int32_t Build_AddItem_ack::_internal_result() const {
  return result_;
}
inline int32_t Build_AddItem_ack::result() const {
  // @@protoc_insertion_point(field_get:PRO.Build_AddItem_ack.result)
  return _internal_result();
}
inline void Build_AddItem_ack::_internal_set_result(int32_t value) {
  
  result_ = value;
}
inline void Build_AddItem_ack::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:PRO.Build_AddItem_ack.result)
}

// optional .PRO.DBUserHomeStructureItem item = 2;
inline bool Build_AddItem_ack::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || item_ != nullptr);
  return value;
}
inline bool Build_AddItem_ack::has_item() const {
  return _internal_has_item();
}
inline const ::PRO::DBUserHomeStructureItem& Build_AddItem_ack::_internal_item() const {
  const ::PRO::DBUserHomeStructureItem* p = item_;
  return p != nullptr ? *p : reinterpret_cast<const ::PRO::DBUserHomeStructureItem&>(
      ::PRO::_DBUserHomeStructureItem_default_instance_);
}
inline const ::PRO::DBUserHomeStructureItem& Build_AddItem_ack::item() const {
  // @@protoc_insertion_point(field_get:PRO.Build_AddItem_ack.item)
  return _internal_item();
}
inline void Build_AddItem_ack::unsafe_arena_set_allocated_item(
    ::PRO::DBUserHomeStructureItem* item) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_);
  }
  item_ = item;
  if (item) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PRO.Build_AddItem_ack.item)
}
inline ::PRO::DBUserHomeStructureItem* Build_AddItem_ack::release_item() {
  _has_bits_[0] &= ~0x00000001u;
  ::PRO::DBUserHomeStructureItem* temp = item_;
  item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PRO::DBUserHomeStructureItem* Build_AddItem_ack::unsafe_arena_release_item() {
  // @@protoc_insertion_point(field_release:PRO.Build_AddItem_ack.item)
  _has_bits_[0] &= ~0x00000001u;
  ::PRO::DBUserHomeStructureItem* temp = item_;
  item_ = nullptr;
  return temp;
}
inline ::PRO::DBUserHomeStructureItem* Build_AddItem_ack::_internal_mutable_item() {
  _has_bits_[0] |= 0x00000001u;
  if (item_ == nullptr) {
    auto* p = CreateMaybeMessage<::PRO::DBUserHomeStructureItem>(GetArenaForAllocation());
    item_ = p;
  }
  return item_;
}
inline ::PRO::DBUserHomeStructureItem* Build_AddItem_ack::mutable_item() {
  ::PRO::DBUserHomeStructureItem* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:PRO.Build_AddItem_ack.item)
  return _msg;
}
inline void Build_AddItem_ack::set_allocated_item(::PRO::DBUserHomeStructureItem* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_);
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item));
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:PRO.Build_AddItem_ack.item)
}

// -------------------------------------------------------------------

// Build_DelItem_req

// int64 building_iid = 1;
inline void Build_DelItem_req::clear_building_iid() {
  building_iid_ = int64_t{0};
}
inline int64_t Build_DelItem_req::_internal_building_iid() const {
  return building_iid_;
}
inline int64_t Build_DelItem_req::building_iid() const {
  // @@protoc_insertion_point(field_get:PRO.Build_DelItem_req.building_iid)
  return _internal_building_iid();
}
inline void Build_DelItem_req::_internal_set_building_iid(int64_t value) {
  
  building_iid_ = value;
}
inline void Build_DelItem_req::set_building_iid(int64_t value) {
  _internal_set_building_iid(value);
  // @@protoc_insertion_point(field_set:PRO.Build_DelItem_req.building_iid)
}

// -------------------------------------------------------------------

// Build_DelItem_ack

// int64 building_iid = 1;
inline void Build_DelItem_ack::clear_building_iid() {
  building_iid_ = int64_t{0};
}
inline int64_t Build_DelItem_ack::_internal_building_iid() const {
  return building_iid_;
}
inline int64_t Build_DelItem_ack::building_iid() const {
  // @@protoc_insertion_point(field_get:PRO.Build_DelItem_ack.building_iid)
  return _internal_building_iid();
}
inline void Build_DelItem_ack::_internal_set_building_iid(int64_t value) {
  
  building_iid_ = value;
}
inline void Build_DelItem_ack::set_building_iid(int64_t value) {
  _internal_set_building_iid(value);
  // @@protoc_insertion_point(field_set:PRO.Build_DelItem_ack.building_iid)
}

// int32 result = 2;
inline void Build_DelItem_ack::clear_result() {
  result_ = 0;
}
inline int32_t Build_DelItem_ack::_internal_result() const {
  return result_;
}
inline int32_t Build_DelItem_ack::result() const {
  // @@protoc_insertion_point(field_get:PRO.Build_DelItem_ack.result)
  return _internal_result();
}
inline void Build_DelItem_ack::_internal_set_result(int32_t value) {
  
  result_ = value;
}
inline void Build_DelItem_ack::set_result(int32_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:PRO.Build_DelItem_ack.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PRO

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_user_5fbuilding_2eproto
