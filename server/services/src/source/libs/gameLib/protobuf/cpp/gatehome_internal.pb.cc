// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gatehome_internal.proto

#include "gatehome_internal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PRO {
constexpr GHS_UserInit_req::GHS_UserInit_req(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : utoken_(nullptr)
  , gateiid_(int64_t{0}){}
struct GHS_UserInit_reqDefaultTypeInternal {
  constexpr GHS_UserInit_reqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GHS_UserInit_reqDefaultTypeInternal() {}
  union {
    GHS_UserInit_req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GHS_UserInit_reqDefaultTypeInternal _GHS_UserInit_req_default_instance_;
constexpr GHS_UserLogout_ntf::GHS_UserLogout_ntf(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : utoken_(nullptr){}
struct GHS_UserLogout_ntfDefaultTypeInternal {
  constexpr GHS_UserLogout_ntfDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GHS_UserLogout_ntfDefaultTypeInternal() {}
  union {
    GHS_UserLogout_ntf _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GHS_UserLogout_ntfDefaultTypeInternal _GHS_UserLogout_ntf_default_instance_;
constexpr GHS_RoleDetail_ask::GHS_RoleDetail_ask(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : utoken_(nullptr){}
struct GHS_RoleDetail_askDefaultTypeInternal {
  constexpr GHS_RoleDetail_askDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GHS_RoleDetail_askDefaultTypeInternal() {}
  union {
    GHS_RoleDetail_ask _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GHS_RoleDetail_askDefaultTypeInternal _GHS_RoleDetail_ask_default_instance_;
}  // namespace PRO
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gatehome_5finternal_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gatehome_5finternal_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gatehome_5finternal_2eproto = nullptr;

const uint32_t TableStruct_gatehome_5finternal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserInit_req, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserInit_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserInit_req, utoken_),
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserInit_req, gateiid_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserLogout_ntf, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserLogout_ntf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_UserLogout_ntf, utoken_),
  0,
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_RoleDetail_ask, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_RoleDetail_ask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PRO::GHS_RoleDetail_ask, utoken_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::PRO::GHS_UserInit_req)},
  { 10, 17, -1, sizeof(::PRO::GHS_UserLogout_ntf)},
  { 18, 25, -1, sizeof(::PRO::GHS_RoleDetail_ask)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_GHS_UserInit_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_GHS_UserLogout_ntf_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PRO::_GHS_RoleDetail_ask_default_instance_),
};

const char descriptor_table_protodef_gatehome_5finternal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027gatehome_internal.proto\022\003PRO\032\025global_i"
  "nternal.proto\"S\n\020GHS_UserInit_req\022#\n\006uto"
  "ken\030\001 \001(\0132\016.PRO.UserTokenH\000\210\001\001\022\017\n\007gateii"
  "d\030\002 \001(\003B\t\n\007_utoken\"D\n\022GHS_UserLogout_ntf"
  "\022#\n\006utoken\030\001 \001(\0132\016.PRO.UserTokenH\000\210\001\001B\t\n"
  "\007_utoken\"D\n\022GHS_RoleDetail_ask\022#\n\006utoken"
  "\030\001 \001(\0132\016.PRO.UserTokenH\000\210\001\001B\t\n\007_utokenBT"
  "\n\033com.cms.client.network.gproP\001Z\025gamelib"
  "/protobuf/gpro\252\002\033com.cms.client.network."
  "gprob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gatehome_5finternal_2eproto_deps[1] = {
  &::descriptor_table_global_5finternal_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gatehome_5finternal_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gatehome_5finternal_2eproto = {
  false, false, 372, descriptor_table_protodef_gatehome_5finternal_2eproto, "gatehome_internal.proto", 
  &descriptor_table_gatehome_5finternal_2eproto_once, descriptor_table_gatehome_5finternal_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_gatehome_5finternal_2eproto::offsets,
  file_level_metadata_gatehome_5finternal_2eproto, file_level_enum_descriptors_gatehome_5finternal_2eproto, file_level_service_descriptors_gatehome_5finternal_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_gatehome_5finternal_2eproto_getter() {
  return &descriptor_table_gatehome_5finternal_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_gatehome_5finternal_2eproto(&descriptor_table_gatehome_5finternal_2eproto);
namespace PRO {

// ===================================================================

class GHS_UserInit_req::_Internal {
 public:
  using HasBits = decltype(std::declval<GHS_UserInit_req>()._has_bits_);
  static const ::PRO::UserToken& utoken(const GHS_UserInit_req* msg);
  static void set_has_utoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PRO::UserToken&
GHS_UserInit_req::_Internal::utoken(const GHS_UserInit_req* msg) {
  return *msg->utoken_;
}
void GHS_UserInit_req::clear_utoken() {
  if (utoken_ != nullptr) utoken_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GHS_UserInit_req::GHS_UserInit_req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.GHS_UserInit_req)
}
GHS_UserInit_req::GHS_UserInit_req(const GHS_UserInit_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_utoken()) {
    utoken_ = new ::PRO::UserToken(*from.utoken_);
  } else {
    utoken_ = nullptr;
  }
  gateiid_ = from.gateiid_;
  // @@protoc_insertion_point(copy_constructor:PRO.GHS_UserInit_req)
}

inline void GHS_UserInit_req::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&utoken_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gateiid_) -
    reinterpret_cast<char*>(&utoken_)) + sizeof(gateiid_));
}

GHS_UserInit_req::~GHS_UserInit_req() {
  // @@protoc_insertion_point(destructor:PRO.GHS_UserInit_req)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GHS_UserInit_req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete utoken_;
}

void GHS_UserInit_req::ArenaDtor(void* object) {
  GHS_UserInit_req* _this = reinterpret_cast< GHS_UserInit_req* >(object);
  (void)_this;
}
void GHS_UserInit_req::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GHS_UserInit_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GHS_UserInit_req::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.GHS_UserInit_req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(utoken_ != nullptr);
    utoken_->Clear();
  }
  gateiid_ = int64_t{0};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GHS_UserInit_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PRO.UserToken utoken = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_utoken(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 gateiid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          gateiid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GHS_UserInit_req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.GHS_UserInit_req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .PRO.UserToken utoken = 1;
  if (_internal_has_utoken()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::utoken(this), target, stream);
  }

  // int64 gateiid = 2;
  if (this->_internal_gateiid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_gateiid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.GHS_UserInit_req)
  return target;
}

size_t GHS_UserInit_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.GHS_UserInit_req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .PRO.UserToken utoken = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *utoken_);
  }

  // int64 gateiid = 2;
  if (this->_internal_gateiid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_gateiid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GHS_UserInit_req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GHS_UserInit_req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GHS_UserInit_req::GetClassData() const { return &_class_data_; }

void GHS_UserInit_req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GHS_UserInit_req *>(to)->MergeFrom(
      static_cast<const GHS_UserInit_req &>(from));
}


void GHS_UserInit_req::MergeFrom(const GHS_UserInit_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.GHS_UserInit_req)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_utoken()) {
    _internal_mutable_utoken()->::PRO::UserToken::MergeFrom(from._internal_utoken());
  }
  if (from._internal_gateiid() != 0) {
    _internal_set_gateiid(from._internal_gateiid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GHS_UserInit_req::CopyFrom(const GHS_UserInit_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.GHS_UserInit_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GHS_UserInit_req::IsInitialized() const {
  return true;
}

void GHS_UserInit_req::InternalSwap(GHS_UserInit_req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GHS_UserInit_req, gateiid_)
      + sizeof(GHS_UserInit_req::gateiid_)
      - PROTOBUF_FIELD_OFFSET(GHS_UserInit_req, utoken_)>(
          reinterpret_cast<char*>(&utoken_),
          reinterpret_cast<char*>(&other->utoken_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GHS_UserInit_req::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gatehome_5finternal_2eproto_getter, &descriptor_table_gatehome_5finternal_2eproto_once,
      file_level_metadata_gatehome_5finternal_2eproto[0]);
}

// ===================================================================

class GHS_UserLogout_ntf::_Internal {
 public:
  using HasBits = decltype(std::declval<GHS_UserLogout_ntf>()._has_bits_);
  static const ::PRO::UserToken& utoken(const GHS_UserLogout_ntf* msg);
  static void set_has_utoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PRO::UserToken&
GHS_UserLogout_ntf::_Internal::utoken(const GHS_UserLogout_ntf* msg) {
  return *msg->utoken_;
}
void GHS_UserLogout_ntf::clear_utoken() {
  if (utoken_ != nullptr) utoken_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GHS_UserLogout_ntf::GHS_UserLogout_ntf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.GHS_UserLogout_ntf)
}
GHS_UserLogout_ntf::GHS_UserLogout_ntf(const GHS_UserLogout_ntf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_utoken()) {
    utoken_ = new ::PRO::UserToken(*from.utoken_);
  } else {
    utoken_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PRO.GHS_UserLogout_ntf)
}

inline void GHS_UserLogout_ntf::SharedCtor() {
utoken_ = nullptr;
}

GHS_UserLogout_ntf::~GHS_UserLogout_ntf() {
  // @@protoc_insertion_point(destructor:PRO.GHS_UserLogout_ntf)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GHS_UserLogout_ntf::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete utoken_;
}

void GHS_UserLogout_ntf::ArenaDtor(void* object) {
  GHS_UserLogout_ntf* _this = reinterpret_cast< GHS_UserLogout_ntf* >(object);
  (void)_this;
}
void GHS_UserLogout_ntf::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GHS_UserLogout_ntf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GHS_UserLogout_ntf::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.GHS_UserLogout_ntf)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(utoken_ != nullptr);
    utoken_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GHS_UserLogout_ntf::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PRO.UserToken utoken = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_utoken(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GHS_UserLogout_ntf::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.GHS_UserLogout_ntf)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .PRO.UserToken utoken = 1;
  if (_internal_has_utoken()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::utoken(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.GHS_UserLogout_ntf)
  return target;
}

size_t GHS_UserLogout_ntf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.GHS_UserLogout_ntf)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .PRO.UserToken utoken = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *utoken_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GHS_UserLogout_ntf::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GHS_UserLogout_ntf::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GHS_UserLogout_ntf::GetClassData() const { return &_class_data_; }

void GHS_UserLogout_ntf::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GHS_UserLogout_ntf *>(to)->MergeFrom(
      static_cast<const GHS_UserLogout_ntf &>(from));
}


void GHS_UserLogout_ntf::MergeFrom(const GHS_UserLogout_ntf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.GHS_UserLogout_ntf)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_utoken()) {
    _internal_mutable_utoken()->::PRO::UserToken::MergeFrom(from._internal_utoken());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GHS_UserLogout_ntf::CopyFrom(const GHS_UserLogout_ntf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.GHS_UserLogout_ntf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GHS_UserLogout_ntf::IsInitialized() const {
  return true;
}

void GHS_UserLogout_ntf::InternalSwap(GHS_UserLogout_ntf* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(utoken_, other->utoken_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GHS_UserLogout_ntf::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gatehome_5finternal_2eproto_getter, &descriptor_table_gatehome_5finternal_2eproto_once,
      file_level_metadata_gatehome_5finternal_2eproto[1]);
}

// ===================================================================

class GHS_RoleDetail_ask::_Internal {
 public:
  using HasBits = decltype(std::declval<GHS_RoleDetail_ask>()._has_bits_);
  static const ::PRO::UserToken& utoken(const GHS_RoleDetail_ask* msg);
  static void set_has_utoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::PRO::UserToken&
GHS_RoleDetail_ask::_Internal::utoken(const GHS_RoleDetail_ask* msg) {
  return *msg->utoken_;
}
void GHS_RoleDetail_ask::clear_utoken() {
  if (utoken_ != nullptr) utoken_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
GHS_RoleDetail_ask::GHS_RoleDetail_ask(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PRO.GHS_RoleDetail_ask)
}
GHS_RoleDetail_ask::GHS_RoleDetail_ask(const GHS_RoleDetail_ask& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_utoken()) {
    utoken_ = new ::PRO::UserToken(*from.utoken_);
  } else {
    utoken_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PRO.GHS_RoleDetail_ask)
}

inline void GHS_RoleDetail_ask::SharedCtor() {
utoken_ = nullptr;
}

GHS_RoleDetail_ask::~GHS_RoleDetail_ask() {
  // @@protoc_insertion_point(destructor:PRO.GHS_RoleDetail_ask)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GHS_RoleDetail_ask::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete utoken_;
}

void GHS_RoleDetail_ask::ArenaDtor(void* object) {
  GHS_RoleDetail_ask* _this = reinterpret_cast< GHS_RoleDetail_ask* >(object);
  (void)_this;
}
void GHS_RoleDetail_ask::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GHS_RoleDetail_ask::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GHS_RoleDetail_ask::Clear() {
// @@protoc_insertion_point(message_clear_start:PRO.GHS_RoleDetail_ask)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(utoken_ != nullptr);
    utoken_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GHS_RoleDetail_ask::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .PRO.UserToken utoken = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_utoken(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GHS_RoleDetail_ask::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PRO.GHS_RoleDetail_ask)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .PRO.UserToken utoken = 1;
  if (_internal_has_utoken()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::utoken(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRO.GHS_RoleDetail_ask)
  return target;
}

size_t GHS_RoleDetail_ask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRO.GHS_RoleDetail_ask)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .PRO.UserToken utoken = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *utoken_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GHS_RoleDetail_ask::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GHS_RoleDetail_ask::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GHS_RoleDetail_ask::GetClassData() const { return &_class_data_; }

void GHS_RoleDetail_ask::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GHS_RoleDetail_ask *>(to)->MergeFrom(
      static_cast<const GHS_RoleDetail_ask &>(from));
}


void GHS_RoleDetail_ask::MergeFrom(const GHS_RoleDetail_ask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRO.GHS_RoleDetail_ask)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_utoken()) {
    _internal_mutable_utoken()->::PRO::UserToken::MergeFrom(from._internal_utoken());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GHS_RoleDetail_ask::CopyFrom(const GHS_RoleDetail_ask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRO.GHS_RoleDetail_ask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GHS_RoleDetail_ask::IsInitialized() const {
  return true;
}

void GHS_RoleDetail_ask::InternalSwap(GHS_RoleDetail_ask* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(utoken_, other->utoken_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GHS_RoleDetail_ask::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_gatehome_5finternal_2eproto_getter, &descriptor_table_gatehome_5finternal_2eproto_once,
      file_level_metadata_gatehome_5finternal_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace PRO
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PRO::GHS_UserInit_req* Arena::CreateMaybeMessage< ::PRO::GHS_UserInit_req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::GHS_UserInit_req >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::GHS_UserLogout_ntf* Arena::CreateMaybeMessage< ::PRO::GHS_UserLogout_ntf >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::GHS_UserLogout_ntf >(arena);
}
template<> PROTOBUF_NOINLINE ::PRO::GHS_RoleDetail_ask* Arena::CreateMaybeMessage< ::PRO::GHS_RoleDetail_ask >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PRO::GHS_RoleDetail_ask >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
