syntax = "proto3";

import "global_internal.proto";

package PRO;

//option optimize_for = LITE_RUNTIME;
option go_package = "gamelib/protobuf/gpro";
option csharp_namespace = "com.cms.client.network.gpro";
option java_multiple_files = true;
option java_package = "com.cms.client.network.gpro";

message Frd_FriendList_req {
  optional UserToken utoken = 1;
  //最大的一个invite的iid，会获取新的邀请
  int64 last_invite = 2;
  //根据活跃度排行的索引 0开始
  int32 friendindex = 3;
  //true 小到大 获取下一批好友信息, false 大到小获取
  bool next = 4;
  //每批的长度，不超过20
  int32 num = 5;
  //附加的用户信息，可能有其他扩展
  string nickname = 10;
}

message Frd_FriendList_ack {
  optional UserToken utoken = 1;
  //iid从小到大
  repeated FriendInviteItem invites = 2;
  int32 totleinvite = 3;
  repeated FriendRelation friends = 4;
  int32 totlefriend = 5;
  bool next = 6;
}

message Frd_FriendInvite_req {
  optional UserToken utoken = 1;
  //被邀请人
  int64 invite_iid = 2;
}

message Frd_FriendInvite_ack {
  optional UserToken utoken = 1;
  //被邀请人
  int64 invite_iid = 2;
  //0 成功 1 system error 2 already friend 3 invite not exist
  int32 result = 3;
  //成功包含invite信息
  optional FriendInviteItem invite = 4;
}

message Frd_InviteConfirm_req {
  optional UserToken utoken = 1;
  //invite的编号
  int64 iid = 2;
  //true 同意 false 拒绝
  bool agree = 3;
}

message Frd_InviteConfirm_ack {
  optional UserToken utoken = 1;
  //invite的编号
  int64 iid = 2;
  //true 同意 false 拒绝
  bool agree = 3;
  //0 ok 1 system error 2 invite no exist
  int32 result = 4;
  //成功 并且同意 返回好友关系
  optional FriendRelation friend = 5;
}

message Frd_FriendDelete_req {
  optional UserToken utoken = 1;
  //好友
  int64 friendiid = 2;
}

message Frd_FriendDelete_ack {
  optional UserToken utoken = 1;
  //好友
  int64 friendiid = 2;
  //0 success 1 system err 2: friend not exist
  int32 result = 3;
}

