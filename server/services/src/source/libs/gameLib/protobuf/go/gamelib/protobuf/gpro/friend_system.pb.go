// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: friend_system.proto

package gpro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Frd_FriendListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//最大的一个invite的iid，会获取新的邀请
	LastInvite int64 `protobuf:"varint,2,opt,name=last_invite,json=lastInvite,proto3" json:"last_invite,omitempty"`
	//根据活跃度排行的索引 0开始
	Friendindex int32 `protobuf:"varint,3,opt,name=friendindex,proto3" json:"friendindex,omitempty"`
	//true 小到大 获取下一批好友信息, false 大到小获取
	Next bool `protobuf:"varint,4,opt,name=next,proto3" json:"next,omitempty"`
	//每批的长度，不超过20
	Num int32 `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	//附加的用户信息，可能有其他扩展
	Nickname string `protobuf:"bytes,10,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *Frd_FriendListReq) Reset() {
	*x = Frd_FriendListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_FriendListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_FriendListReq) ProtoMessage() {}

func (x *Frd_FriendListReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_FriendListReq.ProtoReflect.Descriptor instead.
func (*Frd_FriendListReq) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{0}
}

func (x *Frd_FriendListReq) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_FriendListReq) GetLastInvite() int64 {
	if x != nil {
		return x.LastInvite
	}
	return 0
}

func (x *Frd_FriendListReq) GetFriendindex() int32 {
	if x != nil {
		return x.Friendindex
	}
	return 0
}

func (x *Frd_FriendListReq) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *Frd_FriendListReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Frd_FriendListReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type Frd_FriendListAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//iid从小到大
	Invites     []*FriendInviteItem `protobuf:"bytes,2,rep,name=invites,proto3" json:"invites,omitempty"`
	Totleinvite int32               `protobuf:"varint,3,opt,name=totleinvite,proto3" json:"totleinvite,omitempty"`
	Friends     []*FriendRelation   `protobuf:"bytes,4,rep,name=friends,proto3" json:"friends,omitempty"`
	Totlefriend int32               `protobuf:"varint,5,opt,name=totlefriend,proto3" json:"totlefriend,omitempty"`
	Next        bool                `protobuf:"varint,6,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *Frd_FriendListAck) Reset() {
	*x = Frd_FriendListAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_FriendListAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_FriendListAck) ProtoMessage() {}

func (x *Frd_FriendListAck) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_FriendListAck.ProtoReflect.Descriptor instead.
func (*Frd_FriendListAck) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{1}
}

func (x *Frd_FriendListAck) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_FriendListAck) GetInvites() []*FriendInviteItem {
	if x != nil {
		return x.Invites
	}
	return nil
}

func (x *Frd_FriendListAck) GetTotleinvite() int32 {
	if x != nil {
		return x.Totleinvite
	}
	return 0
}

func (x *Frd_FriendListAck) GetFriends() []*FriendRelation {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *Frd_FriendListAck) GetTotlefriend() int32 {
	if x != nil {
		return x.Totlefriend
	}
	return 0
}

func (x *Frd_FriendListAck) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type Frd_FriendInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//被邀请人
	InviteIid int64 `protobuf:"varint,2,opt,name=invite_iid,json=inviteIid,proto3" json:"invite_iid,omitempty"`
}

func (x *Frd_FriendInviteReq) Reset() {
	*x = Frd_FriendInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_FriendInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_FriendInviteReq) ProtoMessage() {}

func (x *Frd_FriendInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_FriendInviteReq.ProtoReflect.Descriptor instead.
func (*Frd_FriendInviteReq) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{2}
}

func (x *Frd_FriendInviteReq) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_FriendInviteReq) GetInviteIid() int64 {
	if x != nil {
		return x.InviteIid
	}
	return 0
}

type Frd_FriendInviteAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//被邀请人
	InviteIid int64 `protobuf:"varint,2,opt,name=invite_iid,json=inviteIid,proto3" json:"invite_iid,omitempty"`
	//0 成功 1 system error 2 already friend 3 invite not exist
	Result int32 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	//成功包含invite信息
	Invite *FriendInviteItem `protobuf:"bytes,4,opt,name=invite,proto3,oneof" json:"invite,omitempty"`
}

func (x *Frd_FriendInviteAck) Reset() {
	*x = Frd_FriendInviteAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_FriendInviteAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_FriendInviteAck) ProtoMessage() {}

func (x *Frd_FriendInviteAck) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_FriendInviteAck.ProtoReflect.Descriptor instead.
func (*Frd_FriendInviteAck) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{3}
}

func (x *Frd_FriendInviteAck) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_FriendInviteAck) GetInviteIid() int64 {
	if x != nil {
		return x.InviteIid
	}
	return 0
}

func (x *Frd_FriendInviteAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Frd_FriendInviteAck) GetInvite() *FriendInviteItem {
	if x != nil {
		return x.Invite
	}
	return nil
}

type Frd_InviteConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//invite的编号
	Iid int64 `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	//true 同意 false 拒绝
	Agree bool `protobuf:"varint,3,opt,name=agree,proto3" json:"agree,omitempty"`
}

func (x *Frd_InviteConfirmReq) Reset() {
	*x = Frd_InviteConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_InviteConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_InviteConfirmReq) ProtoMessage() {}

func (x *Frd_InviteConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_InviteConfirmReq.ProtoReflect.Descriptor instead.
func (*Frd_InviteConfirmReq) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{4}
}

func (x *Frd_InviteConfirmReq) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_InviteConfirmReq) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *Frd_InviteConfirmReq) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

type Frd_InviteConfirmAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//invite的编号
	Iid int64 `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
	//true 同意 false 拒绝
	Agree bool `protobuf:"varint,3,opt,name=agree,proto3" json:"agree,omitempty"`
	//0 ok 1 system error 2 invite no exist
	Result int32 `protobuf:"varint,4,opt,name=result,proto3" json:"result,omitempty"`
	//成功 并且同意 返回好友关系
	Friend *FriendRelation `protobuf:"bytes,5,opt,name=friend,proto3,oneof" json:"friend,omitempty"`
}

func (x *Frd_InviteConfirmAck) Reset() {
	*x = Frd_InviteConfirmAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_InviteConfirmAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_InviteConfirmAck) ProtoMessage() {}

func (x *Frd_InviteConfirmAck) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_InviteConfirmAck.ProtoReflect.Descriptor instead.
func (*Frd_InviteConfirmAck) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{5}
}

func (x *Frd_InviteConfirmAck) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_InviteConfirmAck) GetIid() int64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

func (x *Frd_InviteConfirmAck) GetAgree() bool {
	if x != nil {
		return x.Agree
	}
	return false
}

func (x *Frd_InviteConfirmAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Frd_InviteConfirmAck) GetFriend() *FriendRelation {
	if x != nil {
		return x.Friend
	}
	return nil
}

type Frd_FriendDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//好友
	Friendiid int64 `protobuf:"varint,2,opt,name=friendiid,proto3" json:"friendiid,omitempty"`
}

func (x *Frd_FriendDeleteReq) Reset() {
	*x = Frd_FriendDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_FriendDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_FriendDeleteReq) ProtoMessage() {}

func (x *Frd_FriendDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_FriendDeleteReq.ProtoReflect.Descriptor instead.
func (*Frd_FriendDeleteReq) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{6}
}

func (x *Frd_FriendDeleteReq) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_FriendDeleteReq) GetFriendiid() int64 {
	if x != nil {
		return x.Friendiid
	}
	return 0
}

type Frd_FriendDeleteAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//好友
	Friendiid int64 `protobuf:"varint,2,opt,name=friendiid,proto3" json:"friendiid,omitempty"`
	//0 success 1 system err 2: friend not exist
	Result int32 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Frd_FriendDeleteAck) Reset() {
	*x = Frd_FriendDeleteAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_friend_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frd_FriendDeleteAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frd_FriendDeleteAck) ProtoMessage() {}

func (x *Frd_FriendDeleteAck) ProtoReflect() protoreflect.Message {
	mi := &file_friend_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frd_FriendDeleteAck.ProtoReflect.Descriptor instead.
func (*Frd_FriendDeleteAck) Descriptor() ([]byte, []int) {
	return file_friend_system_proto_rawDescGZIP(), []int{7}
}

func (x *Frd_FriendDeleteAck) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Frd_FriendDeleteAck) GetFriendiid() int64 {
	if x != nil {
		return x.Friendiid
	}
	return 0
}

func (x *Frd_FriendDeleteAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_friend_system_proto protoreflect.FileDescriptor

var file_friend_system_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x50, 0x52, 0x4f, 0x1a, 0x15, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x46, 0x72, 0x64, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x02, 0x0a, 0x12, 0x46, 0x72, 0x64, 0x5f, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x06,
	0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50,
	0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x52, 0x4f,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x6c, 0x65, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x6c, 0x65, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x07,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x50, 0x52, 0x4f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x6c, 0x65, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x6c, 0x65, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x14,
	0x46, 0x72, 0x64, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x69, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x14,
	0x46, 0x72, 0x64, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48,
	0x01, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x46, 0x72, 0x64, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x06, 0x75,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52,
	0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x15,
	0x46, 0x72, 0x64, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x6c, 0x0a, 0x14, 0x46, 0x72,
	0x64, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x69, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x46, 0x72, 0x64,
	0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x63,
	0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x54, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x50, 0x01,
	0x5a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0xaa, 0x02, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_friend_system_proto_rawDescOnce sync.Once
	file_friend_system_proto_rawDescData = file_friend_system_proto_rawDesc
)

func file_friend_system_proto_rawDescGZIP() []byte {
	file_friend_system_proto_rawDescOnce.Do(func() {
		file_friend_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_friend_system_proto_rawDescData)
	})
	return file_friend_system_proto_rawDescData
}

var file_friend_system_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_friend_system_proto_goTypes = []interface{}{
	(*Frd_FriendListReq)(nil),    // 0: PRO.Frd_FriendList_req
	(*Frd_FriendListAck)(nil),    // 1: PRO.Frd_FriendList_ack
	(*Frd_FriendInviteReq)(nil),  // 2: PRO.Frd_FriendInvite_req
	(*Frd_FriendInviteAck)(nil),  // 3: PRO.Frd_FriendInvite_ack
	(*Frd_InviteConfirmReq)(nil), // 4: PRO.Frd_InviteConfirm_req
	(*Frd_InviteConfirmAck)(nil), // 5: PRO.Frd_InviteConfirm_ack
	(*Frd_FriendDeleteReq)(nil),  // 6: PRO.Frd_FriendDelete_req
	(*Frd_FriendDeleteAck)(nil),  // 7: PRO.Frd_FriendDelete_ack
	(*UserToken)(nil),            // 8: PRO.UserToken
	(*FriendInviteItem)(nil),     // 9: PRO.FriendInviteItem
	(*FriendRelation)(nil),       // 10: PRO.FriendRelation
}
var file_friend_system_proto_depIdxs = []int32{
	8,  // 0: PRO.Frd_FriendList_req.utoken:type_name -> PRO.UserToken
	8,  // 1: PRO.Frd_FriendList_ack.utoken:type_name -> PRO.UserToken
	9,  // 2: PRO.Frd_FriendList_ack.invites:type_name -> PRO.FriendInviteItem
	10, // 3: PRO.Frd_FriendList_ack.friends:type_name -> PRO.FriendRelation
	8,  // 4: PRO.Frd_FriendInvite_req.utoken:type_name -> PRO.UserToken
	8,  // 5: PRO.Frd_FriendInvite_ack.utoken:type_name -> PRO.UserToken
	9,  // 6: PRO.Frd_FriendInvite_ack.invite:type_name -> PRO.FriendInviteItem
	8,  // 7: PRO.Frd_InviteConfirm_req.utoken:type_name -> PRO.UserToken
	8,  // 8: PRO.Frd_InviteConfirm_ack.utoken:type_name -> PRO.UserToken
	10, // 9: PRO.Frd_InviteConfirm_ack.friend:type_name -> PRO.FriendRelation
	8,  // 10: PRO.Frd_FriendDelete_req.utoken:type_name -> PRO.UserToken
	8,  // 11: PRO.Frd_FriendDelete_ack.utoken:type_name -> PRO.UserToken
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_friend_system_proto_init() }
func file_friend_system_proto_init() {
	if File_friend_system_proto != nil {
		return
	}
	file_global_internal_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_friend_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_FriendListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_FriendListAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_FriendInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_FriendInviteAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_InviteConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_InviteConfirmAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_FriendDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_friend_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frd_FriendDeleteAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_friend_system_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_friend_system_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_friend_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_friend_system_proto_goTypes,
		DependencyIndexes: file_friend_system_proto_depIdxs,
		MessageInfos:      file_friend_system_proto_msgTypes,
	}.Build()
	File_friend_system_proto = out.File
	file_friend_system_proto_rawDesc = nil
	file_friend_system_proto_goTypes = nil
	file_friend_system_proto_depIdxs = nil
}
