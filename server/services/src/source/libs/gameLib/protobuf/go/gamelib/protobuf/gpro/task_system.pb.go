// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: task_system.proto

package gpro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TASK_TRIGGER_TYPE int32

const (
	TASK_TRIGGER_TYPE_TT_BEGIN TASK_TRIGGER_TYPE = 0
	//时间间隔
	TASK_TRIGGER_TYPE_TT_TRIGGER_TIMER TASK_TRIGGER_TYPE = 1
	//角色信息
	TASK_TRIGGER_TYPE_TT_ROLEINFO_CHANGE TASK_TRIGGER_TYPE = 2
	//背包变化
	TASK_TRIGGER_TYPE_TT_BAG_CHANGE TASK_TRIGGER_TYPE = 4
	//建筑变化
	TASK_TRIGGER_TYPE_TT_BUILDING_CHANGE TASK_TRIGGER_TYPE = 8
	TASK_TRIGGER_TYPE_TT_MAX             TASK_TRIGGER_TYPE = 9
)

// Enum value maps for TASK_TRIGGER_TYPE.
var (
	TASK_TRIGGER_TYPE_name = map[int32]string{
		0: "TT_BEGIN",
		1: "TT_TRIGGER_TIMER",
		2: "TT_ROLEINFO_CHANGE",
		4: "TT_BAG_CHANGE",
		8: "TT_BUILDING_CHANGE",
		9: "TT_MAX",
	}
	TASK_TRIGGER_TYPE_value = map[string]int32{
		"TT_BEGIN":           0,
		"TT_TRIGGER_TIMER":   1,
		"TT_ROLEINFO_CHANGE": 2,
		"TT_BAG_CHANGE":      4,
		"TT_BUILDING_CHANGE": 8,
		"TT_MAX":             9,
	}
)

func (x TASK_TRIGGER_TYPE) Enum() *TASK_TRIGGER_TYPE {
	p := new(TASK_TRIGGER_TYPE)
	*p = x
	return p
}

func (x TASK_TRIGGER_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASK_TRIGGER_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_task_system_proto_enumTypes[0].Descriptor()
}

func (TASK_TRIGGER_TYPE) Type() protoreflect.EnumType {
	return &file_task_system_proto_enumTypes[0]
}

func (x TASK_TRIGGER_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASK_TRIGGER_TYPE.Descriptor instead.
func (TASK_TRIGGER_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{0}
}

type TASK_GROUP_STATE int32

const (
	TASK_GROUP_STATE_TASKGROUP_ACCEPT TASK_GROUP_STATE = 0
	TASK_GROUP_STATE_TASKGROUP_FINISH TASK_GROUP_STATE = 1
	TASK_GROUP_STATE_TASKGROUP_GIVEUP TASK_GROUP_STATE = 2
)

// Enum value maps for TASK_GROUP_STATE.
var (
	TASK_GROUP_STATE_name = map[int32]string{
		0: "TASKGROUP_ACCEPT",
		1: "TASKGROUP_FINISH",
		2: "TASKGROUP_GIVEUP",
	}
	TASK_GROUP_STATE_value = map[string]int32{
		"TASKGROUP_ACCEPT": 0,
		"TASKGROUP_FINISH": 1,
		"TASKGROUP_GIVEUP": 2,
	}
)

func (x TASK_GROUP_STATE) Enum() *TASK_GROUP_STATE {
	p := new(TASK_GROUP_STATE)
	*p = x
	return p
}

func (x TASK_GROUP_STATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASK_GROUP_STATE) Descriptor() protoreflect.EnumDescriptor {
	return file_task_system_proto_enumTypes[1].Descriptor()
}

func (TASK_GROUP_STATE) Type() protoreflect.EnumType {
	return &file_task_system_proto_enumTypes[1]
}

func (x TASK_GROUP_STATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASK_GROUP_STATE.Descriptor instead.
func (TASK_GROUP_STATE) EnumDescriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{1}
}

type TASK_STATE int32

const (
	TASK_STATE_TASKSTATE_ACCEPT   TASK_STATE = 0
	TASK_STATE_TASKSTATE_WAIT     TASK_STATE = -1
	TASK_STATE_TASKSTATE_REACCEPT TASK_STATE = 1
	TASK_STATE_TASKSTATE_SUBMIT   TASK_STATE = 2
	TASK_STATE_TASKSTATE_FAILED   TASK_STATE = 3
	TASK_STATE_TASKSTATE_GIVEUP   TASK_STATE = 4
	TASK_STATE_TASKSTATE_FINISH   TASK_STATE = 5
)

// Enum value maps for TASK_STATE.
var (
	TASK_STATE_name = map[int32]string{
		0:  "TASKSTATE_ACCEPT",
		-1: "TASKSTATE_WAIT",
		1:  "TASKSTATE_REACCEPT",
		2:  "TASKSTATE_SUBMIT",
		3:  "TASKSTATE_FAILED",
		4:  "TASKSTATE_GIVEUP",
		5:  "TASKSTATE_FINISH",
	}
	TASK_STATE_value = map[string]int32{
		"TASKSTATE_ACCEPT":   0,
		"TASKSTATE_WAIT":     -1,
		"TASKSTATE_REACCEPT": 1,
		"TASKSTATE_SUBMIT":   2,
		"TASKSTATE_FAILED":   3,
		"TASKSTATE_GIVEUP":   4,
		"TASKSTATE_FINISH":   5,
	}
)

func (x TASK_STATE) Enum() *TASK_STATE {
	p := new(TASK_STATE)
	*p = x
	return p
}

func (x TASK_STATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASK_STATE) Descriptor() protoreflect.EnumDescriptor {
	return file_task_system_proto_enumTypes[2].Descriptor()
}

func (TASK_STATE) Type() protoreflect.EnumType {
	return &file_task_system_proto_enumTypes[2]
}

func (x TASK_STATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASK_STATE.Descriptor instead.
func (TASK_STATE) EnumDescriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{2}
}

//任务奖励类型
type TASKREWARD_TYPE int32

const (
	TASKREWARD_TYPE_TASKREWARDT_BAGITEM TASKREWARD_TYPE = 0
	TASKREWARD_TYPE_TASKREWARDT_EXP     TASKREWARD_TYPE = -1
)

// Enum value maps for TASKREWARD_TYPE.
var (
	TASKREWARD_TYPE_name = map[int32]string{
		0:  "TASKREWARDT_BAGITEM",
		-1: "TASKREWARDT_EXP",
	}
	TASKREWARD_TYPE_value = map[string]int32{
		"TASKREWARDT_BAGITEM": 0,
		"TASKREWARDT_EXP":     -1,
	}
)

func (x TASKREWARD_TYPE) Enum() *TASKREWARD_TYPE {
	p := new(TASKREWARD_TYPE)
	*p = x
	return p
}

func (x TASKREWARD_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASKREWARD_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_task_system_proto_enumTypes[3].Descriptor()
}

func (TASKREWARD_TYPE) Type() protoreflect.EnumType {
	return &file_task_system_proto_enumTypes[3]
}

func (x TASKREWARD_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASKREWARD_TYPE.Descriptor instead.
func (TASKREWARD_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{3}
}

type TaskRewardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    TASKREWARD_TYPE `protobuf:"varint,1,opt,name=type,proto3,enum=PRO.TASKREWARD_TYPE" json:"type,omitempty"`
	ItemIid int32           `protobuf:"varint,2,opt,name=item_iid,json=itemIid,proto3" json:"item_iid,omitempty"`
	Nums    int32           `protobuf:"varint,3,opt,name=nums,proto3" json:"nums,omitempty"`
}

func (x *TaskRewardItem) Reset() {
	*x = TaskRewardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRewardItem) ProtoMessage() {}

func (x *TaskRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRewardItem.ProtoReflect.Descriptor instead.
func (*TaskRewardItem) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{0}
}

func (x *TaskRewardItem) GetType() TASKREWARD_TYPE {
	if x != nil {
		return x.Type
	}
	return TASKREWARD_TYPE_TASKREWARDT_BAGITEM
}

func (x *TaskRewardItem) GetItemIid() int32 {
	if x != nil {
		return x.ItemIid
	}
	return 0
}

func (x *TaskRewardItem) GetNums() int32 {
	if x != nil {
		return x.Nums
	}
	return 0
}

type TaskRewardItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*TaskRewardItem `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *TaskRewardItems) Reset() {
	*x = TaskRewardItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRewardItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRewardItems) ProtoMessage() {}

func (x *TaskRewardItems) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRewardItems.ProtoReflect.Descriptor instead.
func (*TaskRewardItems) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{1}
}

func (x *TaskRewardItems) GetRewards() []*TaskRewardItem {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type Task_WaitListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Task_WaitListReq) Reset() {
	*x = Task_WaitListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_WaitListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_WaitListReq) ProtoMessage() {}

func (x *Task_WaitListReq) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_WaitListReq.ProtoReflect.Descriptor instead.
func (*Task_WaitListReq) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{2}
}

type Task_WaitListAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIids []int32 `protobuf:"varint,1,rep,packed,name=task_iids,json=taskIids,proto3" json:"task_iids,omitempty"`
}

func (x *Task_WaitListAck) Reset() {
	*x = Task_WaitListAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_WaitListAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_WaitListAck) ProtoMessage() {}

func (x *Task_WaitListAck) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_WaitListAck.ProtoReflect.Descriptor instead.
func (*Task_WaitListAck) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{3}
}

func (x *Task_WaitListAck) GetTaskIids() []int32 {
	if x != nil {
		return x.TaskIids
	}
	return nil
}

type Task_MyTaskListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Task_MyTaskListReq) Reset() {
	*x = Task_MyTaskListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_MyTaskListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_MyTaskListReq) ProtoMessage() {}

func (x *Task_MyTaskListReq) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_MyTaskListReq.ProtoReflect.Descriptor instead.
func (*Task_MyTaskListReq) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{4}
}

type Task_MyTaskListAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups *DBUserTaskGroups `protobuf:"bytes,1,opt,name=groups,proto3" json:"groups,omitempty"`
	Tasks  *DBUserTasks      `protobuf:"bytes,2,opt,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *Task_MyTaskListAck) Reset() {
	*x = Task_MyTaskListAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_MyTaskListAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_MyTaskListAck) ProtoMessage() {}

func (x *Task_MyTaskListAck) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_MyTaskListAck.ProtoReflect.Descriptor instead.
func (*Task_MyTaskListAck) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{5}
}

func (x *Task_MyTaskListAck) GetGroups() *DBUserTaskGroups {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Task_MyTaskListAck) GetTasks() *DBUserTasks {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Task_GetTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//任务iid
	TaskIid int32 `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
}

func (x *Task_GetTaskReq) Reset() {
	*x = Task_GetTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_GetTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_GetTaskReq) ProtoMessage() {}

func (x *Task_GetTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_GetTaskReq.ProtoReflect.Descriptor instead.
func (*Task_GetTaskReq) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{6}
}

func (x *Task_GetTaskReq) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

type Task_GetTaskAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIid int32 `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
	//0:success 1:failed
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	//result = 0,包含任务信息
	Task *DBUserTaskItem `protobuf:"bytes,3,opt,name=task,proto3,oneof" json:"task,omitempty"`
}

func (x *Task_GetTaskAck) Reset() {
	*x = Task_GetTaskAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_GetTaskAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_GetTaskAck) ProtoMessage() {}

func (x *Task_GetTaskAck) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_GetTaskAck.ProtoReflect.Descriptor instead.
func (*Task_GetTaskAck) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{7}
}

func (x *Task_GetTaskAck) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

func (x *Task_GetTaskAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Task_GetTaskAck) GetTask() *DBUserTaskItem {
	if x != nil {
		return x.Task
	}
	return nil
}

type Task_SubmitTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//任务iid
	TaskIid int32 `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
}

func (x *Task_SubmitTaskReq) Reset() {
	*x = Task_SubmitTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_SubmitTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_SubmitTaskReq) ProtoMessage() {}

func (x *Task_SubmitTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_SubmitTaskReq.ProtoReflect.Descriptor instead.
func (*Task_SubmitTaskReq) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{8}
}

func (x *Task_SubmitTaskReq) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

type Task_SubmitTaskAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIid int32 `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
	//0:success 1:task not exist 2:system error 3:condition error
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Task_SubmitTaskAck) Reset() {
	*x = Task_SubmitTaskAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_SubmitTaskAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_SubmitTaskAck) ProtoMessage() {}

func (x *Task_SubmitTaskAck) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_SubmitTaskAck.ProtoReflect.Descriptor instead.
func (*Task_SubmitTaskAck) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{9}
}

func (x *Task_SubmitTaskAck) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

func (x *Task_SubmitTaskAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type Task_ObtainRewardNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIid int32            `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
	Reward  *TaskRewardItems `protobuf:"bytes,2,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *Task_ObtainRewardNtf) Reset() {
	*x = Task_ObtainRewardNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_ObtainRewardNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_ObtainRewardNtf) ProtoMessage() {}

func (x *Task_ObtainRewardNtf) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_ObtainRewardNtf.ProtoReflect.Descriptor instead.
func (*Task_ObtainRewardNtf) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{10}
}

func (x *Task_ObtainRewardNtf) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

func (x *Task_ObtainRewardNtf) GetReward() *TaskRewardItems {
	if x != nil {
		return x.Reward
	}
	return nil
}

type Task_GiveupTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//放弃的任务iid
	TaskIid int32 `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
}

func (x *Task_GiveupTaskReq) Reset() {
	*x = Task_GiveupTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_GiveupTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_GiveupTaskReq) ProtoMessage() {}

func (x *Task_GiveupTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_GiveupTaskReq.ProtoReflect.Descriptor instead.
func (*Task_GiveupTaskReq) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{11}
}

func (x *Task_GiveupTaskReq) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

type Task_GiveupTaskAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIid int32 `protobuf:"varint,1,opt,name=task_iid,json=taskIid,proto3" json:"task_iid,omitempty"`
	//0:success
	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	//result = 0,包含任务信息
	Task *DBUserTaskItem `protobuf:"bytes,3,opt,name=task,proto3,oneof" json:"task,omitempty"`
}

func (x *Task_GiveupTaskAck) Reset() {
	*x = Task_GiveupTaskAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_system_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_GiveupTaskAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_GiveupTaskAck) ProtoMessage() {}

func (x *Task_GiveupTaskAck) ProtoReflect() protoreflect.Message {
	mi := &file_task_system_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_GiveupTaskAck.ProtoReflect.Descriptor instead.
func (*Task_GiveupTaskAck) Descriptor() ([]byte, []int) {
	return file_task_system_proto_rawDescGZIP(), []int{12}
}

func (x *Task_GiveupTaskAck) GetTaskIid() int32 {
	if x != nil {
		return x.TaskIid
	}
	return 0
}

func (x *Task_GiveupTaskAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Task_GiveupTaskAck) GetTask() *DBUserTaskItem {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_task_system_proto protoreflect.FileDescriptor

var file_task_system_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x50, 0x52, 0x4f, 0x1a, 0x11, 0x64, 0x62, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x0e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x50, 0x52,
	0x4f, 0x2e, 0x54, 0x41, 0x53, 0x4b, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x52, 0x4f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b,
	0x5f, 0x57, 0x61, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x22, 0x30, 0x0a,
	0x11, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x57, 0x61, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x61,
	0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x69, 0x64, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x4d, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x22, 0x6c, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x4d,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x2d, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x50, 0x52, 0x4f, 0x2e, 0x44, 0x42, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x52,
	0x4f, 0x2e, 0x44, 0x42, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x22, 0x2d, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x44,
	0x42, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x22, 0x30, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x60, 0x0a,
	0x15, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x6e, 0x74, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x69,
	0x64, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22,
	0x30, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x69, 0x76, 0x65, 0x75, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x69,
	0x64, 0x22, 0x7f, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x5f, 0x47, 0x69, 0x76, 0x65, 0x75, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x52, 0x4f, 0x2e,
	0x44, 0x42, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x2a, 0x86, 0x01, 0x0a, 0x11, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x52, 0x49, 0x47,
	0x47, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x54, 0x5f, 0x42,
	0x45, 0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x54, 0x5f, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x54, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x54, 0x5f, 0x42, 0x41, 0x47, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x54, 0x5f, 0x42, 0x55,
	0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x08, 0x12,
	0x0a, 0x0a, 0x06, 0x54, 0x54, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x09, 0x2a, 0x54, 0x0a, 0x10, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12,
	0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x41, 0x43, 0x43,
	0x45, 0x50, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x41, 0x53, 0x4b, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x55, 0x50, 0x10,
	0x02, 0x2a, 0xaf, 0x01, 0x0a, 0x0a, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x0e, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x52, 0x45, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x55, 0x50, 0x10, 0x04, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53,
	0x48, 0x10, 0x05, 0x2a, 0x48, 0x0a, 0x0f, 0x54, 0x41, 0x53, 0x4b, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x52, 0x45,
	0x57, 0x41, 0x52, 0x44, 0x54, 0x5f, 0x42, 0x41, 0x47, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x0f, 0x54, 0x41, 0x53, 0x4b, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x54, 0x5f, 0x45,
	0x58, 0x50, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x42, 0x54, 0x0a,
	0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x50, 0x01, 0x5a, 0x15,
	0x67, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x67, 0x70, 0x72, 0x6f, 0xaa, 0x02, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67,
	0x70, 0x72, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_task_system_proto_rawDescOnce sync.Once
	file_task_system_proto_rawDescData = file_task_system_proto_rawDesc
)

func file_task_system_proto_rawDescGZIP() []byte {
	file_task_system_proto_rawDescOnce.Do(func() {
		file_task_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_task_system_proto_rawDescData)
	})
	return file_task_system_proto_rawDescData
}

var file_task_system_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_task_system_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_task_system_proto_goTypes = []interface{}{
	(TASK_TRIGGER_TYPE)(0),       // 0: PRO.TASK_TRIGGER_TYPE
	(TASK_GROUP_STATE)(0),        // 1: PRO.TASK_GROUP_STATE
	(TASK_STATE)(0),              // 2: PRO.TASK_STATE
	(TASKREWARD_TYPE)(0),         // 3: PRO.TASKREWARD_TYPE
	(*TaskRewardItem)(nil),       // 4: PRO.TaskRewardItem
	(*TaskRewardItems)(nil),      // 5: PRO.TaskRewardItems
	(*Task_WaitListReq)(nil),     // 6: PRO.Task_WaitList_req
	(*Task_WaitListAck)(nil),     // 7: PRO.Task_WaitList_ack
	(*Task_MyTaskListReq)(nil),   // 8: PRO.Task_MyTaskList_req
	(*Task_MyTaskListAck)(nil),   // 9: PRO.Task_MyTaskList_ack
	(*Task_GetTaskReq)(nil),      // 10: PRO.Task_GetTask_req
	(*Task_GetTaskAck)(nil),      // 11: PRO.Task_GetTask_ack
	(*Task_SubmitTaskReq)(nil),   // 12: PRO.Task_SubmitTask_req
	(*Task_SubmitTaskAck)(nil),   // 13: PRO.Task_SubmitTask_ack
	(*Task_ObtainRewardNtf)(nil), // 14: PRO.Task_ObtainReward_ntf
	(*Task_GiveupTaskReq)(nil),   // 15: PRO.Task_GiveupTask_req
	(*Task_GiveupTaskAck)(nil),   // 16: PRO.Task_GiveupTask_ack
	(*DBUserTaskGroups)(nil),     // 17: PRO.DBUserTaskGroups
	(*DBUserTasks)(nil),          // 18: PRO.DBUserTasks
	(*DBUserTaskItem)(nil),       // 19: PRO.DBUserTaskItem
}
var file_task_system_proto_depIdxs = []int32{
	3,  // 0: PRO.TaskRewardItem.type:type_name -> PRO.TASKREWARD_TYPE
	4,  // 1: PRO.TaskRewardItems.rewards:type_name -> PRO.TaskRewardItem
	17, // 2: PRO.Task_MyTaskList_ack.groups:type_name -> PRO.DBUserTaskGroups
	18, // 3: PRO.Task_MyTaskList_ack.tasks:type_name -> PRO.DBUserTasks
	19, // 4: PRO.Task_GetTask_ack.task:type_name -> PRO.DBUserTaskItem
	5,  // 5: PRO.Task_ObtainReward_ntf.reward:type_name -> PRO.TaskRewardItems
	19, // 6: PRO.Task_GiveupTask_ack.task:type_name -> PRO.DBUserTaskItem
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_task_system_proto_init() }
func file_task_system_proto_init() {
	if File_task_system_proto != nil {
		return
	}
	file_db_internal_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_task_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRewardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRewardItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_WaitListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_WaitListAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_MyTaskListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_MyTaskListAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_GetTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_GetTaskAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_SubmitTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_SubmitTaskAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_ObtainRewardNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_GiveupTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_system_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_GiveupTaskAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_task_system_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_task_system_proto_msgTypes[12].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_task_system_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_system_proto_goTypes,
		DependencyIndexes: file_task_system_proto_depIdxs,
		EnumInfos:         file_task_system_proto_enumTypes,
		MessageInfos:      file_task_system_proto_msgTypes,
	}.Build()
	File_task_system_proto = out.File
	file_task_system_proto_rawDesc = nil
	file_task_system_proto_goTypes = nil
	file_task_system_proto_depIdxs = nil
}
