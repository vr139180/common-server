// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: res_internal.proto

package gpro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//res服务器 用户登陆资源请求
type Res_UserSlotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//login service iid
	Lsno int64 `protobuf:"varint,1,opt,name=lsno,proto3" json:"lsno,omitempty"`
	//序列号
	Sequence int64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	//user iid
	UserIid int64 `protobuf:"varint,3,opt,name=user_iid,json=userIid,proto3" json:"user_iid,omitempty"`
}

func (x *Res_UserSlotReq) Reset() {
	*x = Res_UserSlotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_res_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res_UserSlotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res_UserSlotReq) ProtoMessage() {}

func (x *Res_UserSlotReq) ProtoReflect() protoreflect.Message {
	mi := &file_res_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res_UserSlotReq.ProtoReflect.Descriptor instead.
func (*Res_UserSlotReq) Descriptor() ([]byte, []int) {
	return file_res_internal_proto_rawDescGZIP(), []int{0}
}

func (x *Res_UserSlotReq) GetLsno() int64 {
	if x != nil {
		return x.Lsno
	}
	return 0
}

func (x *Res_UserSlotReq) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Res_UserSlotReq) GetUserIid() int64 {
	if x != nil {
		return x.UserIid
	}
	return 0
}

type Res_UserSlotAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//0:成功 1:失败 2:system error
	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	//资源位
	Slot      *int32  `protobuf:"varint,2,opt,name=slot,proto3,oneof" json:"slot,omitempty"`
	Proxyip   *string `protobuf:"bytes,3,opt,name=proxyip,proto3,oneof" json:"proxyip,omitempty"`
	Proxyport *int32  `protobuf:"varint,4,opt,name=proxyport,proto3,oneof" json:"proxyport,omitempty"`
	//用户token
	Slottoken *int64 `protobuf:"varint,5,opt,name=slottoken,proto3,oneof" json:"slottoken,omitempty"`
	//userslotreq附带信息
	Lsno     int64 `protobuf:"varint,20,opt,name=lsno,proto3" json:"lsno,omitempty"`
	Sequence int64 `protobuf:"varint,21,opt,name=sequence,proto3" json:"sequence,omitempty"`
	UserIid  int64 `protobuf:"varint,22,opt,name=user_iid,json=userIid,proto3" json:"user_iid,omitempty"`
}

func (x *Res_UserSlotAck) Reset() {
	*x = Res_UserSlotAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_res_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res_UserSlotAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res_UserSlotAck) ProtoMessage() {}

func (x *Res_UserSlotAck) ProtoReflect() protoreflect.Message {
	mi := &file_res_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res_UserSlotAck.ProtoReflect.Descriptor instead.
func (*Res_UserSlotAck) Descriptor() ([]byte, []int) {
	return file_res_internal_proto_rawDescGZIP(), []int{1}
}

func (x *Res_UserSlotAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Res_UserSlotAck) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *Res_UserSlotAck) GetProxyip() string {
	if x != nil && x.Proxyip != nil {
		return *x.Proxyip
	}
	return ""
}

func (x *Res_UserSlotAck) GetProxyport() int32 {
	if x != nil && x.Proxyport != nil {
		return *x.Proxyport
	}
	return 0
}

func (x *Res_UserSlotAck) GetSlottoken() int64 {
	if x != nil && x.Slottoken != nil {
		return *x.Slottoken
	}
	return 0
}

func (x *Res_UserSlotAck) GetLsno() int64 {
	if x != nil {
		return x.Lsno
	}
	return 0
}

func (x *Res_UserSlotAck) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Res_UserSlotAck) GetUserIid() int64 {
	if x != nil {
		return x.UserIid
	}
	return 0
}

//res服务器和gate,确认资源协议
type Res_ProxyUserSlotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//proxytoken
	Proxytoken string `protobuf:"bytes,10,opt,name=proxytoken,proto3" json:"proxytoken,omitempty"`
	//homeiid gateiid用来在home,gate节点判断资源组合是否发生了变化
	Homeiid int64 `protobuf:"varint,11,opt,name=homeiid,proto3" json:"homeiid,omitempty"`
	Gateiid int64 `protobuf:"varint,12,opt,name=gateiid,proto3" json:"gateiid,omitempty"`
	Hgtype  int32 `protobuf:"varint,13,opt,name=hgtype,proto3" json:"hgtype,omitempty"`
	//userslotreq附带信息
	Lsno     int64 `protobuf:"varint,20,opt,name=lsno,proto3" json:"lsno,omitempty"`
	Sequence int64 `protobuf:"varint,21,opt,name=sequence,proto3" json:"sequence,omitempty"`
	UserIid  int64 `protobuf:"varint,22,opt,name=user_iid,json=userIid,proto3" json:"user_iid,omitempty"`
}

func (x *Res_ProxyUserSlotReq) Reset() {
	*x = Res_ProxyUserSlotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_res_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res_ProxyUserSlotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res_ProxyUserSlotReq) ProtoMessage() {}

func (x *Res_ProxyUserSlotReq) ProtoReflect() protoreflect.Message {
	mi := &file_res_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res_ProxyUserSlotReq.ProtoReflect.Descriptor instead.
func (*Res_ProxyUserSlotReq) Descriptor() ([]byte, []int) {
	return file_res_internal_proto_rawDescGZIP(), []int{2}
}

func (x *Res_ProxyUserSlotReq) GetProxytoken() string {
	if x != nil {
		return x.Proxytoken
	}
	return ""
}

func (x *Res_ProxyUserSlotReq) GetHomeiid() int64 {
	if x != nil {
		return x.Homeiid
	}
	return 0
}

func (x *Res_ProxyUserSlotReq) GetGateiid() int64 {
	if x != nil {
		return x.Gateiid
	}
	return 0
}

func (x *Res_ProxyUserSlotReq) GetHgtype() int32 {
	if x != nil {
		return x.Hgtype
	}
	return 0
}

func (x *Res_ProxyUserSlotReq) GetLsno() int64 {
	if x != nil {
		return x.Lsno
	}
	return 0
}

func (x *Res_ProxyUserSlotReq) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Res_ProxyUserSlotReq) GetUserIid() int64 {
	if x != nil {
		return x.UserIid
	}
	return 0
}

type Res_ProxyUserSlotAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//0:成功 1:homeid不正确 2:gateid不正确 3:gate资源不足
	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	//资源位
	Slot      *int32  `protobuf:"varint,2,opt,name=slot,proto3,oneof" json:"slot,omitempty"`
	Proxyip   *string `protobuf:"bytes,3,opt,name=proxyip,proto3,oneof" json:"proxyip,omitempty"`
	Proxyport *int32  `protobuf:"varint,4,opt,name=proxyport,proto3,oneof" json:"proxyport,omitempty"`
	//用户token
	Slottoken *int64 `protobuf:"varint,5,opt,name=slottoken,proto3,oneof" json:"slottoken,omitempty"`
	//proxytoken
	Proxytoken string `protobuf:"bytes,10,opt,name=proxytoken,proto3" json:"proxytoken,omitempty"`
	//homeiid gateiid用来在home,gate节点判断资源组合是否发生了变化
	Homeiid int64 `protobuf:"varint,11,opt,name=homeiid,proto3" json:"homeiid,omitempty"`
	Gateiid int64 `protobuf:"varint,12,opt,name=gateiid,proto3" json:"gateiid,omitempty"`
	Hgtype  int32 `protobuf:"varint,13,opt,name=hgtype,proto3" json:"hgtype,omitempty"`
	//userslotreq附带信息
	Lsno     int64 `protobuf:"varint,20,opt,name=lsno,proto3" json:"lsno,omitempty"`
	Sequence int64 `protobuf:"varint,21,opt,name=sequence,proto3" json:"sequence,omitempty"`
	UserIid  int64 `protobuf:"varint,22,opt,name=user_iid,json=userIid,proto3" json:"user_iid,omitempty"`
}

func (x *Res_ProxyUserSlotAck) Reset() {
	*x = Res_ProxyUserSlotAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_res_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res_ProxyUserSlotAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res_ProxyUserSlotAck) ProtoMessage() {}

func (x *Res_ProxyUserSlotAck) ProtoReflect() protoreflect.Message {
	mi := &file_res_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res_ProxyUserSlotAck.ProtoReflect.Descriptor instead.
func (*Res_ProxyUserSlotAck) Descriptor() ([]byte, []int) {
	return file_res_internal_proto_rawDescGZIP(), []int{3}
}

func (x *Res_ProxyUserSlotAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetProxyip() string {
	if x != nil && x.Proxyip != nil {
		return *x.Proxyip
	}
	return ""
}

func (x *Res_ProxyUserSlotAck) GetProxyport() int32 {
	if x != nil && x.Proxyport != nil {
		return *x.Proxyport
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetSlottoken() int64 {
	if x != nil && x.Slottoken != nil {
		return *x.Slottoken
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetProxytoken() string {
	if x != nil {
		return x.Proxytoken
	}
	return ""
}

func (x *Res_ProxyUserSlotAck) GetHomeiid() int64 {
	if x != nil {
		return x.Homeiid
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetGateiid() int64 {
	if x != nil {
		return x.Gateiid
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetHgtype() int32 {
	if x != nil {
		return x.Hgtype
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetLsno() int64 {
	if x != nil {
		return x.Lsno
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Res_ProxyUserSlotAck) GetUserIid() int64 {
	if x != nil {
		return x.UserIid
	}
	return 0
}

//同步gate slot到res
type Res_SyncGateSlotNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//可用slot数量
	Freeslots int32 `protobuf:"varint,1,opt,name=freeslots,proto3" json:"freeslots,omitempty"`
	//同步编号，用来处理同步包先后问题
	Syncsequence int64 `protobuf:"varint,2,opt,name=syncsequence,proto3" json:"syncsequence,omitempty"`
	Homeiid      int64 `protobuf:"varint,4,opt,name=homeiid,proto3" json:"homeiid,omitempty"`
	Gateiid      int64 `protobuf:"varint,5,opt,name=gateiid,proto3" json:"gateiid,omitempty"`
}

func (x *Res_SyncGateSlotNtf) Reset() {
	*x = Res_SyncGateSlotNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_res_internal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res_SyncGateSlotNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res_SyncGateSlotNtf) ProtoMessage() {}

func (x *Res_SyncGateSlotNtf) ProtoReflect() protoreflect.Message {
	mi := &file_res_internal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res_SyncGateSlotNtf.ProtoReflect.Descriptor instead.
func (*Res_SyncGateSlotNtf) Descriptor() ([]byte, []int) {
	return file_res_internal_proto_rawDescGZIP(), []int{4}
}

func (x *Res_SyncGateSlotNtf) GetFreeslots() int32 {
	if x != nil {
		return x.Freeslots
	}
	return 0
}

func (x *Res_SyncGateSlotNtf) GetSyncsequence() int64 {
	if x != nil {
		return x.Syncsequence
	}
	return 0
}

func (x *Res_SyncGateSlotNtf) GetHomeiid() int64 {
	if x != nil {
		return x.Homeiid
	}
	return 0
}

func (x *Res_SyncGateSlotNtf) GetGateiid() int64 {
	if x != nil {
		return x.Gateiid
	}
	return 0
}

var File_res_internal_proto protoreflect.FileDescriptor

var file_res_internal_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x50, 0x52, 0x4f, 0x22, 0x5d, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x73, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x73, 0x6e,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x69, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x73, 0x6e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x6c, 0x73, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x69, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x69, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x6f, 0x72,
	0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xce, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x5f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d,
	0x65, 0x69, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65,
	0x69, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x69, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x73, 0x6e, 0x6f, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x73, 0x6e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x69, 0x64,
	0x22, 0x95, 0x03, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x5f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x03, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x69, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x74,
	0x65, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x73, 0x6e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x73, 0x6e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x69, 0x70, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x5f, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x74,
	0x66, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x69, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x61, 0x74, 0x65, 0x69, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x61, 0x74, 0x65, 0x69, 0x69, 0x64, 0x42, 0x54, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x50, 0x01, 0x5a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x6c, 0x69,
	0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0xaa,
	0x02, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_res_internal_proto_rawDescOnce sync.Once
	file_res_internal_proto_rawDescData = file_res_internal_proto_rawDesc
)

func file_res_internal_proto_rawDescGZIP() []byte {
	file_res_internal_proto_rawDescOnce.Do(func() {
		file_res_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_res_internal_proto_rawDescData)
	})
	return file_res_internal_proto_rawDescData
}

var file_res_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_res_internal_proto_goTypes = []interface{}{
	(*Res_UserSlotReq)(nil),      // 0: PRO.Res_UserSlot_req
	(*Res_UserSlotAck)(nil),      // 1: PRO.Res_UserSlot_ack
	(*Res_ProxyUserSlotReq)(nil), // 2: PRO.Res_ProxyUserSlot_req
	(*Res_ProxyUserSlotAck)(nil), // 3: PRO.Res_ProxyUserSlot_ack
	(*Res_SyncGateSlotNtf)(nil),  // 4: PRO.Res_SyncGateSlot_ntf
}
var file_res_internal_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_res_internal_proto_init() }
func file_res_internal_proto_init() {
	if File_res_internal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_res_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res_UserSlotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_res_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res_UserSlotAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_res_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res_ProxyUserSlotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_res_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res_ProxyUserSlotAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_res_internal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res_SyncGateSlotNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_res_internal_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_res_internal_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_res_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_res_internal_proto_goTypes,
		DependencyIndexes: file_res_internal_proto_depIdxs,
		MessageInfos:      file_res_internal_proto_msgTypes,
	}.Build()
	File_res_internal_proto = out.File
	file_res_internal_proto_rawDesc = nil
	file_res_internal_proto_goTypes = nil
	file_res_internal_proto_depIdxs = nil
}
