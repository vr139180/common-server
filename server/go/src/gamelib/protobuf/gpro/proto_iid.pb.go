// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: proto_iid.proto

package gpro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//用户定义的协议
type USER_PROTYPE int32

const (
	USER_PROTYPE_UNIVERSAL_1000 USER_PROTYPE = 0
	USER_PROTYPE_USER_MSG_BEGIN USER_PROTYPE = 1000
	//用户协议 client to server
	USER_PROTYPE_USER_LOGIN_REQ      USER_PROTYPE = 1001
	USER_PROTYPE_USER_RELOGIN_REQ    USER_PROTYPE = 1002
	USER_PROTYPE_USER_LOGOUT_NTF     USER_PROTYPE = 1003
	USER_PROTYPE_USER_ACTIVE_NTF     USER_PROTYPE = 1004
	USER_PROTYPE_USER_ROLELIST_REQ   USER_PROTYPE = 1005
	USER_PROTYPE_USER_ROLESELECT_REQ USER_PROTYPE = 1006
	USER_PROTYPE_USER_ROLECREATE_REQ USER_PROTYPE = 1007
	USER_PROTYPE_USER_MSG_END        USER_PROTYPE = 1100
	//server to client
	USER_PROTYPE_USER_LOGIN_ACK         USER_PROTYPE = 1101
	USER_PROTYPE_USER_RELOGIN_ACK       USER_PROTYPE = 1102
	USER_PROTYPE_USER_GATELOST_NTF      USER_PROTYPE = 1103
	USER_PROTYPE_USER_ROLELIST_ACK      USER_PROTYPE = 1104
	USER_PROTYPE_USER_ROLESELECT_ACK    USER_PROTYPE = 1105
	USER_PROTYPE_USER_ROLECREATE_ACK    USER_PROTYPE = 1106
	USER_PROTYPE_USER_ROLEDETAILA_NTF   USER_PROTYPE = 1107
	USER_PROTYPE_USER_ROLEDETAILB_NTF   USER_PROTYPE = 1108
	USER_PROTYPE_USER_ROLEDETAILEND_NTF USER_PROTYPE = 1109
	USER_PROTYPE_USER_MYSIMPLEINFO_REQ  USER_PROTYPE = 1110
	USER_PROTYPE_USER_MYSIMPLEINFO_ACK  USER_PROTYPE = 1111
	USER_PROTYPE_USER_SAVEROLELOC_NTF   USER_PROTYPE = 1112
	USER_PROTYPE_USER_MSGALL_END        USER_PROTYPE = 1290
)

// Enum value maps for USER_PROTYPE.
var (
	USER_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_1000",
		1000: "USER_MSG_BEGIN",
		1001: "USER_LOGIN_REQ",
		1002: "USER_RELOGIN_REQ",
		1003: "USER_LOGOUT_NTF",
		1004: "USER_ACTIVE_NTF",
		1005: "USER_ROLELIST_REQ",
		1006: "USER_ROLESELECT_REQ",
		1007: "USER_ROLECREATE_REQ",
		1100: "USER_MSG_END",
		1101: "USER_LOGIN_ACK",
		1102: "USER_RELOGIN_ACK",
		1103: "USER_GATELOST_NTF",
		1104: "USER_ROLELIST_ACK",
		1105: "USER_ROLESELECT_ACK",
		1106: "USER_ROLECREATE_ACK",
		1107: "USER_ROLEDETAILA_NTF",
		1108: "USER_ROLEDETAILB_NTF",
		1109: "USER_ROLEDETAILEND_NTF",
		1110: "USER_MYSIMPLEINFO_REQ",
		1111: "USER_MYSIMPLEINFO_ACK",
		1112: "USER_SAVEROLELOC_NTF",
		1290: "USER_MSGALL_END",
	}
	USER_PROTYPE_value = map[string]int32{
		"UNIVERSAL_1000":         0,
		"USER_MSG_BEGIN":         1000,
		"USER_LOGIN_REQ":         1001,
		"USER_RELOGIN_REQ":       1002,
		"USER_LOGOUT_NTF":        1003,
		"USER_ACTIVE_NTF":        1004,
		"USER_ROLELIST_REQ":      1005,
		"USER_ROLESELECT_REQ":    1006,
		"USER_ROLECREATE_REQ":    1007,
		"USER_MSG_END":           1100,
		"USER_LOGIN_ACK":         1101,
		"USER_RELOGIN_ACK":       1102,
		"USER_GATELOST_NTF":      1103,
		"USER_ROLELIST_ACK":      1104,
		"USER_ROLESELECT_ACK":    1105,
		"USER_ROLECREATE_ACK":    1106,
		"USER_ROLEDETAILA_NTF":   1107,
		"USER_ROLEDETAILB_NTF":   1108,
		"USER_ROLEDETAILEND_NTF": 1109,
		"USER_MYSIMPLEINFO_REQ":  1110,
		"USER_MYSIMPLEINFO_ACK":  1111,
		"USER_SAVEROLELOC_NTF":   1112,
		"USER_MSGALL_END":        1290,
	}
)

func (x USER_PROTYPE) Enum() *USER_PROTYPE {
	p := new(USER_PROTYPE)
	*p = x
	return p
}

func (x USER_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USER_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[0].Descriptor()
}

func (USER_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[0]
}

func (x USER_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USER_PROTYPE.Descriptor instead.
func (USER_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{0}
}

type BUILD_PROTYPE int32

const (
	BUILD_PROTYPE_UNIVERSAL_1250    BUILD_PROTYPE = 0
	BUILD_PROTYPE_BUILD_ADDITEM_REQ BUILD_PROTYPE = 1251
	BUILD_PROTYPE_BUILD_ADDITEM_ACK BUILD_PROTYPE = 1252
	BUILD_PROTYPE_BUILD_DELITEM_REQ BUILD_PROTYPE = 1253
	BUILD_PROTYPE_BUILD_DELITEM_ACK BUILD_PROTYPE = 1254
)

// Enum value maps for BUILD_PROTYPE.
var (
	BUILD_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_1250",
		1251: "BUILD_ADDITEM_REQ",
		1252: "BUILD_ADDITEM_ACK",
		1253: "BUILD_DELITEM_REQ",
		1254: "BUILD_DELITEM_ACK",
	}
	BUILD_PROTYPE_value = map[string]int32{
		"UNIVERSAL_1250":    0,
		"BUILD_ADDITEM_REQ": 1251,
		"BUILD_ADDITEM_ACK": 1252,
		"BUILD_DELITEM_REQ": 1253,
		"BUILD_DELITEM_ACK": 1254,
	}
)

func (x BUILD_PROTYPE) Enum() *BUILD_PROTYPE {
	p := new(BUILD_PROTYPE)
	*p = x
	return p
}

func (x BUILD_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BUILD_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[1].Descriptor()
}

func (BUILD_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[1]
}

func (x BUILD_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BUILD_PROTYPE.Descriptor instead.
func (BUILD_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{1}
}

type PET_PROTYPE int32

const (
	PET_PROTYPE_UNIVERSAL_1500     PET_PROTYPE = 0
	PET_PROTYPE_PET_ADOPTONE_REQ   PET_PROTYPE = 1501
	PET_PROTYPE_PET_ADOPTONE_ACK   PET_PROTYPE = 1502
	PET_PROTYPE_PET_RELEASEONE_REQ PET_PROTYPE = 1503
	PET_PROTYPE_PET_RELEASEONE_ACK PET_PROTYPE = 1504
)

// Enum value maps for PET_PROTYPE.
var (
	PET_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_1500",
		1501: "PET_ADOPTONE_REQ",
		1502: "PET_ADOPTONE_ACK",
		1503: "PET_RELEASEONE_REQ",
		1504: "PET_RELEASEONE_ACK",
	}
	PET_PROTYPE_value = map[string]int32{
		"UNIVERSAL_1500":     0,
		"PET_ADOPTONE_REQ":   1501,
		"PET_ADOPTONE_ACK":   1502,
		"PET_RELEASEONE_REQ": 1503,
		"PET_RELEASEONE_ACK": 1504,
	}
)

func (x PET_PROTYPE) Enum() *PET_PROTYPE {
	p := new(PET_PROTYPE)
	*p = x
	return p
}

func (x PET_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PET_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[2].Descriptor()
}

func (PET_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[2]
}

func (x PET_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PET_PROTYPE.Descriptor instead.
func (PET_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{2}
}

type CHAT_PROTYPE int32

const (
	CHAT_PROTYPE_UNIVERSAL_1750 CHAT_PROTYPE = 0
	CHAT_PROTYPE_CHAT_MSG_BEGIN CHAT_PROTYPE = 1750
	//client to server
	CHAT_PROTYPE_CHAT_USERMSG_SAY         CHAT_PROTYPE = 1751
	CHAT_PROTYPE_CHAT_USERCHANNELS_ACTIVE CHAT_PROTYPE = 1752
	CHAT_PROTYPE_CHAT_CUSTOMCHANNELID_REQ CHAT_PROTYPE = 1753
	CHAT_PROTYPE_CHAT_MSG_END             CHAT_PROTYPE = 1850
	CHAT_PROTYPE_CHAT_CUSTOMCHANNELID_ACK CHAT_PROTYPE = 1853
	CHAT_PROTYPE_CHAT_CHATMSG_NTF         CHAT_PROTYPE = 1854
	CHAT_PROTYPE_CHAT_GLOBALMSG_NTF       CHAT_PROTYPE = 1855
	CHAT_PROTYPE_CHAT_MSGALL_END          CHAT_PROTYPE = 1999
)

// Enum value maps for CHAT_PROTYPE.
var (
	CHAT_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_1750",
		1750: "CHAT_MSG_BEGIN",
		1751: "CHAT_USERMSG_SAY",
		1752: "CHAT_USERCHANNELS_ACTIVE",
		1753: "CHAT_CUSTOMCHANNELID_REQ",
		1850: "CHAT_MSG_END",
		1853: "CHAT_CUSTOMCHANNELID_ACK",
		1854: "CHAT_CHATMSG_NTF",
		1855: "CHAT_GLOBALMSG_NTF",
		1999: "CHAT_MSGALL_END",
	}
	CHAT_PROTYPE_value = map[string]int32{
		"UNIVERSAL_1750":           0,
		"CHAT_MSG_BEGIN":           1750,
		"CHAT_USERMSG_SAY":         1751,
		"CHAT_USERCHANNELS_ACTIVE": 1752,
		"CHAT_CUSTOMCHANNELID_REQ": 1753,
		"CHAT_MSG_END":             1850,
		"CHAT_CUSTOMCHANNELID_ACK": 1853,
		"CHAT_CHATMSG_NTF":         1854,
		"CHAT_GLOBALMSG_NTF":       1855,
		"CHAT_MSGALL_END":          1999,
	}
)

func (x CHAT_PROTYPE) Enum() *CHAT_PROTYPE {
	p := new(CHAT_PROTYPE)
	*p = x
	return p
}

func (x CHAT_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CHAT_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[3].Descriptor()
}

func (CHAT_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[3]
}

func (x CHAT_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CHAT_PROTYPE.Descriptor instead.
func (CHAT_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{3}
}

type MAIL_PROTYPE int32

const (
	MAIL_PROTYPE_UNIVERSAL_2000         MAIL_PROTYPE = 0
	MAIL_PROTYPE_MAIL_MSG_BEGIN         MAIL_PROTYPE = 2000
	MAIL_PROTYPE_MAIL_USERONLINE_ACTIVE MAIL_PROTYPE = 2001
	MAIL_PROTYPE_MAIL_NEWMAIL_NTF       MAIL_PROTYPE = 2002
	MAIL_PROTYPE_MAIL_MAILGET_REQ       MAIL_PROTYPE = 2003
	MAIL_PROTYPE_MAIL_READMAIL_REQ      MAIL_PROTYPE = 2004
	MAIL_PROTYPE_MAIL_DELETEMAIL_REQ    MAIL_PROTYPE = 2005
	MAIL_PROTYPE_MAIL_UNBINDATTACHS_REQ MAIL_PROTYPE = 2006
	MAIL_PROTYPE_MAIL_SYSTEMMAIL_REQ    MAIL_PROTYPE = 2007
	MAIL_PROTYPE_MAIL_NEWMAIL_REQ       MAIL_PROTYPE = 2008
	MAIL_PROTYPE_MAIL_MSG_END           MAIL_PROTYPE = 2100
	MAIL_PROTYPE_MAIL_MAILGET_ACK       MAIL_PROTYPE = 2101
	MAIL_PROTYPE_MAIL_READMAIL_ACK      MAIL_PROTYPE = 2103
	MAIL_PROTYPE_MAIL_DELETEMAIL_ACK    MAIL_PROTYPE = 2104
	MAIL_PROTYPE_MAIL_UNBINDATTACHS_ACK MAIL_PROTYPE = 2105
	MAIL_PROTYPE_MAIL_SYSTEMMAIL_ACK    MAIL_PROTYPE = 2106
	MAIL_PROTYPE_MAIL_SYSTEMMAIL_NTF    MAIL_PROTYPE = 2107
	MAIL_PROTYPE_MAIL_NEWMAIL_ACK       MAIL_PROTYPE = 2108
	MAIL_PROTYPE_MAIL_MSGALL_END        MAIL_PROTYPE = 2249
)

// Enum value maps for MAIL_PROTYPE.
var (
	MAIL_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_2000",
		2000: "MAIL_MSG_BEGIN",
		2001: "MAIL_USERONLINE_ACTIVE",
		2002: "MAIL_NEWMAIL_NTF",
		2003: "MAIL_MAILGET_REQ",
		2004: "MAIL_READMAIL_REQ",
		2005: "MAIL_DELETEMAIL_REQ",
		2006: "MAIL_UNBINDATTACHS_REQ",
		2007: "MAIL_SYSTEMMAIL_REQ",
		2008: "MAIL_NEWMAIL_REQ",
		2100: "MAIL_MSG_END",
		2101: "MAIL_MAILGET_ACK",
		2103: "MAIL_READMAIL_ACK",
		2104: "MAIL_DELETEMAIL_ACK",
		2105: "MAIL_UNBINDATTACHS_ACK",
		2106: "MAIL_SYSTEMMAIL_ACK",
		2107: "MAIL_SYSTEMMAIL_NTF",
		2108: "MAIL_NEWMAIL_ACK",
		2249: "MAIL_MSGALL_END",
	}
	MAIL_PROTYPE_value = map[string]int32{
		"UNIVERSAL_2000":         0,
		"MAIL_MSG_BEGIN":         2000,
		"MAIL_USERONLINE_ACTIVE": 2001,
		"MAIL_NEWMAIL_NTF":       2002,
		"MAIL_MAILGET_REQ":       2003,
		"MAIL_READMAIL_REQ":      2004,
		"MAIL_DELETEMAIL_REQ":    2005,
		"MAIL_UNBINDATTACHS_REQ": 2006,
		"MAIL_SYSTEMMAIL_REQ":    2007,
		"MAIL_NEWMAIL_REQ":       2008,
		"MAIL_MSG_END":           2100,
		"MAIL_MAILGET_ACK":       2101,
		"MAIL_READMAIL_ACK":      2103,
		"MAIL_DELETEMAIL_ACK":    2104,
		"MAIL_UNBINDATTACHS_ACK": 2105,
		"MAIL_SYSTEMMAIL_ACK":    2106,
		"MAIL_SYSTEMMAIL_NTF":    2107,
		"MAIL_NEWMAIL_ACK":       2108,
		"MAIL_MSGALL_END":        2249,
	}
)

func (x MAIL_PROTYPE) Enum() *MAIL_PROTYPE {
	p := new(MAIL_PROTYPE)
	*p = x
	return p
}

func (x MAIL_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MAIL_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[4].Descriptor()
}

func (MAIL_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[4]
}

func (x MAIL_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MAIL_PROTYPE.Descriptor instead.
func (MAIL_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{4}
}

type FRIEND_PROTYPE int32

const (
	FRIEND_PROTYPE_UNIVERSAL_2250            FRIEND_PROTYPE = 0
	FRIEND_PROTYPE_FRIEND_MSG_BEGIN          FRIEND_PROTYPE = 2250
	FRIEND_PROTYPE_FRD_FRIENDLIST_REQ        FRIEND_PROTYPE = 2251
	FRIEND_PROTYPE_FRD_FRIENDINVITE_REQ      FRIEND_PROTYPE = 2252
	FRIEND_PROTYPE_FRD_INVITECONFIRM_REQ     FRIEND_PROTYPE = 2253
	FRIEND_PROTYPE_FRD_FRIENDDELETE_REQ      FRIEND_PROTYPE = 2254
	FRIEND_PROTYPE_FRIEND_MSG_END            FRIEND_PROTYPE = 2350
	FRIEND_PROTYPE_FRD_FRIENDLIST_ACK        FRIEND_PROTYPE = 2351
	FRIEND_PROTYPE_FRD_FRIENDINVITE_ACK      FRIEND_PROTYPE = 2352
	FRIEND_PROTYPE_FRD_INVITECONFIRM_ACK     FRIEND_PROTYPE = 2353
	FRIEND_PROTYPE_FRD_FRIENDDELETE_ACK      FRIEND_PROTYPE = 2354
	FRIEND_PROTYPE_FRD_FRIENDCHANGEOTHER_NTF FRIEND_PROTYPE = 2355
	FRIEND_PROTYPE_FRIEND_MSGALL_END         FRIEND_PROTYPE = 2499
)

// Enum value maps for FRIEND_PROTYPE.
var (
	FRIEND_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_2250",
		2250: "FRIEND_MSG_BEGIN",
		2251: "FRD_FRIENDLIST_REQ",
		2252: "FRD_FRIENDINVITE_REQ",
		2253: "FRD_INVITECONFIRM_REQ",
		2254: "FRD_FRIENDDELETE_REQ",
		2350: "FRIEND_MSG_END",
		2351: "FRD_FRIENDLIST_ACK",
		2352: "FRD_FRIENDINVITE_ACK",
		2353: "FRD_INVITECONFIRM_ACK",
		2354: "FRD_FRIENDDELETE_ACK",
		2355: "FRD_FRIENDCHANGEOTHER_NTF",
		2499: "FRIEND_MSGALL_END",
	}
	FRIEND_PROTYPE_value = map[string]int32{
		"UNIVERSAL_2250":            0,
		"FRIEND_MSG_BEGIN":          2250,
		"FRD_FRIENDLIST_REQ":        2251,
		"FRD_FRIENDINVITE_REQ":      2252,
		"FRD_INVITECONFIRM_REQ":     2253,
		"FRD_FRIENDDELETE_REQ":      2254,
		"FRIEND_MSG_END":            2350,
		"FRD_FRIENDLIST_ACK":        2351,
		"FRD_FRIENDINVITE_ACK":      2352,
		"FRD_INVITECONFIRM_ACK":     2353,
		"FRD_FRIENDDELETE_ACK":      2354,
		"FRD_FRIENDCHANGEOTHER_NTF": 2355,
		"FRIEND_MSGALL_END":         2499,
	}
)

func (x FRIEND_PROTYPE) Enum() *FRIEND_PROTYPE {
	p := new(FRIEND_PROTYPE)
	*p = x
	return p
}

func (x FRIEND_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FRIEND_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[5].Descriptor()
}

func (FRIEND_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[5]
}

func (x FRIEND_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FRIEND_PROTYPE.Descriptor instead.
func (FRIEND_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{5}
}

type ITEMS_PROTYPE int32

const (
	ITEMS_PROTYPE_UNIVERSAL_2500         ITEMS_PROTYPE = 0
	ITEMS_PROTYPE_ITEM_USERBINDITEMS_REQ ITEMS_PROTYPE = 2501
	ITEMS_PROTYPE_ITEM_USERBINDITEMS_ACK ITEMS_PROTYPE = 2502
)

// Enum value maps for ITEMS_PROTYPE.
var (
	ITEMS_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_2500",
		2501: "ITEM_USERBINDITEMS_REQ",
		2502: "ITEM_USERBINDITEMS_ACK",
	}
	ITEMS_PROTYPE_value = map[string]int32{
		"UNIVERSAL_2500":         0,
		"ITEM_USERBINDITEMS_REQ": 2501,
		"ITEM_USERBINDITEMS_ACK": 2502,
	}
)

func (x ITEMS_PROTYPE) Enum() *ITEMS_PROTYPE {
	p := new(ITEMS_PROTYPE)
	*p = x
	return p
}

func (x ITEMS_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ITEMS_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[6].Descriptor()
}

func (ITEMS_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[6]
}

func (x ITEMS_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ITEMS_PROTYPE.Descriptor instead.
func (ITEMS_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{6}
}

type TASK_PROTYPE int32

const (
	TASK_PROTYPE_UNIVERSAL_2750        TASK_PROTYPE = 0
	TASK_PROTYPE_TASK_MSG_BEGIN        TASK_PROTYPE = 2750
	TASK_PROTYPE_TASK_WAITLIST_REQ     TASK_PROTYPE = 2751
	TASK_PROTYPE_TASK_MYTASKLIST_REQ   TASK_PROTYPE = 2752
	TASK_PROTYPE_TASK_GETTASK_REQ      TASK_PROTYPE = 2753
	TASK_PROTYPE_TASK_SUBMITTASK_REQ   TASK_PROTYPE = 2754
	TASK_PROTYPE_TASK_GIVEUPTASK_REQ   TASK_PROTYPE = 2755
	TASK_PROTYPE_TASK_MSG_END          TASK_PROTYPE = 2850
	TASK_PROTYPE_TASK_WAITLIST_ACK     TASK_PROTYPE = 2851
	TASK_PROTYPE_TASK_MYTASKLIST_ACK   TASK_PROTYPE = 2852
	TASK_PROTYPE_TASK_GETTASK_ACK      TASK_PROTYPE = 2853
	TASK_PROTYPE_TASK_SUBMITTASK_ACK   TASK_PROTYPE = 2854
	TASK_PROTYPE_TASK_OBTAINREWARD_NTF TASK_PROTYPE = 2855
	TASK_PROTYPE_TASK_GIVEUPTASK_ACK   TASK_PROTYPE = 2856
	TASK_PROTYPE_TASK_MSGALL_END       TASK_PROTYPE = 2999
)

// Enum value maps for TASK_PROTYPE.
var (
	TASK_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_2750",
		2750: "TASK_MSG_BEGIN",
		2751: "TASK_WAITLIST_REQ",
		2752: "TASK_MYTASKLIST_REQ",
		2753: "TASK_GETTASK_REQ",
		2754: "TASK_SUBMITTASK_REQ",
		2755: "TASK_GIVEUPTASK_REQ",
		2850: "TASK_MSG_END",
		2851: "TASK_WAITLIST_ACK",
		2852: "TASK_MYTASKLIST_ACK",
		2853: "TASK_GETTASK_ACK",
		2854: "TASK_SUBMITTASK_ACK",
		2855: "TASK_OBTAINREWARD_NTF",
		2856: "TASK_GIVEUPTASK_ACK",
		2999: "TASK_MSGALL_END",
	}
	TASK_PROTYPE_value = map[string]int32{
		"UNIVERSAL_2750":        0,
		"TASK_MSG_BEGIN":        2750,
		"TASK_WAITLIST_REQ":     2751,
		"TASK_MYTASKLIST_REQ":   2752,
		"TASK_GETTASK_REQ":      2753,
		"TASK_SUBMITTASK_REQ":   2754,
		"TASK_GIVEUPTASK_REQ":   2755,
		"TASK_MSG_END":          2850,
		"TASK_WAITLIST_ACK":     2851,
		"TASK_MYTASKLIST_ACK":   2852,
		"TASK_GETTASK_ACK":      2853,
		"TASK_SUBMITTASK_ACK":   2854,
		"TASK_OBTAINREWARD_NTF": 2855,
		"TASK_GIVEUPTASK_ACK":   2856,
		"TASK_MSGALL_END":       2999,
	}
)

func (x TASK_PROTYPE) Enum() *TASK_PROTYPE {
	p := new(TASK_PROTYPE)
	*p = x
	return p
}

func (x TASK_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASK_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[7].Descriptor()
}

func (TASK_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[7]
}

func (x TASK_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASK_PROTYPE.Descriptor instead.
func (TASK_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{7}
}

type MMS_PROTYPE int32

const (
	MMS_PROTYPE_UNIVERSAL_3000      MMS_PROTYPE = 0
	MMS_PROTYPE_MMS_MSG_BEGIN       MMS_PROTYPE = 3000
	MMS_PROTYPE_MMS_MATCHMAKING_REQ MMS_PROTYPE = 3001
	MMS_PROTYPE_MMS_MSG_END         MMS_PROTYPE = 3140
	MMS_PROTYPE_MMS_MATCHMAKING_ACK MMS_PROTYPE = 3141
	MMS_PROTYPE_MMS_MSGALL_END      MMS_PROTYPE = 3249
)

// Enum value maps for MMS_PROTYPE.
var (
	MMS_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_3000",
		3000: "MMS_MSG_BEGIN",
		3001: "MMS_MATCHMAKING_REQ",
		3140: "MMS_MSG_END",
		3141: "MMS_MATCHMAKING_ACK",
		3249: "MMS_MSGALL_END",
	}
	MMS_PROTYPE_value = map[string]int32{
		"UNIVERSAL_3000":      0,
		"MMS_MSG_BEGIN":       3000,
		"MMS_MATCHMAKING_REQ": 3001,
		"MMS_MSG_END":         3140,
		"MMS_MATCHMAKING_ACK": 3141,
		"MMS_MSGALL_END":      3249,
	}
)

func (x MMS_PROTYPE) Enum() *MMS_PROTYPE {
	p := new(MMS_PROTYPE)
	*p = x
	return p
}

func (x MMS_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MMS_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[8].Descriptor()
}

func (MMS_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[8]
}

func (x MMS_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MMS_PROTYPE.Descriptor instead.
func (MMS_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{8}
}

//game相关协议定义
type GMS_PROTYPE int32

const (
	GMS_PROTYPE_UNIVERSAL_4000         GMS_PROTYPE = 0
	GMS_PROTYPE_GMS_MSG_BEGIN          GMS_PROTYPE = 4000
	GMS_PROTYPE_GMS_ENTERGAME_REQ      GMS_PROTYPE = 4001
	GMS_PROTYPE_GMS_USERSTATE_SYN      GMS_PROTYPE = 4002
	GMS_PROTYPE_GMS_MSG_END            GMS_PROTYPE = 4500
	GMS_PROTYPE_GMS_USERALIVE_NTF      GMS_PROTYPE = 4501
	GMS_PROTYPE_GMS_SAVEUSERLOC_NTF    GMS_PROTYPE = 4502
	GMS_PROTYPE_GMS_ENTERGAME_ACK      GMS_PROTYPE = 4503
	GMS_PROTYPE_GMS_USERSVISIBLE_NTF   GMS_PROTYPE = 4504
	GMS_PROTYPE_GMS_SERVICEDISABLE_NTF GMS_PROTYPE = 4505
	GMS_PROTYPE_GMS_USERINFO_SYNC      GMS_PROTYPE = 4506
	GMS_PROTYPE_GMS_MSGALL_END         GMS_PROTYPE = 4999
)

// Enum value maps for GMS_PROTYPE.
var (
	GMS_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_4000",
		4000: "GMS_MSG_BEGIN",
		4001: "GMS_ENTERGAME_REQ",
		4002: "GMS_USERSTATE_SYN",
		4500: "GMS_MSG_END",
		4501: "GMS_USERALIVE_NTF",
		4502: "GMS_SAVEUSERLOC_NTF",
		4503: "GMS_ENTERGAME_ACK",
		4504: "GMS_USERSVISIBLE_NTF",
		4505: "GMS_SERVICEDISABLE_NTF",
		4506: "GMS_USERINFO_SYNC",
		4999: "GMS_MSGALL_END",
	}
	GMS_PROTYPE_value = map[string]int32{
		"UNIVERSAL_4000":         0,
		"GMS_MSG_BEGIN":          4000,
		"GMS_ENTERGAME_REQ":      4001,
		"GMS_USERSTATE_SYN":      4002,
		"GMS_MSG_END":            4500,
		"GMS_USERALIVE_NTF":      4501,
		"GMS_SAVEUSERLOC_NTF":    4502,
		"GMS_ENTERGAME_ACK":      4503,
		"GMS_USERSVISIBLE_NTF":   4504,
		"GMS_SERVICEDISABLE_NTF": 4505,
		"GMS_USERINFO_SYNC":      4506,
		"GMS_MSGALL_END":         4999,
	}
)

func (x GMS_PROTYPE) Enum() *GMS_PROTYPE {
	p := new(GMS_PROTYPE)
	*p = x
	return p
}

func (x GMS_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GMS_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[9].Descriptor()
}

func (GMS_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[9]
}

func (x GMS_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GMS_PROTYPE.Descriptor instead.
func (GMS_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{9}
}

var File_proto_iid_proto protoreflect.FileDescriptor

var file_proto_iid_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x50, 0x52, 0x4f, 0x2a, 0xba, 0x04, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45,
	0x52, 0x53, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x30, 0x30, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0e, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0xe8, 0x07,
	0x12, 0x13, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0xe9, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xea, 0x07, 0x12, 0x14, 0x0a, 0x0f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x4e, 0x54, 0x46, 0x10,
	0xeb, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xec, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xed, 0x07,
	0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x45, 0x4c,
	0x45, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xee, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xef, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x53, 0x47,
	0x5f, 0x45, 0x4e, 0x44, 0x10, 0xcc, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xcd, 0x08, 0x12, 0x15, 0x0a, 0x10,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0xce, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x54, 0x45,
	0x4c, 0x4f, 0x53, 0x54, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xcf, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0xd0, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xd1, 0x08, 0x12, 0x18, 0x0a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x5f, 0x41, 0x43, 0x4b, 0x10, 0xd2, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x41, 0x5f, 0x4e, 0x54, 0x46, 0x10,
	0xd3, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x44,
	0x45, 0x54, 0x41, 0x49, 0x4c, 0x42, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xd4, 0x08, 0x12, 0x1b, 0x0a,
	0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c,
	0x45, 0x4e, 0x44, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xd5, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x4d, 0x59, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x49, 0x4e, 0x46, 0x4f, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xd6, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d,
	0x59, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x41, 0x43, 0x4b, 0x10,
	0xd7, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x52,
	0x4f, 0x4c, 0x45, 0x4c, 0x4f, 0x43, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xd8, 0x08, 0x12, 0x14, 0x0a,
	0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e, 0x44,
	0x10, 0x8a, 0x0a, 0x2a, 0x83, 0x01, 0x0a, 0x0d, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53,
	0x41, 0x4c, 0x5f, 0x31, 0x32, 0x35, 0x30, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x55, 0x49,
	0x4c, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xe3,
	0x09, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xe4, 0x09, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x55, 0x49,
	0x4c, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xe5,
	0x09, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xe6, 0x09, 0x2a, 0x81, 0x01, 0x0a, 0x0b, 0x50, 0x45,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49,
	0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x31, 0x35, 0x30, 0x30, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x10, 0x50, 0x45, 0x54, 0x5f, 0x41, 0x44, 0x4f, 0x50, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xdd, 0x0b, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x45, 0x54, 0x5f, 0x41, 0x44, 0x4f, 0x50,
	0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xde, 0x0b, 0x12, 0x17, 0x0a, 0x12, 0x50,
	0x45, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x4f, 0x4e, 0x45, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xdf, 0x0b, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x45,
	0x41, 0x53, 0x45, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xe0, 0x0b, 0x2a, 0x84, 0x02,
	0x0a, 0x0c, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x31, 0x37, 0x35, 0x30,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42,
	0x45, 0x47, 0x49, 0x4e, 0x10, 0xd6, 0x0d, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x48, 0x41, 0x54, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x41, 0x59, 0x10, 0xd7, 0x0d, 0x12, 0x1d,
	0x0a, 0x18, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0xd8, 0x0d, 0x12, 0x1d, 0x0a,
	0x18, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd9, 0x0d, 0x12, 0x11, 0x0a, 0x0c,
	0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xba, 0x0e, 0x12,
	0x1d, 0x0a, 0x18, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x43, 0x48,
	0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xbd, 0x0e, 0x12, 0x15,
	0x0a, 0x10, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4e,
	0x54, 0x46, 0x10, 0xbe, 0x0e, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x47, 0x4c,
	0x4f, 0x42, 0x41, 0x4c, 0x4d, 0x53, 0x47, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xbf, 0x0e, 0x12, 0x14,
	0x0a, 0x0f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0xcf, 0x0f, 0x2a, 0xdc, 0x03, 0x0a, 0x0c, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53,
	0x41, 0x4c, 0x5f, 0x32, 0x30, 0x30, 0x30, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0xd0, 0x0f, 0x12, 0x1b,
	0x0a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4f, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0xd1, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x45, 0x57, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x54, 0x46, 0x10,
	0xd2, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x47,
	0x45, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd3, 0x0f, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd4,
	0x0f, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd5, 0x0f, 0x12, 0x1b, 0x0a, 0x16, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48,
	0x53, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd6, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0xd7, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x45, 0x57, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd8, 0x0f, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xb4, 0x10, 0x12, 0x15, 0x0a, 0x10,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0xb5, 0x10, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xb7, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41,
	0x43, 0x4b, 0x10, 0xb8, 0x10, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x4e,
	0x42, 0x49, 0x4e, 0x44, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x53, 0x5f, 0x41, 0x43, 0x4b, 0x10,
	0xb9, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xba, 0x10, 0x12, 0x18, 0x0a, 0x13,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x4d, 0x41, 0x49, 0x4c, 0x5f,
	0x4e, 0x54, 0x46, 0x10, 0xbb, 0x10, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4e,
	0x45, 0x57, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xbc, 0x10, 0x12, 0x14, 0x0a,
	0x0f, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e, 0x44,
	0x10, 0xc9, 0x11, 0x2a, 0xde, 0x02, 0x0a, 0x0e, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x50,
	0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52,
	0x53, 0x41, 0x4c, 0x5f, 0x32, 0x32, 0x35, 0x30, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x10, 0x46, 0x52,
	0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0xca,
	0x11, 0x12, 0x17, 0x0a, 0x12, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xcb, 0x11, 0x12, 0x19, 0x0a, 0x14, 0x46, 0x52,
	0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0xcc, 0x11, 0x12, 0x1a, 0x0a, 0x15, 0x46, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xcd,
	0x11, 0x12, 0x19, 0x0a, 0x14, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xce, 0x11, 0x12, 0x13, 0x0a, 0x0e,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xae,
	0x12, 0x12, 0x17, 0x0a, 0x12, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xaf, 0x12, 0x12, 0x19, 0x0a, 0x14, 0x46, 0x52,
	0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x41,
	0x43, 0x4b, 0x10, 0xb0, 0x12, 0x12, 0x1a, 0x0a, 0x15, 0x46, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xb1,
	0x12, 0x12, 0x19, 0x0a, 0x14, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xb2, 0x12, 0x12, 0x1e, 0x0a, 0x19,
	0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xb3, 0x12, 0x12, 0x16, 0x0a, 0x11,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0xc3, 0x13, 0x2a, 0x5d, 0x0a, 0x0d, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53,
	0x41, 0x4c, 0x5f, 0x32, 0x35, 0x30, 0x30, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x16, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xc5, 0x13, 0x12, 0x1b, 0x0a, 0x16, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0xc6, 0x13, 0x2a, 0xf6, 0x02, 0x0a, 0x0c, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x50, 0x52, 0x4f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41,
	0x4c, 0x5f, 0x32, 0x37, 0x35, 0x30, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0xbe, 0x15, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0xbf, 0x15, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4d, 0x59,
	0x54, 0x41, 0x53, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xc0, 0x15, 0x12,
	0x15, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x54, 0x41, 0x53, 0x4b, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xc1, 0x15, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53,
	0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xc2, 0x15,
	0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x55, 0x50, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xc3, 0x15, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xa2, 0x16, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41,
	0x43, 0x4b, 0x10, 0xa3, 0x16, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4d, 0x59,
	0x54, 0x41, 0x53, 0x4b, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xa4, 0x16, 0x12,
	0x15, 0x0a, 0x10, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x47, 0x45, 0x54, 0x54, 0x41, 0x53, 0x4b, 0x5f,
	0x41, 0x43, 0x4b, 0x10, 0xa5, 0x16, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53,
	0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xa6, 0x16,
	0x12, 0x1a, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4f, 0x42, 0x54, 0x41, 0x49, 0x4e, 0x52,
	0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xa7, 0x16, 0x12, 0x18, 0x0a, 0x13,
	0x54, 0x41, 0x53, 0x4b, 0x5f, 0x47, 0x49, 0x56, 0x45, 0x55, 0x50, 0x54, 0x41, 0x53, 0x4b, 0x5f,
	0x41, 0x43, 0x4b, 0x10, 0xa8, 0x16, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4d,
	0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xb7, 0x17, 0x2a, 0x90, 0x01, 0x0a,
	0x0b, 0x4d, 0x4d, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x33, 0x30, 0x30, 0x30, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0d, 0x4d, 0x4d, 0x53, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45, 0x47, 0x49,
	0x4e, 0x10, 0xb8, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x4d, 0x53, 0x5f, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x4d, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xb9, 0x17, 0x12, 0x10,
	0x0a, 0x0b, 0x4d, 0x4d, 0x53, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xc4, 0x18,
	0x12, 0x18, 0x0a, 0x13, 0x4d, 0x4d, 0x53, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x4d, 0x41, 0x4b,
	0x49, 0x4e, 0x47, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xc5, 0x18, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x4d,
	0x53, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xb1, 0x19, 0x2a,
	0xa6, 0x02, 0x0a, 0x0b, 0x47, 0x4d, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x34, 0x30, 0x30,
	0x30, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0d, 0x47, 0x4d, 0x53, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42,
	0x45, 0x47, 0x49, 0x4e, 0x10, 0xa0, 0x1f, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x4d, 0x53, 0x5f, 0x45,
	0x4e, 0x54, 0x45, 0x52, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa1, 0x1f, 0x12,
	0x16, 0x0a, 0x11, 0x47, 0x4d, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x53, 0x59, 0x4e, 0x10, 0xa2, 0x1f, 0x12, 0x10, 0x0a, 0x0b, 0x47, 0x4d, 0x53, 0x5f, 0x4d,
	0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x94, 0x23, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x4d, 0x53,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x95,
	0x23, 0x12, 0x18, 0x0a, 0x13, 0x47, 0x4d, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x55, 0x53, 0x45,
	0x52, 0x4c, 0x4f, 0x43, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x96, 0x23, 0x12, 0x16, 0x0a, 0x11, 0x47,
	0x4d, 0x53, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0x97, 0x23, 0x12, 0x19, 0x0a, 0x14, 0x47, 0x4d, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x53,
	0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x98, 0x23, 0x12, 0x1b,
	0x0a, 0x16, 0x47, 0x4d, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x99, 0x23, 0x12, 0x16, 0x0a, 0x11, 0x47,
	0x4d, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x59, 0x4e, 0x43,
	0x10, 0x9a, 0x23, 0x12, 0x13, 0x0a, 0x0e, 0x47, 0x4d, 0x53, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c,
	0x4c, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x87, 0x27, 0x42, 0x54, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x50, 0x01, 0x5a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x6c,
	0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x70, 0x72, 0x6f,
	0xaa, 0x02, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_iid_proto_rawDescOnce sync.Once
	file_proto_iid_proto_rawDescData = file_proto_iid_proto_rawDesc
)

func file_proto_iid_proto_rawDescGZIP() []byte {
	file_proto_iid_proto_rawDescOnce.Do(func() {
		file_proto_iid_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_iid_proto_rawDescData)
	})
	return file_proto_iid_proto_rawDescData
}

var file_proto_iid_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_proto_iid_proto_goTypes = []interface{}{
	(USER_PROTYPE)(0),   // 0: PRO.USER_PROTYPE
	(BUILD_PROTYPE)(0),  // 1: PRO.BUILD_PROTYPE
	(PET_PROTYPE)(0),    // 2: PRO.PET_PROTYPE
	(CHAT_PROTYPE)(0),   // 3: PRO.CHAT_PROTYPE
	(MAIL_PROTYPE)(0),   // 4: PRO.MAIL_PROTYPE
	(FRIEND_PROTYPE)(0), // 5: PRO.FRIEND_PROTYPE
	(ITEMS_PROTYPE)(0),  // 6: PRO.ITEMS_PROTYPE
	(TASK_PROTYPE)(0),   // 7: PRO.TASK_PROTYPE
	(MMS_PROTYPE)(0),    // 8: PRO.MMS_PROTYPE
	(GMS_PROTYPE)(0),    // 9: PRO.GMS_PROTYPE
}
var file_proto_iid_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_iid_proto_init() }
func file_proto_iid_proto_init() {
	if File_proto_iid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_iid_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_iid_proto_goTypes,
		DependencyIndexes: file_proto_iid_proto_depIdxs,
		EnumInfos:         file_proto_iid_proto_enumTypes,
	}.Build()
	File_proto_iid_proto = out.File
	file_proto_iid_proto_rawDesc = nil
	file_proto_iid_proto_goTypes = nil
	file_proto_iid_proto_depIdxs = nil
}
