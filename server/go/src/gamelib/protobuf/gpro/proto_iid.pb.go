// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: proto_iid.proto

package gpro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//用户定义的协议
type USER_PROTYPE int32

const (
	USER_PROTYPE_UNIVERSAL_3000 USER_PROTYPE = 0
	USER_PROTYPE_ERK_USER_NUM   USER_PROTYPE = 3000
	//用户协议
	USER_PROTYPE_USER_LOGIN_REQ         USER_PROTYPE = 3001
	USER_PROTYPE_USER_LOGIN_ACK         USER_PROTYPE = 3002
	USER_PROTYPE_USER_PROXYLOGIN_REQ    USER_PROTYPE = 3003
	USER_PROTYPE_USER_PROXYLOGIN_ACK    USER_PROTYPE = 3004
	USER_PROTYPE_USER_LOGOUT_NTF        USER_PROTYPE = 3005
	USER_PROTYPE_USER_ROLELIST_ACK      USER_PROTYPE = 3007
	USER_PROTYPE_USER_ROLESELECT_REQ    USER_PROTYPE = 3008
	USER_PROTYPE_USER_ROLESELECT_ACK    USER_PROTYPE = 3009
	USER_PROTYPE_USER_ROLECREATE_REQ    USER_PROTYPE = 3010
	USER_PROTYPE_USER_ROLECREATE_ACK    USER_PROTYPE = 3011
	USER_PROTYPE_USER_ROLEDETAILA_NTF   USER_PROTYPE = 3012
	USER_PROTYPE_USER_ROLEDETAILB_NTF   USER_PROTYPE = 3013
	USER_PROTYPE_USER_ROLEDETAILEND_NTF USER_PROTYPE = 3014
)

// Enum value maps for USER_PROTYPE.
var (
	USER_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_3000",
		3000: "ERK_USER_NUM",
		3001: "USER_LOGIN_REQ",
		3002: "USER_LOGIN_ACK",
		3003: "USER_PROXYLOGIN_REQ",
		3004: "USER_PROXYLOGIN_ACK",
		3005: "USER_LOGOUT_NTF",
		3007: "USER_ROLELIST_ACK",
		3008: "USER_ROLESELECT_REQ",
		3009: "USER_ROLESELECT_ACK",
		3010: "USER_ROLECREATE_REQ",
		3011: "USER_ROLECREATE_ACK",
		3012: "USER_ROLEDETAILA_NTF",
		3013: "USER_ROLEDETAILB_NTF",
		3014: "USER_ROLEDETAILEND_NTF",
	}
	USER_PROTYPE_value = map[string]int32{
		"UNIVERSAL_3000":         0,
		"ERK_USER_NUM":           3000,
		"USER_LOGIN_REQ":         3001,
		"USER_LOGIN_ACK":         3002,
		"USER_PROXYLOGIN_REQ":    3003,
		"USER_PROXYLOGIN_ACK":    3004,
		"USER_LOGOUT_NTF":        3005,
		"USER_ROLELIST_ACK":      3007,
		"USER_ROLESELECT_REQ":    3008,
		"USER_ROLESELECT_ACK":    3009,
		"USER_ROLECREATE_REQ":    3010,
		"USER_ROLECREATE_ACK":    3011,
		"USER_ROLEDETAILA_NTF":   3012,
		"USER_ROLEDETAILB_NTF":   3013,
		"USER_ROLEDETAILEND_NTF": 3014,
	}
)

func (x USER_PROTYPE) Enum() *USER_PROTYPE {
	p := new(USER_PROTYPE)
	*p = x
	return p
}

func (x USER_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USER_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[0].Descriptor()
}

func (USER_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[0]
}

func (x USER_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USER_PROTYPE.Descriptor instead.
func (USER_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{0}
}

type BUILD_PROTYPE int32

const (
	BUILD_PROTYPE_UNIVERSAL_3500    BUILD_PROTYPE = 0
	BUILD_PROTYPE_BUILD_ADDITEM_REQ BUILD_PROTYPE = 3501
	BUILD_PROTYPE_BUILD_ADDITEM_ACK BUILD_PROTYPE = 3502
	BUILD_PROTYPE_BUILD_DELITEM_REQ BUILD_PROTYPE = 3503
	BUILD_PROTYPE_BUILD_DELITEM_ACK BUILD_PROTYPE = 3504
)

// Enum value maps for BUILD_PROTYPE.
var (
	BUILD_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_3500",
		3501: "BUILD_ADDITEM_REQ",
		3502: "BUILD_ADDITEM_ACK",
		3503: "BUILD_DELITEM_REQ",
		3504: "BUILD_DELITEM_ACK",
	}
	BUILD_PROTYPE_value = map[string]int32{
		"UNIVERSAL_3500":    0,
		"BUILD_ADDITEM_REQ": 3501,
		"BUILD_ADDITEM_ACK": 3502,
		"BUILD_DELITEM_REQ": 3503,
		"BUILD_DELITEM_ACK": 3504,
	}
)

func (x BUILD_PROTYPE) Enum() *BUILD_PROTYPE {
	p := new(BUILD_PROTYPE)
	*p = x
	return p
}

func (x BUILD_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BUILD_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[1].Descriptor()
}

func (BUILD_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[1]
}

func (x BUILD_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BUILD_PROTYPE.Descriptor instead.
func (BUILD_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{1}
}

type PET_PROTYPE int32

const (
	PET_PROTYPE_UNIVERSAL_4000     PET_PROTYPE = 0
	PET_PROTYPE_PET_ADOPTONE_REQ   PET_PROTYPE = 4001
	PET_PROTYPE_PET_ADOPTONE_ACK   PET_PROTYPE = 4002
	PET_PROTYPE_PET_RELEASEONE_REQ PET_PROTYPE = 4003
	PET_PROTYPE_PET_RELEASEONE_ACK PET_PROTYPE = 4004
)

// Enum value maps for PET_PROTYPE.
var (
	PET_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_4000",
		4001: "PET_ADOPTONE_REQ",
		4002: "PET_ADOPTONE_ACK",
		4003: "PET_RELEASEONE_REQ",
		4004: "PET_RELEASEONE_ACK",
	}
	PET_PROTYPE_value = map[string]int32{
		"UNIVERSAL_4000":     0,
		"PET_ADOPTONE_REQ":   4001,
		"PET_ADOPTONE_ACK":   4002,
		"PET_RELEASEONE_REQ": 4003,
		"PET_RELEASEONE_ACK": 4004,
	}
)

func (x PET_PROTYPE) Enum() *PET_PROTYPE {
	p := new(PET_PROTYPE)
	*p = x
	return p
}

func (x PET_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PET_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[2].Descriptor()
}

func (PET_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[2]
}

func (x PET_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PET_PROTYPE.Descriptor instead.
func (PET_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{2}
}

type CHAT_PROTYPE int32

const (
	CHAT_PROTYPE_UNIVERSAL_4500           CHAT_PROTYPE = 0
	CHAT_PROTYPE_CHAT_MSG_BEGIN           CHAT_PROTYPE = 4500
	CHAT_PROTYPE_CHAT_GLOBALMSG_NTF       CHAT_PROTYPE = 4501
	CHAT_PROTYPE_CHAT_USERCHANNELS_ACTIVE CHAT_PROTYPE = 4510
	CHAT_PROTYPE_CHAT_CUSTOMCHANNELID_REQ CHAT_PROTYPE = 4515
	CHAT_PROTYPE_CHAT_CUSTOMCHANNELID_ACK CHAT_PROTYPE = 4516
	CHAT_PROTYPE_CHAT_USERMSG_SAY         CHAT_PROTYPE = 4520
	CHAT_PROTYPE_CHAT_CHATMSG_NTF         CHAT_PROTYPE = 4521
	CHAT_PROTYPE_CHAT_MSG_END             CHAT_PROTYPE = 4800
)

// Enum value maps for CHAT_PROTYPE.
var (
	CHAT_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_4500",
		4500: "CHAT_MSG_BEGIN",
		4501: "CHAT_GLOBALMSG_NTF",
		4510: "CHAT_USERCHANNELS_ACTIVE",
		4515: "CHAT_CUSTOMCHANNELID_REQ",
		4516: "CHAT_CUSTOMCHANNELID_ACK",
		4520: "CHAT_USERMSG_SAY",
		4521: "CHAT_CHATMSG_NTF",
		4800: "CHAT_MSG_END",
	}
	CHAT_PROTYPE_value = map[string]int32{
		"UNIVERSAL_4500":           0,
		"CHAT_MSG_BEGIN":           4500,
		"CHAT_GLOBALMSG_NTF":       4501,
		"CHAT_USERCHANNELS_ACTIVE": 4510,
		"CHAT_CUSTOMCHANNELID_REQ": 4515,
		"CHAT_CUSTOMCHANNELID_ACK": 4516,
		"CHAT_USERMSG_SAY":         4520,
		"CHAT_CHATMSG_NTF":         4521,
		"CHAT_MSG_END":             4800,
	}
)

func (x CHAT_PROTYPE) Enum() *CHAT_PROTYPE {
	p := new(CHAT_PROTYPE)
	*p = x
	return p
}

func (x CHAT_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CHAT_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[3].Descriptor()
}

func (CHAT_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[3]
}

func (x CHAT_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CHAT_PROTYPE.Descriptor instead.
func (CHAT_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{3}
}

type MAIL_PROTYPE int32

const (
	MAIL_PROTYPE_UNIVERSAL_5000         MAIL_PROTYPE = 0
	MAIL_PROTYPE_MAIL_MSG_BEGIN         MAIL_PROTYPE = 5000
	MAIL_PROTYPE_MAIL_NEWMAIL_NTF       MAIL_PROTYPE = 5001
	MAIL_PROTYPE_MAIL_MAILGET_REQ       MAIL_PROTYPE = 5002
	MAIL_PROTYPE_MAIL_MAILGET_ACK       MAIL_PROTYPE = 5003
	MAIL_PROTYPE_MAIL_USERONLINE_ACTIVE MAIL_PROTYPE = 5004
	MAIL_PROTYPE_MAIL_READMAIL_REQ      MAIL_PROTYPE = 5005
	MAIL_PROTYPE_MAIL_READMAIL_ACK      MAIL_PROTYPE = 5006
	MAIL_PROTYPE_MAIL_DELETEMAIL_REQ    MAIL_PROTYPE = 5007
	MAIL_PROTYPE_MAIL_DELETEMAIL_ACK    MAIL_PROTYPE = 5008
	MAIL_PROTYPE_MAIL_UNBINDATTACHS_REQ MAIL_PROTYPE = 5009
	MAIL_PROTYPE_MAIL_UNBINDATTACHS_ACK MAIL_PROTYPE = 5010
	MAIL_PROTYPE_MAIL_SYSTEMMAIL_REQ    MAIL_PROTYPE = 5201
	MAIL_PROTYPE_MAIL_SYSTEMMAIL_ACK    MAIL_PROTYPE = 5202
	MAIL_PROTYPE_MAIL_SYSTEMMAIL_NTF    MAIL_PROTYPE = 5203
	MAIL_PROTYPE_MAIL_NEWMAIL_REQ       MAIL_PROTYPE = 5204
	MAIL_PROTYPE_MAIL_NEWMAIL_ACK       MAIL_PROTYPE = 5205
	MAIL_PROTYPE_MAIL_MSG_END           MAIL_PROTYPE = 5240
	MAIL_PROTYPE_MAIL_MSGALL_END        MAIL_PROTYPE = 5249
)

// Enum value maps for MAIL_PROTYPE.
var (
	MAIL_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_5000",
		5000: "MAIL_MSG_BEGIN",
		5001: "MAIL_NEWMAIL_NTF",
		5002: "MAIL_MAILGET_REQ",
		5003: "MAIL_MAILGET_ACK",
		5004: "MAIL_USERONLINE_ACTIVE",
		5005: "MAIL_READMAIL_REQ",
		5006: "MAIL_READMAIL_ACK",
		5007: "MAIL_DELETEMAIL_REQ",
		5008: "MAIL_DELETEMAIL_ACK",
		5009: "MAIL_UNBINDATTACHS_REQ",
		5010: "MAIL_UNBINDATTACHS_ACK",
		5201: "MAIL_SYSTEMMAIL_REQ",
		5202: "MAIL_SYSTEMMAIL_ACK",
		5203: "MAIL_SYSTEMMAIL_NTF",
		5204: "MAIL_NEWMAIL_REQ",
		5205: "MAIL_NEWMAIL_ACK",
		5240: "MAIL_MSG_END",
		5249: "MAIL_MSGALL_END",
	}
	MAIL_PROTYPE_value = map[string]int32{
		"UNIVERSAL_5000":         0,
		"MAIL_MSG_BEGIN":         5000,
		"MAIL_NEWMAIL_NTF":       5001,
		"MAIL_MAILGET_REQ":       5002,
		"MAIL_MAILGET_ACK":       5003,
		"MAIL_USERONLINE_ACTIVE": 5004,
		"MAIL_READMAIL_REQ":      5005,
		"MAIL_READMAIL_ACK":      5006,
		"MAIL_DELETEMAIL_REQ":    5007,
		"MAIL_DELETEMAIL_ACK":    5008,
		"MAIL_UNBINDATTACHS_REQ": 5009,
		"MAIL_UNBINDATTACHS_ACK": 5010,
		"MAIL_SYSTEMMAIL_REQ":    5201,
		"MAIL_SYSTEMMAIL_ACK":    5202,
		"MAIL_SYSTEMMAIL_NTF":    5203,
		"MAIL_NEWMAIL_REQ":       5204,
		"MAIL_NEWMAIL_ACK":       5205,
		"MAIL_MSG_END":           5240,
		"MAIL_MSGALL_END":        5249,
	}
)

func (x MAIL_PROTYPE) Enum() *MAIL_PROTYPE {
	p := new(MAIL_PROTYPE)
	*p = x
	return p
}

func (x MAIL_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MAIL_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[4].Descriptor()
}

func (MAIL_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[4]
}

func (x MAIL_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MAIL_PROTYPE.Descriptor instead.
func (MAIL_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{4}
}

type FRIEND_PROTYPE int32

const (
	FRIEND_PROTYPE_UNIVERSAL_5250            FRIEND_PROTYPE = 0
	FRIEND_PROTYPE_FRIEND_MSG_BEGIN          FRIEND_PROTYPE = 5250
	FRIEND_PROTYPE_FRD_FRIENDLIST_REQ        FRIEND_PROTYPE = 5251
	FRIEND_PROTYPE_FRD_FRIENDLIST_ACK        FRIEND_PROTYPE = 5252
	FRIEND_PROTYPE_FRD_FRIENDINVITE_REQ      FRIEND_PROTYPE = 5253
	FRIEND_PROTYPE_FRD_FRIENDINVITE_ACK      FRIEND_PROTYPE = 5254
	FRIEND_PROTYPE_FRD_INVITECONFIRM_REQ     FRIEND_PROTYPE = 5255
	FRIEND_PROTYPE_FRD_INVITECONFIRM_ACK     FRIEND_PROTYPE = 5256
	FRIEND_PROTYPE_FRD_FRIENDDELETE_REQ      FRIEND_PROTYPE = 5257
	FRIEND_PROTYPE_FRD_FRIENDDELETE_ACK      FRIEND_PROTYPE = 5258
	FRIEND_PROTYPE_FRIEND_MSG_END            FRIEND_PROTYPE = 5400
	FRIEND_PROTYPE_FRD_FRIENDCHANGEOTHER_NTF FRIEND_PROTYPE = 5401
	FRIEND_PROTYPE_FRIEND_MSGALL_END         FRIEND_PROTYPE = 5449
)

// Enum value maps for FRIEND_PROTYPE.
var (
	FRIEND_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_5250",
		5250: "FRIEND_MSG_BEGIN",
		5251: "FRD_FRIENDLIST_REQ",
		5252: "FRD_FRIENDLIST_ACK",
		5253: "FRD_FRIENDINVITE_REQ",
		5254: "FRD_FRIENDINVITE_ACK",
		5255: "FRD_INVITECONFIRM_REQ",
		5256: "FRD_INVITECONFIRM_ACK",
		5257: "FRD_FRIENDDELETE_REQ",
		5258: "FRD_FRIENDDELETE_ACK",
		5400: "FRIEND_MSG_END",
		5401: "FRD_FRIENDCHANGEOTHER_NTF",
		5449: "FRIEND_MSGALL_END",
	}
	FRIEND_PROTYPE_value = map[string]int32{
		"UNIVERSAL_5250":            0,
		"FRIEND_MSG_BEGIN":          5250,
		"FRD_FRIENDLIST_REQ":        5251,
		"FRD_FRIENDLIST_ACK":        5252,
		"FRD_FRIENDINVITE_REQ":      5253,
		"FRD_FRIENDINVITE_ACK":      5254,
		"FRD_INVITECONFIRM_REQ":     5255,
		"FRD_INVITECONFIRM_ACK":     5256,
		"FRD_FRIENDDELETE_REQ":      5257,
		"FRD_FRIENDDELETE_ACK":      5258,
		"FRIEND_MSG_END":            5400,
		"FRD_FRIENDCHANGEOTHER_NTF": 5401,
		"FRIEND_MSGALL_END":         5449,
	}
)

func (x FRIEND_PROTYPE) Enum() *FRIEND_PROTYPE {
	p := new(FRIEND_PROTYPE)
	*p = x
	return p
}

func (x FRIEND_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FRIEND_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[5].Descriptor()
}

func (FRIEND_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[5]
}

func (x FRIEND_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FRIEND_PROTYPE.Descriptor instead.
func (FRIEND_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{5}
}

type ITEMS_PROTYPE int32

const (
	ITEMS_PROTYPE_UNIVERSAL_5500         ITEMS_PROTYPE = 0
	ITEMS_PROTYPE_ITEM_USERBINDITEMS_REQ ITEMS_PROTYPE = 5501
	ITEMS_PROTYPE_ITEM_USERBINDITEMS_ACK ITEMS_PROTYPE = 5502
)

// Enum value maps for ITEMS_PROTYPE.
var (
	ITEMS_PROTYPE_name = map[int32]string{
		0:    "UNIVERSAL_5500",
		5501: "ITEM_USERBINDITEMS_REQ",
		5502: "ITEM_USERBINDITEMS_ACK",
	}
	ITEMS_PROTYPE_value = map[string]int32{
		"UNIVERSAL_5500":         0,
		"ITEM_USERBINDITEMS_REQ": 5501,
		"ITEM_USERBINDITEMS_ACK": 5502,
	}
)

func (x ITEMS_PROTYPE) Enum() *ITEMS_PROTYPE {
	p := new(ITEMS_PROTYPE)
	*p = x
	return p
}

func (x ITEMS_PROTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ITEMS_PROTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_iid_proto_enumTypes[6].Descriptor()
}

func (ITEMS_PROTYPE) Type() protoreflect.EnumType {
	return &file_proto_iid_proto_enumTypes[6]
}

func (x ITEMS_PROTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ITEMS_PROTYPE.Descriptor instead.
func (ITEMS_PROTYPE) EnumDescriptor() ([]byte, []int) {
	return file_proto_iid_proto_rawDescGZIP(), []int{6}
}

var File_proto_iid_proto protoreflect.FileDescriptor

var file_proto_iid_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x50, 0x52, 0x4f, 0x2a, 0xfc, 0x02, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45,
	0x52, 0x53, 0x41, 0x4c, 0x5f, 0x33, 0x30, 0x30, 0x30, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0c, 0x45,
	0x52, 0x4b, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x55, 0x4d, 0x10, 0xb8, 0x17, 0x12, 0x13,
	0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0xb9, 0x17, 0x12, 0x13, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xba, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0xbb, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xbc, 0x17, 0x12, 0x14, 0x0a, 0x0f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x4e, 0x54, 0x46, 0x10,
	0xbd, 0x17, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xbf, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xc0, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xc1, 0x17, 0x12, 0x18,
	0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xc2, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10,
	0xc3, 0x17, 0x12, 0x19, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x44,
	0x45, 0x54, 0x41, 0x49, 0x4c, 0x41, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xc4, 0x17, 0x12, 0x19, 0x0a,
	0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c,
	0x42, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xc5, 0x17, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x4e,
	0x54, 0x46, 0x10, 0xc6, 0x17, 0x2a, 0x83, 0x01, 0x0a, 0x0d, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45,
	0x52, 0x53, 0x41, 0x4c, 0x5f, 0x33, 0x35, 0x30, 0x30, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x11, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0xad, 0x1b, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x41, 0x44, 0x44,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xae, 0x1b, 0x12, 0x16, 0x0a, 0x11, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x45, 0x51,
	0x10, 0xaf, 0x1b, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x4c,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xb0, 0x1b, 0x2a, 0x81, 0x01, 0x0a, 0x0b,
	0x50, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55,
	0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x34, 0x30, 0x30, 0x30, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x10, 0x50, 0x45, 0x54, 0x5f, 0x41, 0x44, 0x4f, 0x50, 0x54, 0x4f, 0x4e, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xa1, 0x1f, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x45, 0x54, 0x5f, 0x41, 0x44,
	0x4f, 0x50, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xa2, 0x1f, 0x12, 0x17, 0x0a,
	0x12, 0x50, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x4f, 0x4e, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xa3, 0x1f, 0x12, 0x17, 0x0a, 0x12, 0x50, 0x45, 0x54, 0x5f, 0x52, 0x45,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xa4, 0x1f, 0x2a,
	0xee, 0x01, 0x0a, 0x0c, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50, 0x45,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x34, 0x35,
	0x30, 0x30, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47,
	0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x94, 0x23, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x48, 0x41,
	0x54, 0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x4d, 0x53, 0x47, 0x5f, 0x4e, 0x54, 0x46, 0x10,
	0x95, 0x23, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x9e,
	0x23, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d,
	0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xa3, 0x23,
	0x12, 0x1d, 0x0a, 0x18, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xa4, 0x23, 0x12,
	0x15, 0x0a, 0x10, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4d, 0x53, 0x47, 0x5f,
	0x53, 0x41, 0x59, 0x10, 0xa8, 0x23, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xa9, 0x23, 0x12, 0x11, 0x0a,
	0x0c, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xc0, 0x25,
	0x2a, 0xdc, 0x03, 0x0a, 0x0c, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x35,
	0x30, 0x30, 0x30, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x88, 0x27, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x4e, 0x45, 0x57, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x89,
	0x27, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x47, 0x45,
	0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x8a, 0x27, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x8b, 0x27, 0x12,
	0x1b, 0x0a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x8c, 0x27, 0x12, 0x16, 0x0a, 0x11,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0x8d, 0x27, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x41,
	0x44, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x8e, 0x27, 0x12, 0x18, 0x0a, 0x13,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0x8f, 0x27, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x90, 0x27,
	0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x41,
	0x54, 0x54, 0x41, 0x43, 0x48, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x91, 0x27, 0x12, 0x1b, 0x0a,
	0x16, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x48, 0x53, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x92, 0x27, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xd1, 0x28, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xd2, 0x28, 0x12, 0x18,
	0x0a, 0x13, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0xd3, 0x28, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c,
	0x5f, 0x4e, 0x45, 0x57, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd4, 0x28, 0x12,
	0x15, 0x0a, 0x10, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x45, 0x57, 0x4d, 0x41, 0x49, 0x4c, 0x5f,
	0x41, 0x43, 0x4b, 0x10, 0xd5, 0x28, 0x12, 0x11, 0x0a, 0x0c, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4d,
	0x53, 0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xf8, 0x28, 0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x81, 0x29, 0x2a,
	0xde, 0x02, 0x0a, 0x0e, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f,
	0x35, 0x32, 0x35, 0x30, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x10, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x82, 0x29, 0x12, 0x17, 0x0a,
	0x12, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0x83, 0x29, 0x12, 0x17, 0x0a, 0x12, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52,
	0x49, 0x45, 0x4e, 0x44, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x84, 0x29, 0x12,
	0x19, 0x0a, 0x14, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x85, 0x29, 0x12, 0x19, 0x0a, 0x14, 0x46, 0x52,
	0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x41,
	0x43, 0x4b, 0x10, 0x86, 0x29, 0x12, 0x1a, 0x0a, 0x15, 0x46, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x87,
	0x29, 0x12, 0x1a, 0x0a, 0x15, 0x46, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x88, 0x29, 0x12, 0x19, 0x0a,
	0x14, 0x46, 0x52, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x89, 0x29, 0x12, 0x19, 0x0a, 0x14, 0x46, 0x52, 0x44, 0x5f,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x4b,
	0x10, 0x8a, 0x29, 0x12, 0x13, 0x0a, 0x0e, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x53,
	0x47, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x98, 0x2a, 0x12, 0x1e, 0x0a, 0x19, 0x46, 0x52, 0x44, 0x5f,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x4f, 0x54, 0x48, 0x45,
	0x52, 0x5f, 0x4e, 0x54, 0x46, 0x10, 0x99, 0x2a, 0x12, 0x16, 0x0a, 0x11, 0x46, 0x52, 0x49, 0x45,
	0x4e, 0x44, 0x5f, 0x4d, 0x53, 0x47, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0xc9, 0x2a,
	0x2a, 0x5d, 0x0a, 0x0d, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x59, 0x50,
	0x45, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52, 0x53, 0x41, 0x4c, 0x5f, 0x35,
	0x35, 0x30, 0x30, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x16, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0xfd, 0x2a, 0x12, 0x1b, 0x0a, 0x16, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x42,
	0x49, 0x4e, 0x44, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0xfe, 0x2a, 0x42,
	0x54, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x50, 0x01,
	0x5a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0xaa, 0x02, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d,
	0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_iid_proto_rawDescOnce sync.Once
	file_proto_iid_proto_rawDescData = file_proto_iid_proto_rawDesc
)

func file_proto_iid_proto_rawDescGZIP() []byte {
	file_proto_iid_proto_rawDescOnce.Do(func() {
		file_proto_iid_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_iid_proto_rawDescData)
	})
	return file_proto_iid_proto_rawDescData
}

var file_proto_iid_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_iid_proto_goTypes = []interface{}{
	(USER_PROTYPE)(0),   // 0: PRO.USER_PROTYPE
	(BUILD_PROTYPE)(0),  // 1: PRO.BUILD_PROTYPE
	(PET_PROTYPE)(0),    // 2: PRO.PET_PROTYPE
	(CHAT_PROTYPE)(0),   // 3: PRO.CHAT_PROTYPE
	(MAIL_PROTYPE)(0),   // 4: PRO.MAIL_PROTYPE
	(FRIEND_PROTYPE)(0), // 5: PRO.FRIEND_PROTYPE
	(ITEMS_PROTYPE)(0),  // 6: PRO.ITEMS_PROTYPE
}
var file_proto_iid_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_iid_proto_init() }
func file_proto_iid_proto_init() {
	if File_proto_iid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_iid_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_iid_proto_goTypes,
		DependencyIndexes: file_proto_iid_proto_depIdxs,
		EnumInfos:         file_proto_iid_proto_enumTypes,
	}.Build()
	File_proto_iid_proto = out.File
	file_proto_iid_proto_rawDesc = nil
	file_proto_iid_proto_goTypes = nil
	file_proto_iid_proto_depIdxs = nil
}
