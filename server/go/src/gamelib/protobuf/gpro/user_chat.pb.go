// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: user_chat.proto

package gpro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatChannelType int32

const (
	ChatChannelType_ChatChannelT_Init ChatChannelType = 0
	//全局广播
	ChatChannelType_ChatChannelT_Global ChatChannelType = 1
	//频道聊天
	ChatChannelType_ChatChannelT_Channel ChatChannelType = 2
	//工会聊天
	ChatChannelType_ChatChannelT_Union ChatChannelType = 3
	//user to user
	ChatChannelType_ChatChannelT_Single ChatChannelType = 4
	//自定义聊天
	ChatChannelType_ChatChannelT_Custom ChatChannelType = 5
	ChatChannelType_ChatChannelT_Max    ChatChannelType = 6
)

// Enum value maps for ChatChannelType.
var (
	ChatChannelType_name = map[int32]string{
		0: "ChatChannelT_Init",
		1: "ChatChannelT_Global",
		2: "ChatChannelT_Channel",
		3: "ChatChannelT_Union",
		4: "ChatChannelT_Single",
		5: "ChatChannelT_Custom",
		6: "ChatChannelT_Max",
	}
	ChatChannelType_value = map[string]int32{
		"ChatChannelT_Init":    0,
		"ChatChannelT_Global":  1,
		"ChatChannelT_Channel": 2,
		"ChatChannelT_Union":   3,
		"ChatChannelT_Single":  4,
		"ChatChannelT_Custom":  5,
		"ChatChannelT_Max":     6,
	}
)

func (x ChatChannelType) Enum() *ChatChannelType {
	p := new(ChatChannelType)
	*p = x
	return p
}

func (x ChatChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_chat_proto_enumTypes[0].Descriptor()
}

func (ChatChannelType) Type() protoreflect.EnumType {
	return &file_user_chat_proto_enumTypes[0]
}

func (x ChatChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatChannelType.Descriptor instead.
func (ChatChannelType) EnumDescriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{0}
}

type ChatMessageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//发送人 20+64 = 84
	SendUserIid  int64  `protobuf:"varint,1,opt,name=send_user_iid,json=sendUserIid,proto3" json:"send_user_iid,omitempty"`
	SendNickname string `protobuf:"bytes,2,opt,name=send_nickname,json=sendNickname,proto3" json:"send_nickname,omitempty"`
	//发送时间秒
	SendTime int32 `protobuf:"varint,3,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	//max len 216
	MsgContent string `protobuf:"bytes,5,opt,name=msg_content,json=msgContent,proto3" json:"msg_content,omitempty"`
}

func (x *ChatMessageItem) Reset() {
	*x = ChatMessageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageItem) ProtoMessage() {}

func (x *ChatMessageItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageItem.ProtoReflect.Descriptor instead.
func (*ChatMessageItem) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessageItem) GetSendUserIid() int64 {
	if x != nil {
		return x.SendUserIid
	}
	return 0
}

func (x *ChatMessageItem) GetSendNickname() string {
	if x != nil {
		return x.SendNickname
	}
	return ""
}

func (x *ChatMessageItem) GetSendTime() int32 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *ChatMessageItem) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

type ChatMessageItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []*ChatMessageItem `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *ChatMessageItems) Reset() {
	*x = ChatMessageItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageItems) ProtoMessage() {}

func (x *ChatMessageItems) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageItems.ProtoReflect.Descriptor instead.
func (*ChatMessageItems) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessageItems) GetMsgs() []*ChatMessageItem {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type ChatChannelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       ChatChannelType `protobuf:"varint,1,opt,name=type,proto3,enum=PRO.ChatChannelType" json:"type,omitempty"`
	Channeldid int64           `protobuf:"varint,2,opt,name=channeldid,proto3" json:"channeldid,omitempty"`
}

func (x *ChatChannelInfo) Reset() {
	*x = ChatChannelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatChannelInfo) ProtoMessage() {}

func (x *ChatChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatChannelInfo.ProtoReflect.Descriptor instead.
func (*ChatChannelInfo) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatChannelInfo) GetType() ChatChannelType {
	if x != nil {
		return x.Type
	}
	return ChatChannelType_ChatChannelT_Init
}

func (x *ChatChannelInfo) GetChanneldid() int64 {
	if x != nil {
		return x.Channeldid
	}
	return 0
}

type Chat_GlobalMsgNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//max 50 msgs
	Msgs *ChatMessageItems `protobuf:"bytes,2,opt,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *Chat_GlobalMsgNtf) Reset() {
	*x = Chat_GlobalMsgNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat_GlobalMsgNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat_GlobalMsgNtf) ProtoMessage() {}

func (x *Chat_GlobalMsgNtf) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat_GlobalMsgNtf.ProtoReflect.Descriptor instead.
func (*Chat_GlobalMsgNtf) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{3}
}

func (x *Chat_GlobalMsgNtf) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Chat_GlobalMsgNtf) GetMsgs() *ChatMessageItems {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type Chat_UserChannelsActive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken   *UserToken         `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	Channels []*ChatChannelInfo `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *Chat_UserChannelsActive) Reset() {
	*x = Chat_UserChannelsActive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat_UserChannelsActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat_UserChannelsActive) ProtoMessage() {}

func (x *Chat_UserChannelsActive) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat_UserChannelsActive.ProtoReflect.Descriptor instead.
func (*Chat_UserChannelsActive) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{4}
}

func (x *Chat_UserChannelsActive) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Chat_UserChannelsActive) GetChannels() []*ChatChannelInfo {
	if x != nil {
		return x.Channels
	}
	return nil
}

type Chat_CustomChannelIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
}

func (x *Chat_CustomChannelIdReq) Reset() {
	*x = Chat_CustomChannelIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat_CustomChannelIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat_CustomChannelIdReq) ProtoMessage() {}

func (x *Chat_CustomChannelIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat_CustomChannelIdReq.ProtoReflect.Descriptor instead.
func (*Chat_CustomChannelIdReq) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{5}
}

func (x *Chat_CustomChannelIdReq) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

type Chat_CustomChannelIdAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken *UserToken `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	//0:success 1:failed
	Result  int32            `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	Channel *ChatChannelInfo `protobuf:"bytes,3,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
}

func (x *Chat_CustomChannelIdAck) Reset() {
	*x = Chat_CustomChannelIdAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat_CustomChannelIdAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat_CustomChannelIdAck) ProtoMessage() {}

func (x *Chat_CustomChannelIdAck) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat_CustomChannelIdAck.ProtoReflect.Descriptor instead.
func (*Chat_CustomChannelIdAck) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{6}
}

func (x *Chat_CustomChannelIdAck) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Chat_CustomChannelIdAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Chat_CustomChannelIdAck) GetChannel() *ChatChannelInfo {
	if x != nil {
		return x.Channel
	}
	return nil
}

type Chat_UserMsgSay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken   *UserToken       `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	Channel  *ChatChannelInfo `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Nickname string           `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	//max len 216
	MsgContent string `protobuf:"bytes,4,opt,name=msg_content,json=msgContent,proto3" json:"msg_content,omitempty"`
}

func (x *Chat_UserMsgSay) Reset() {
	*x = Chat_UserMsgSay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat_UserMsgSay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat_UserMsgSay) ProtoMessage() {}

func (x *Chat_UserMsgSay) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat_UserMsgSay.ProtoReflect.Descriptor instead.
func (*Chat_UserMsgSay) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{7}
}

func (x *Chat_UserMsgSay) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Chat_UserMsgSay) GetChannel() *ChatChannelInfo {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Chat_UserMsgSay) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Chat_UserMsgSay) GetMsgContent() string {
	if x != nil {
		return x.MsgContent
	}
	return ""
}

type Chat_ChatMsgNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utoken  *UserToken        `protobuf:"bytes,1,opt,name=utoken,proto3,oneof" json:"utoken,omitempty"`
	Channel *ChatChannelInfo  `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Msgs    *ChatMessageItems `protobuf:"bytes,3,opt,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *Chat_ChatMsgNtf) Reset() {
	*x = Chat_ChatMsgNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_chat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat_ChatMsgNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat_ChatMsgNtf) ProtoMessage() {}

func (x *Chat_ChatMsgNtf) ProtoReflect() protoreflect.Message {
	mi := &file_user_chat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat_ChatMsgNtf.ProtoReflect.Descriptor instead.
func (*Chat_ChatMsgNtf) Descriptor() ([]byte, []int) {
	return file_user_chat_proto_rawDescGZIP(), []int{8}
}

func (x *Chat_ChatMsgNtf) GetUtoken() *UserToken {
	if x != nil {
		return x.Utoken
	}
	return nil
}

func (x *Chat_ChatMsgNtf) GetChannel() *ChatChannelInfo {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Chat_ChatMsgNtf) GetMsgs() *ChatMessageItems {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_user_chat_proto protoreflect.FileDescriptor

var file_user_chat_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x50, 0x52, 0x4f, 0x1a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01,
	0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x04,
	0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x5b, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x64, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x64, 0x69, 0x64, 0x22, 0x77, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x4d, 0x73, 0x67, 0x5f, 0x6e, 0x74, 0x66, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x04, 0x6d, 0x73, 0x67,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x01, 0x0a,
	0x18, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x52, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12,
	0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x74,
	0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x5f, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x01, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x73, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xa5, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67,
	0x5f, 0x6e, 0x74, 0x66, 0x12, 0x2b, 0x0a, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x50, 0x52, 0x4f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x75, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0xbb, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x5f, 0x49, 0x6e, 0x69, 0x74,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x54, 0x5f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x5f, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x5f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x17, 0x0a,
	0x13, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x5f, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x05, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x5f,
	0x4d, 0x61, 0x78, 0x10, 0x06, 0x42, 0x54, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x67, 0x70, 0x72, 0x6f, 0x50, 0x01, 0x5a, 0x15, 0x67, 0x61, 0x6d, 0x65, 0x6c, 0x69, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x70, 0x72, 0x6f, 0xaa, 0x02, 0x1b,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6d, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_user_chat_proto_rawDescOnce sync.Once
	file_user_chat_proto_rawDescData = file_user_chat_proto_rawDesc
)

func file_user_chat_proto_rawDescGZIP() []byte {
	file_user_chat_proto_rawDescOnce.Do(func() {
		file_user_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_chat_proto_rawDescData)
	})
	return file_user_chat_proto_rawDescData
}

var file_user_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_user_chat_proto_goTypes = []interface{}{
	(ChatChannelType)(0),            // 0: PRO.ChatChannelType
	(*ChatMessageItem)(nil),         // 1: PRO.ChatMessageItem
	(*ChatMessageItems)(nil),        // 2: PRO.ChatMessageItems
	(*ChatChannelInfo)(nil),         // 3: PRO.ChatChannelInfo
	(*Chat_GlobalMsgNtf)(nil),       // 4: PRO.Chat_GlobalMsg_ntf
	(*Chat_UserChannelsActive)(nil), // 5: PRO.Chat_UserChannels_active
	(*Chat_CustomChannelIdReq)(nil), // 6: PRO.Chat_CustomChannelId_req
	(*Chat_CustomChannelIdAck)(nil), // 7: PRO.Chat_CustomChannelId_ack
	(*Chat_UserMsgSay)(nil),         // 8: PRO.Chat_UserMsg_say
	(*Chat_ChatMsgNtf)(nil),         // 9: PRO.Chat_ChatMsg_ntf
	(*UserToken)(nil),               // 10: PRO.UserToken
}
var file_user_chat_proto_depIdxs = []int32{
	1,  // 0: PRO.ChatMessageItems.msgs:type_name -> PRO.ChatMessageItem
	0,  // 1: PRO.ChatChannelInfo.type:type_name -> PRO.ChatChannelType
	10, // 2: PRO.Chat_GlobalMsg_ntf.utoken:type_name -> PRO.UserToken
	2,  // 3: PRO.Chat_GlobalMsg_ntf.msgs:type_name -> PRO.ChatMessageItems
	10, // 4: PRO.Chat_UserChannels_active.utoken:type_name -> PRO.UserToken
	3,  // 5: PRO.Chat_UserChannels_active.channels:type_name -> PRO.ChatChannelInfo
	10, // 6: PRO.Chat_CustomChannelId_req.utoken:type_name -> PRO.UserToken
	10, // 7: PRO.Chat_CustomChannelId_ack.utoken:type_name -> PRO.UserToken
	3,  // 8: PRO.Chat_CustomChannelId_ack.channel:type_name -> PRO.ChatChannelInfo
	10, // 9: PRO.Chat_UserMsg_say.utoken:type_name -> PRO.UserToken
	3,  // 10: PRO.Chat_UserMsg_say.channel:type_name -> PRO.ChatChannelInfo
	10, // 11: PRO.Chat_ChatMsg_ntf.utoken:type_name -> PRO.UserToken
	3,  // 12: PRO.Chat_ChatMsg_ntf.channel:type_name -> PRO.ChatChannelInfo
	2,  // 13: PRO.Chat_ChatMsg_ntf.msgs:type_name -> PRO.ChatMessageItems
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_user_chat_proto_init() }
func file_user_chat_proto_init() {
	if File_user_chat_proto != nil {
		return
	}
	file_global_internal_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatChannelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat_GlobalMsgNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat_UserChannelsActive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat_CustomChannelIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat_CustomChannelIdAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat_UserMsgSay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_chat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat_ChatMsgNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_user_chat_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_user_chat_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_user_chat_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_user_chat_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_user_chat_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_user_chat_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_chat_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_chat_proto_goTypes,
		DependencyIndexes: file_user_chat_proto_depIdxs,
		EnumInfos:         file_user_chat_proto_enumTypes,
		MessageInfos:      file_user_chat_proto_msgTypes,
	}.Build()
	File_user_chat_proto = out.File
	file_user_chat_proto_rawDesc = nil
	file_user_chat_proto_goTypes = nil
	file_user_chat_proto_depIdxs = nil
}
